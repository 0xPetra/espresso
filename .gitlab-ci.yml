image: registry.gitlab.com/asuran-rs/containers/rust-sccache-docker:1.54

stages:
  - lint
  - check
  - build
  - test

variables:
  CARGO_HOME: $CI_PROJECT_DIR/.cargo

# Override git urls to use ci-job-token
before_script:
  - git config --global url."https://gitlab-ci-token:${CI_JOB_TOKEN}@gitlab.com/".insteadOf git://gitlab.com
  - git config --global url."https://gitlab-ci-token:${CI_JOB_TOKEN}@gitlab.com/".insteadOf ssh://git@gitlab.com
  - git config --global url."https://dl.cloudsmith.io/${CLOUDSMITH_ENTITLEMENT}/".insteadOf https://dl.cloudsmith.io/basic/
  - echo ""

lint:fmt:
  stage: lint
  tags:
    - docker
  script:
    - cargo fmt -- --check

lint:clippy:
  stage: lint
  tags:
    - docker
  script:
    - cargo clippy --workspace -- -D warnings
  cache:
    key: clippy-cache
    paths:
      - .cargo/
      - target/

lint:audit:
  stage: lint
  tags:
    - docker
  script:
    - cargo audit
  cache:
    key: audit-cache
    paths:
      - .cargo/
      - target/

## Unneeded until we are exporting artifacts for other uses
#build:
#  stage: build
#  tags:
#    - docker
#  script:
#    - cargo build --workspace --release
#  cache:
#    key: build-cache
#    paths:
#      - .cargo/
#      - target/

test:
  stage: test
  tags:
    - docker
  script:
    - cargo test --workspace --release
  cache:
    key: test-cache
    paths:
      - .cargo/
      - target/

test:fuzzing:
  stage: test
  tags:
    - docker
  script:
    - cd zerok/zerok_lib; cargo fuzz run --release -s none multixfr_wallet -- -max_total_time=20m
  cache:
    key: fuzzing-cache
    paths:
      - .cargo/
      - target/
  only:
    - triggers
    - schedules
    - web
  allow_failure: true

# Currently takes over an hour to run, we wanna fix that first.
# test:extended:
#   stage: test
#   tags:
#     - docker
#   script:
#     - cargo test --release --workspace -- --ignored
#   cache:
#     key: extended-test-cache
#     paths:
#       - .cargo/
#       - target/
#   only:
#     - triggers
#     - schedules
#     - web
#   allow_failure: true

