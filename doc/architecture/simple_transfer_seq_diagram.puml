@startuml
autonumber
Actor Alice
Actor Bob
Database EsQS

EsQS --> Validator: subscribe_for_events(5)

WalletAlice --> EsQS: subscribe_for_blocks(14)
WalletBob --> EsQS: subscribe_for_blocks(20)

WalletAlice --> Validator: latest_block_id()
Validator --> WalletAlice: 78

WalletAlice --> EsQS: get_cap_state(78)
EsQS --> WalletAlice: cap_state_78


WalletAlice -> WalletAlice: validate(cap_state_78)

WalletBob --> Validator: latest_block_id()
Validator --> WalletBob: 78

WalletBob --> EsQS: get_cap_state(78)
EsQS --> WalletBob: cap_state_78
WalletBob -> WalletBob: validate(cap_state_78)


Alice --> WalletAlice: key_gen()
WalletAlice --> Alice: (sk_a,pk_a,addr_a)

note right Alice
Alice needs to register her public key in case she wants her assets unfrozen.
end note
WalletAlice --> AddressBook: register_addr_and_enc_pub_key(addr_a,pk_a)

Bob --> WalletBob: key_gen()
WalletBob --> Bob: (sk_b,pk_b, addr_b)

note right Alice
Bob needs to register his public key in case she wants his assets unfrozen.
end note
WalletBob --> AddressBook: register_addr_and_enc_pub_key(addr_b,pk_b)

Bob --> Alice: (pk_b,addr_b)

note right Alice
Alice balance in USDC is 100
end note

note right Bob
Bob balance in USDC is 20
end note

note right Alice
For V1 fees will be 0.
end note

Validator -> EsQS: new_block_79

EsQS -> WalletAlice: new_block_79
note right WalletAlice
Check in particular the Quorum Certificate.
end note
WalletAlice -> WalletAlice: validate_apply(new_block_79)

EsQS -> WalletBob: new_block_79
note right WalletBob
Check in particular the Quorum Certificate.
end note
WalletBob -> WalletBob: validate_apply(new_block_79)

Alice --> WalletAlice: transfer_asset(sk_a,USDC,15,pk_b,addr_b)


note right WalletAlice
Memo is part of the transaction and stored on chain
end note

WalletAlice --> WalletAlice: tx = build_tx(sk_a,USDC,15,pk_b,addr_b,cap_state_78)

WalletAlice --> Validator: submit_tx(tx)

Validator --> EsQS :new_block_80
EsQS --> WalletBob:new_block_80
WalletBob -> WalletBob: validate_apply(new_block_80)
EsQS --> WalletAlice:new_block_80
WalletAlice -> WalletAlice: validate_apply(new_block_80)

note right WalletBob
Bob decrypts the memos from the new block.
end note
WalletBob --> WalletBob: memos = get_memos_from_block(new_block_79)
WalletBob --> WalletBob: for each memo in memos: \n   plain = decrypt(sk_b,memo) \n   if plain != Err: \n     update local state(plain)

note right WalletAlice
Alice decrypts the memos from the new block.
end note
WalletAlice --> WalletAlice: memos = get_memos_from_block(new_block_79)
WalletAlice --> WalletAlice: for each memo in memos: \n   plain = decrypt(sk_a,memo) \n   if plain != Err: \n     update local state(plain)

note right Alice
Alice balance in USDC is  85
end note

note right Bob
Bob balance in USDC is 35
end note


@enduml