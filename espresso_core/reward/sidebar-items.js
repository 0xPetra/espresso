window.SIDEBAR_ITEMS = {"enum":[["RewardError","Reward Transaction Errors."]],"fn":[["compute_reward_amount","Compute the allowed stake amount given current state (e.g. circulating supply), view_number and stake amount Hard-coded to 0 for FST"]],"mod":[["canonical",""],["mock_eligibility",""]],"struct":[["CollectRewardBody","Reward Collection Transaction Note"],["CollectRewardNote","Reward Collection Transaction Note"],["CollectedRewards","Previously collected rewards are recorded in (StakingKey, view_number) pairs"],["CollectedRewardsHistory","Sliding window for reward collection"],["CollectedRewardsTag","Identifying tag for CollectedReward"],["EligibilityWitness",""],["EmptyStakeTableCommitmentSetSnafu","SNAFU context selector for the `RewardError::EmptyStakeTableCommitmentSet` variant"],["InvalidViewNumberSnafu","SNAFU context selector for the `RewardError::InvalidViewNumber` variant"],["KeyNotEligibleSnafu","SNAFU context selector for the `RewardError::KeyNotEligible` variant"],["ProofNotInMemorySnafu","SNAFU context selector for the `RewardError::ProofNotInMemory` variant"],["RewardAlreadyCollectedSnafu","SNAFU context selector for the `RewardError::RewardAlreadyCollected` variant"],["RewardNoteProofs","Auxiliary info and proof for CollectRewardNote"],["RewardProofsValidationOutputs","RewardNote fields extracted data from proof returned by RewardNoteProof::verify It contains i) digest for which uncollected reward proof was verified against, ii) Stake owned by the staking key at time of reward eligibility iii) Total staked in stake table at time of reward eligibility"],["SerializationSnafu","SNAFU context selector for the `RewardError::SerializationError` variant"],["SignatureSnafu","SNAFU context selector for the `RewardError::SignatureError` variant"],["StakingKeyNotFoundSnafu","SNAFU context selector for the `RewardError::StakingKeyNotFound` variant"]],"type":[["CollectedRewardsDigest",""],["CollectedRewardsHash","Hash for set Merkle tree for all of the previously-collected rewards"],["CollectedRewardsProof",""],["CollectedRewardsProofs","CollectedRewards proofs, organized by the root hash for which they are valid."],["CollectedRewardsSet",""],["VrfProof","Proof for Vrf output"]]};