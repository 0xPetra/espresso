var searchIndex = JSON.parse('{\
"address_book":{"doc":"Address Book","t":[17,4,3,3,6,3,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,11,11,11,11,5,0,11,11,11,11,11,11,11,11,11,11,11,11,11,11,5,5,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,11,12,0,0,12,12,13,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,5,11,11,11,11,4,13,3,13,3,13,3,13,3,13,3,13,3,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,12,12,12,11,11,11,11,12,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,12,12,12,12,12,12,5,3,8,3,5,5,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,10,11,11,10,11,11,11,11,10,11,11,12,11,11,11,11,11,11,11,11,11,11,11],"n":["APP_NAME","AppKey","Args","InsertPubKey","Result","ServerState","as_any","as_any","as_any","as_any","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_ref","augment_args","augment_args_for_update","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","clone","clone_into","command","command_for_update","deref","deref","deref","deref","deref_mut","deref_mut","deref_mut","deref_mut","deserialize","disco_args","drop","drop","drop","drop","eq_header_values","error","fmt","fmt","fmt","from","from","from","from","from_arg_matches","from_arg_matches_mut","group_id","init","init","init","init","init_web_server","insert_pubkey","into","into","into","into","into_any","into_any","into_any","into_any","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","pub_key_bytes","serialize","sig","signal","store","store","store_path","store_path","to_owned","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","update_from_arg_matches","update_from_arg_matches_mut","verify_sig_and_get_pub_key","vzip","vzip","vzip","vzip","AddressBookError","AddressNotFound","AddressNotFoundSnafu","Config","ConfigSnafu","DeserializationError","DeserializationSnafu","InvalidSignature","InvalidSignatureSnafu","IoError","IoSnafu","Other","OtherSnafu","address","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_error_source","backtrace","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","build","build","build","build","build","build","catch_all","cause","clone","clone","clone","clone","clone","clone","clone","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","deref","deref","deref","deref","deref","deref","deref","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","description","deserialize","drop","drop","drop","drop","drop","drop","drop","fail","fail","fail","fail","fail","fail","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","from","from","from","from","from","from","from","from","from","from","from","from","init","init","init","init","init","init","init","into","into","into","into","into","into","into","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_error","into_error","into_error","into_error","into_error","into_error","msg","msg","msg","msg","render_to","serialize","source","status","status","status","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_string","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","type_id","type_id","vzip","vzip","vzip","vzip","vzip","vzip","vzip","address","msg","msg","msg","msg","status","status","handle_signals","FileStore","Store","TransientFileStore","address_book_store_path","address_book_temp_dir","as_any","as_any","as_any_mut","as_any_mut","borrow","borrow","borrow_mut","borrow_mut","clone","clone","clone_into","clone_into","default","deref","deref","deref_mut","deref_mut","dir","drop","drop","drop","fmt","fmt","from","from","init","init","into","into","into_any","into_any","into_any_arc","into_any_arc","into_any_rc","into_any_rc","list","list","list","load","load","load","new","path","save","save","save","store","tmp_path","to_owned","to_owned","try_from","try_from","try_into","try_into","type_id","type_id","vzip","vzip"],"q":["address_book","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","address_book::erroraddress_book::error::AddressBookError","","","","","","","address_book::signal","address_book::store","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","",""],"d":["Application name used for locating configuration files","Lookup keys for application-specific configuration settings","Command line arguments","Structure to supply parameters to web requests","","Web server state","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","","","","","","","Initialize the web server","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","Storage path","","","","","","","","","","","","","","","","","Lookup a user public key from a signed public key address.","","","","","","","SNAFU context selector for the …","","SNAFU context selector for the <code>AddressBookError::Config</code> …","","SNAFU context selector for the …","","SNAFU context selector for the …","","SNAFU context selector for the <code>AddressBookError::IoError</code> …","","SNAFU context selector for the <code>AddressBookError::Other</code> …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Consume the selector and return the associated error","Consume the selector and return the associated error","Consume the selector and return the associated error","Consume the selector and return the associated error","Consume the selector and return the associated error","Consume the selector and return the associated error","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Consume the selector and return a <code>Result</code> with the …","Consume the selector and return a <code>Result</code> with the …","Consume the selector and return a <code>Result</code> with the …","Consume the selector and return a <code>Result</code> with the …","Consume the selector and return a <code>Result</code> with the …","Consume the selector and return a <code>Result</code> with the …","","","","","","","","","","","Returns the argument unchanged.","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","","","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Spawn a thread that waits for SIGTERM. If SIGTERM is …","","","Non-persistent store. Suitable for testing only.","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","",""],"i":[0,0,0,0,0,0,13,2,9,7,13,2,9,7,2,13,13,13,2,9,7,13,2,9,7,7,7,13,13,13,2,9,7,13,2,9,7,9,13,13,2,9,7,0,0,13,2,9,13,2,9,7,13,13,13,13,2,9,7,0,0,13,2,9,7,13,2,9,7,13,2,9,7,13,2,9,7,9,9,9,0,0,7,13,2,7,13,2,9,7,13,2,9,7,13,2,9,7,13,13,0,13,2,9,7,0,22,0,22,0,22,0,22,0,22,0,22,0,34,22,33,34,35,36,37,38,22,33,34,35,36,37,38,22,22,22,33,34,35,36,37,38,22,33,34,35,36,37,38,33,34,35,36,37,38,22,22,22,33,34,35,36,37,38,22,33,34,35,36,37,38,22,33,34,35,36,37,38,22,33,34,35,36,37,38,22,22,22,33,34,35,36,37,38,33,34,35,36,37,38,22,22,33,34,35,36,37,38,22,22,22,22,22,22,33,34,35,36,37,38,22,33,34,35,36,37,38,22,33,34,35,36,37,38,22,33,34,35,36,37,38,22,33,34,35,36,37,38,22,33,34,35,36,37,38,33,34,35,36,37,38,33,35,36,38,22,22,22,22,34,38,22,33,34,35,36,37,38,22,22,33,34,35,36,37,38,22,33,34,35,36,37,38,22,33,34,35,36,37,38,22,33,34,35,36,37,38,54,55,56,57,58,54,58,0,0,0,0,0,0,50,51,50,51,50,51,50,51,50,51,50,51,51,50,51,50,51,50,50,51,51,50,51,50,51,50,51,50,51,50,51,50,51,50,51,6,50,51,6,50,51,50,50,6,50,51,51,50,50,51,50,51,50,51,50,51,50,51],"f":[0,0,0,0,0,0,[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[2,3],[4,4],[4,4],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[[7,[[0,[5,6]]]]],[[7,[[0,[5,6]]]]]],[[]],[[],4],[[],4],[8],[8],[8],[8],[8],[8],[8],[8],[[],[[10,[9]]]],0,[8],[8],[8],[8],[[11,3,3],12],0,[[13,14],15],[[2,14],15],[[9,14],15],[[]],[[]],[[]],[[]],[16,[[10,[13,17]]]],[16,[[10,[13,17]]]],[[],[[19,[18]]]],[[],8],[[],8],[[],8],[[],8],[[20,6],[[24,[[23,[[21,[[7,[6]]]],22]]]]]],[9,24],[[]],[[]],[[]],[[]],[[[26,[25]]],[[26,[1,25]]]],[[[26,[25]]],[[26,[1,25]]]],[[[26,[25]]],[[26,[1,25]]]],[[[26,[25]]],[[26,[1,25]]]],[27,[[27,[1]]]],[27,[[27,[1]]]],[27,[[27,[1]]]],[27,[[27,[1]]]],[28,[[28,[1]]]],[28,[[28,[1]]]],[28,[[28,[1]]]],[28,[[28,[1]]]],0,[9,10],0,0,0,0,0,0,[[]],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],29],[[],29],[[],29],[[],29],[[13,16],[[10,[17]]]],[[13,16],[[10,[17]]]],[9,[[24,[30]]]],[[]],[[]],[[]],[[]],0,0,0,0,0,0,0,0,0,0,0,0,0,0,[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],31],[22,[[19,[32]]]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[33,22],[34,22],[35,22],[36,22],[37,22],[38,22],[[39,20],22],[22,[[19,[31]]]],[22,22],[[[33,[5]]],[[33,[5]]]],[[[34,[5,5]]],[[34,[5,5]]]],[[[35,[5]]],[[35,[5]]]],[[[36,[5]]],[[36,[5]]]],[37,37],[[[38,[5,5]]],[[38,[5,5]]]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[8],[8],[8],[8],[8],[8],[8],[8],[8],[8],[8],[8],[8],[8],[22,3],[[],[[10,[22]]]],[8],[8],[8],[8],[8],[8],[8],[33,[[10,[22]]]],[34,[[10,[22]]]],[35,[[10,[22]]]],[36,[[10,[22]]]],[37,[[10,[22]]]],[38,[[10,[22]]]],[[22,14],15],[[22,14],15],[[[33,[40]],14],15],[[[34,[40,40]],14],15],[[[35,[40]],14],15],[[[36,[40]],14],15],[[37,14],15],[[[38,[40,40]],14],15],[41,22],[42,22],[[]],[43,22],[44,22],[45,22],[[]],[[]],[[]],[[]],[[]],[[]],[[],8],[[],8],[[],8],[[],8],[[],8],[[],8],[[],8],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[[26,[25]]],[[26,[1,25]]]],[[[26,[25]]],[[26,[1,25]]]],[[[26,[25]]],[[26,[1,25]]]],[[[26,[25]]],[[26,[1,25]]]],[[[26,[25]]],[[26,[1,25]]]],[[[26,[25]]],[[26,[1,25]]]],[[[26,[25]]],[[26,[1,25]]]],[27,[[27,[1]]]],[27,[[27,[1]]]],[27,[[27,[1]]]],[27,[[27,[1]]]],[27,[[27,[1]]]],[27,[[27,[1]]]],[27,[[27,[1]]]],[28,[[28,[1]]]],[28,[[28,[1]]]],[28,[[28,[1]]]],[28,[[28,[1]]]],[28,[[28,[1]]]],[28,[[28,[1]]]],[28,[[28,[1]]]],[33,22],[34,22],[35,22],[36,22],[37,22],[38,22],0,0,0,0,[20],[22,10],[22,[[19,[31]]]],[22,39],0,0,[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],20],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],29],[[],29],[[],29],[[],29],[[],29],[[],29],[[],29],[[]],[[]],[[]],[[]],[[]],[[]],[[]],0,0,0,0,0,0,0,[46,47],0,0,0,[[],48],[[],49],[[],1],[[],1],[[],1],[[],1],[[]],[[]],[[]],[[]],[50,50],[51,51],[[]],[[]],[[],51],[8],[8],[8],[8],0,[8],[51],[8],[[50,14],15],[[51,14],15],[[]],[[]],[[],8],[[],8],[[]],[[]],[[[26,[25]]],[[26,[1,25]]]],[[[26,[25]]],[[26,[1,25]]]],[27,[[27,[1]]]],[27,[[27,[1]]]],[28,[[28,[1]]]],[28,[[28,[1]]]],[[],[[10,[[52,[30]],41]]]],[50,[[10,[[52,[30]],41]]]],[51,[[10,[[52,[30]],41]]]],[53,[[10,[[19,[30]],41]]]],[[50,53],[[10,[[19,[30]],41]]]],[[51,53],[[10,[[19,[30]],41]]]],[48,50],[[50,53],48],[[53,30],[[10,[41]]]],[[50,53,30],[[10,[41]]]],[[51,53,30],[[10,[41]]]],0,[[50,53],48],[[]],[[]],[[],10],[[],10],[[],10],[[],10],[[],29],[[],29],[[]],[[]]],"p":[[8,"Any"],[4,"AppKey"],[15,"str"],[3,"Command"],[8,"Clone"],[8,"Store"],[3,"ServerState"],[15,"usize"],[3,"InsertPubKey"],[4,"Result"],[3,"RequestParams"],[15,"bool"],[3,"Args"],[3,"Formatter"],[6,"Result"],[3,"ArgMatches"],[6,"Error"],[3,"Id"],[4,"Option"],[3,"String"],[3,"RwLock"],[4,"AddressBookError"],[3,"App"],[6,"Result"],[3,"Global"],[3,"Box"],[3,"Arc"],[3,"Rc"],[3,"TypeId"],[3,"UserPubKey"],[8,"Error"],[3,"Backtrace"],[3,"ConfigSnafu"],[3,"AddressNotFoundSnafu"],[3,"DeserializationSnafu"],[3,"InvalidSignatureSnafu"],[3,"IoSnafu"],[3,"OtherSnafu"],[4,"StatusCode"],[8,"Debug"],[3,"Error"],[4,"ConfigError"],[3,"Error"],[4,"RequestError"],[6,"Error"],[6,"Signals"],[8,"Future"],[3,"PathBuf"],[3,"TempDir"],[3,"FileStore"],[3,"TransientFileStore"],[3,"Vec"],[3,"UserAddress"],[13,"AddressNotFound"],[13,"Config"],[13,"DeserializationError"],[13,"InvalidSignature"],[13,"Other"]]},\
"cdn_server":{"doc":"","t":[3,11,11,11,11,11,11,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,5,12,12,12,11,11,11,11,11,11],"n":["Args","as_any","as_any_mut","augment_args","augment_args_for_update","borrow","borrow_mut","colored_logs","command","command_for_update","deref","deref_mut","drop","from","from_arg_matches","from_arg_matches_mut","group_id","init","into","into_any","into_any_arc","into_any_rc","main","num_nodes","port","start_delay","try_from","try_into","type_id","update_from_arg_matches","update_from_arg_matches_mut","vzip"],"q":["cdn_server","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","",""],"d":["","","","","","","","","","","","","","Returns the argument unchanged.","","","","","Calls <code>U::from(self)</code>.","","","","","","","","","","","","",""],"i":[0,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,0,5,5,5,5,5,5,5,5,5],"f":[0,[[],1],[[],1],[2,2],[2,2],[[]],[[]],0,[[],2],[[],2],[3],[3],[3],[[]],[4,[[7,[5,6]]]],[4,[[7,[5,6]]]],[[],[[9,[8]]]],[[],3],[[]],[[[11,[10]]],[[11,[1,10]]]],[12,[[12,[1]]]],[13,[[13,[1]]]],[[]],0,0,0,[[],7],[[],7],[[],14],[[5,4],[[7,[6]]]],[[5,4],[[7,[6]]]],[[]]],"p":[[8,"Any"],[3,"Command"],[15,"usize"],[3,"ArgMatches"],[3,"Args"],[6,"Error"],[4,"Result"],[3,"Id"],[4,"Option"],[3,"Global"],[3,"Box"],[3,"Arc"],[3,"Rc"],[3,"TypeId"]]},\
"demo_script":{"doc":"","t":[5,5,5],"n":["keystore_command","main","validator_command"],"q":["demo_script","",""],"d":["","",""],"i":[0,0,0],"f":[[[1,2,3],[[6,[[5,[4]],4]]]],[[]],[[1,2,3,3],[[6,[[5,[4]],4]]]]],"p":[[3,"CliClient"],[15,"usize"],[15,"str"],[3,"String"],[3,"Vec"],[4,"Result"]]},\
"espresso_availability_api":{"doc":"","t":[0,0,0,4,13,3,13,3,13,3,13,3,13,3,3,13,3,13,3,13,3,13,3,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,12,12,12,12,5,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,5,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,5,5,5,5,5,11,12,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,12,11,11,11,11,11,11,11,11,11,11,11,12,11,11,11,11,11,11,11,11,11,11,11,11,11,12,12,12,12,12,12,12,12,12,12,12,12,8,6,16,16,16,16,8,10,10,10,10,10,10,10,10,10,12,3,3,3,3,3,3,11,11,11,11,11,11,11,11,11,11,11,11,12,12,12,12,12,12,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,12,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,12,12,12,12,12,12,12,12,11,11,11,11,11,11,11,11,11,11,11,12,12,11,12,12,11,11,11,11,11,11,11,11,12,11,11,11,11,11,11,11,11,11,11,11,11,11,12,12,12,12,11,11,11,11,11,11,12,11,12,11,11,11,11,11,11],"n":["api","data_source","query_data","Error","InvalidBlockId","InvalidBlockIdSnafu","InvalidRecordId","InvalidRecordIdSnafu","InvalidTransactionId","InvalidTransactionIdSnafu","MissingBlock","MissingBlockSnafu","MissingState","MissingStateSnafu","Options","Request","RequestSnafu","UnknownBlockHash","UnknownBlockHashSnafu","UnknownRecordUid","UnknownRecordUidSnafu","UnknownTransactionHash","UnknownTransactionHashSnafu","api_path","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_error_source","augment_args","augment_args_for_update","backtrace","block_id","block_id","block_id","block_id","block_id","block_index","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","build","build","build","build","build","build","build","build","cause","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","default","define_api","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","description","deserialize","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","fail","fail","fail","fail","fail","fail","fail","fail","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","from","from","from","from","from","from","from","from","from","from","from","from","from_arg_matches","from_arg_matches_mut","get_block","get_block_summaries","get_block_summary","get_qcert","get_state","group_id","hash","hash","header","in_current_span","init","init","init","init","init","init","init","init","init","init","init","into","into","into","into","into","into","into","into","into","into","into","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_error","into_error","into_error","into_error","into_error","into_error","into_error","into_error","into_error","output_index","render_to","serialize","source","status","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_string","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","txn_id","txn_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","uid","update_from_arg_matches","update_from_arg_matches_mut","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","block_id","block_id","block_id","block_id","block_id","hash","hash","output_index","source","txn_id","txn_id","uid","AvailabilityDataSource","BlockAndAssociated","BlockIterType","Error","QCertIterType","StateIterType","UpdateAvailabilityData","append_blocks","get_block_ids_by_proposer_id","get_block_index_by_hash","get_nth_block_iter","get_nth_qcert_iter","get_nth_state_iter","get_record_index_by_uid","get_record_merkle_tree_at_block_index","get_txn_index_by_hash","0","BlockQueryData","BlockSummaryQueryData","EncodedPublicKey","RecordQueryData","StateQueryData","TransactionQueryData","as_any","as_any","as_any","as_any","as_any","as_any","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","block_hash","block_hash","block_id","block_id","block_id","block_id","block_id","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","clone","clone","clone","clone","clone","clone","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","commitment","commitment","continuation_event_index","deref","deref","deref","deref","deref","deref","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize_unchecked","deserialize_uncompressed","drop","drop","drop","drop","drop","drop","eq","eq","eq","eq","eq","fmt","fmt","fmt","fmt","fmt","fmt","fmt","from","from","from","from","from","from","from_str","get_hash","hash","header","init","init","init","init","init","init","into","into","into","into","into","into","into_any","into_any","into_any","into_any","into_any","into_any","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","is_empty","len","ne","ne","ne","ne","ne","output_index","proposer_id","proposer_id","raw_block","raw_transaction","record_count","record_count","records_from","records_from","render_to","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize_unchecked","serialize_uncompressed","serialized_size","size","state","tag","timestamp","timestamp","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_string","transaction","transaction_hash","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","txn_count","txn_hashes","txn_id","txn_id","type_id","type_id","type_id","type_id","type_id","type_id","uid","uncompressed_size","view_number","vzip","vzip","vzip","vzip","vzip","vzip"],"q":["espresso_availability_api","","","espresso_availability_api::apiespresso_availability_api::api::Error","","","","","","","","","","","","espresso_availability_api::data_source","","","","","","","","","","","","","","","","espresso_availability_api::query_datad":["","","","","","SNAFU context selector for the <code>Error::InvalidBlockId</code> …","","SNAFU context selector for the <code>Error::InvalidRecordId</code> …","","SNAFU context selector for the <code>Error::InvalidTransactionId</code> …","","SNAFU context selector for the <code>Error::MissingBlock</code> variant","","SNAFU context selector for the <code>Error::MissingState</code> variant","","","SNAFU context selector for the <code>Error::Request</code> variant","","SNAFU context selector for the <code>Error::UnknownBlockHash</code> …","","SNAFU context selector for the <code>Error::UnknownRecordUid</code> …","","SNAFU context selector for the …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Extract a block index from request parameters in a …","","","","","","","","","","","","","","","","","","","","","","","Consume the selector and return the associated error","Consume the selector and return the associated error","Consume the selector and return the associated error","Consume the selector and return the associated error","Consume the selector and return the associated error","Consume the selector and return the associated error","Consume the selector and return the associated error","Consume the selector and return the associated error","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Consume the selector and return a <code>Result</code> with the …","Consume the selector and return a <code>Result</code> with the …","Consume the selector and return a <code>Result</code> with the …","Consume the selector and return a <code>Result</code> with the …","Consume the selector and return a <code>Result</code> with the …","Consume the selector and return a <code>Result</code> with the …","Consume the selector and return a <code>Result</code> with the …","Consume the selector and return a <code>Result</code> with the …","","","","","","","","","","","","Returns the argument unchanged.","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","","","","","","","","","","","","","","","","","","","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Trait to be implemented on &amp;’a DataSource for lifetime …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Event index to subscribe to to follow chain events built …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","","","","","","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","The total number of outputs in this block.","","The UID of the first output of this block.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","",""],"i":[0,0,0,0,4,0,4,0,4,0,4,0,4,0,0,4,0,4,0,4,0,4,0,20,20,4,18,10,11,12,13,14,15,16,17,20,4,18,10,11,12,13,14,15,16,17,4,20,20,4,13,14,15,16,17,0,20,4,18,10,11,12,13,14,15,16,17,20,4,18,10,11,12,13,14,15,16,17,10,11,12,13,14,15,16,17,4,4,18,10,11,12,13,14,15,16,17,4,18,10,11,12,13,14,15,16,17,20,0,20,4,18,10,11,12,13,14,15,16,17,20,4,18,10,11,12,13,14,15,16,17,4,4,20,4,18,10,11,12,13,14,15,16,17,10,11,12,13,14,15,16,17,4,4,18,10,11,12,13,14,15,16,17,20,4,4,18,10,11,12,13,14,15,16,17,20,20,0,0,0,0,0,20,10,11,4,4,20,4,18,10,11,12,13,14,15,16,17,20,4,18,10,11,12,13,14,15,16,17,20,4,18,10,11,12,13,14,15,16,17,20,4,18,10,11,12,13,14,15,16,17,20,4,18,10,11,12,13,14,15,16,17,18,10,11,12,13,14,15,16,17,15,4,4,4,4,4,18,10,11,12,13,14,15,16,17,4,20,4,18,10,11,12,13,14,15,16,17,20,4,18,10,11,12,13,14,15,16,17,14,15,20,4,18,10,11,12,13,14,15,16,17,12,20,20,20,4,18,10,11,12,13,14,15,16,17,58,59,60,61,62,63,64,60,65,59,60,66,0,0,67,68,67,67,0,68,67,67,67,67,67,67,67,67,47,0,0,0,0,0,0,47,31,51,52,36,33,47,31,51,52,36,33,31,33,31,51,52,36,33,47,31,51,52,36,33,47,31,51,52,36,33,47,31,51,52,36,33,47,31,51,52,36,33,52,36,36,47,31,51,52,36,33,47,31,51,52,36,33,47,47,31,51,52,36,33,47,47,47,31,51,52,36,33,47,31,51,52,36,47,47,31,51,52,36,33,47,31,51,52,36,33,47,47,47,47,47,31,51,52,36,33,47,31,51,52,36,33,47,31,51,52,36,33,47,31,51,52,36,33,47,31,51,52,36,33,31,31,47,31,51,52,36,52,31,33,31,51,31,33,31,33,47,47,47,31,51,52,36,33,47,47,47,33,36,47,31,33,47,31,51,52,36,33,47,31,51,47,47,31,51,52,36,33,47,31,51,52,36,33,33,31,51,52,47,31,51,52,36,33,52,47,33,47,31,51,52,36,33],"f":[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],2],[3,3],[3,3],[4,[[6,[5]]]],0,0,0,0,0,[7,[[9,[8,4]]]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[10,4],[11,4],[12,4],[13,4],[14,4],[15,4],[16,4],[17,4],[4,[[6,[2]]]],[4,4],[18,18],[[[10,[19]]],[[10,[19]]]],[[[11,[19]]],[[11,[19]]]],[[[12,[19]]],[[12,[19]]]],[[[13,[19]]],[[13,[19]]]],[[[14,[19,19]]],[[14,[19,19]]]],[[[15,[19,19,19]]],[[15,[19,19,19]]]],[[[16,[19]]],[[16,[19]]]],[[[17,[19]]],[[17,[19]]]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],20],[20,[[9,[[21,[4]],22]]]],[23],[23],[23],[23],[23],[23],[23],[23],[23],[23],[23],[23],[23],[23],[23],[23],[23],[23],[23],[23],[23],[23],[4,24],[[],[[9,[4]]]],[23],[23],[23],[23],[23],[23],[23],[23],[23],[23],[23],[10,[[9,[4]]]],[11,[[9,[4]]]],[12,[[9,[4]]]],[13,[[9,[4]]]],[14,[[9,[4]]]],[15,[[9,[4]]]],[16,[[9,[4]]]],[17,[[9,[4]]]],[[4,25],26],[[4,25],26],[[18,25],26],[[[10,[27]],25],26],[[[11,[27]],25],26],[[[12,[27]],25],26],[[[13,[27]],25],26],[[[14,[27,27]],25],26],[[[15,[27,27,27]],25],26],[[[16,[27]],25],26],[[[17,[27]],25],26],[[]],[28,4],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[29,[[9,[20,30]]]],[29,[[9,[20,30]]]],[8,[[9,[31,4]]]],[[19,[32,[8]]],[[9,[[32,[33]],4]]]],[[19,8,8],[[9,[[32,[33]],4]]]],[8,[[9,[[35,[34]],4]]]],[8,[[9,[36,4]]]],[[],[[6,[37]]]],0,0,[[],38],[[]],[[],23],[[],23],[[],23],[[],23],[[],23],[[],23],[[],23],[[],23],[[],23],[[],23],[[],23],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[[40,[39]]],[[40,[1,39]]]],[[[40,[39]]],[[40,[1,39]]]],[[[40,[39]]],[[40,[1,39]]]],[[[40,[39]]],[[40,[1,39]]]],[[[40,[39]]],[[40,[1,39]]]],[[[40,[39]]],[[40,[1,39]]]],[[[40,[39]]],[[40,[1,39]]]],[[[40,[39]]],[[40,[1,39]]]],[[[40,[39]]],[[40,[1,39]]]],[[[40,[39]]],[[40,[1,39]]]],[[[40,[39]]],[[40,[1,39]]]],[41,[[41,[1]]]],[41,[[41,[1]]]],[41,[[41,[1]]]],[41,[[41,[1]]]],[41,[[41,[1]]]],[41,[[41,[1]]]],[41,[[41,[1]]]],[41,[[41,[1]]]],[41,[[41,[1]]]],[41,[[41,[1]]]],[41,[[41,[1]]]],[42,[[42,[1]]]],[42,[[42,[1]]]],[42,[[42,[1]]]],[42,[[42,[1]]]],[42,[[42,[1]]]],[42,[[42,[1]]]],[42,[[42,[1]]]],[42,[[42,[1]]]],[42,[[42,[1]]]],[42,[[42,[1]]]],[42,[[42,[1]]]],[18,4],[10,4],[11,4],[12,4],[13,4],[14,4],[15,4],[16,4],[17,4],0,[43],[4,9],[4,[[6,[2]]]],[4,44],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],43],[[],9],[[],9],[[],9],[[],9],[[],9],[[],9],[[],9],[[],9],[[],9],[[],9],[[],9],[[],9],[[],9],[[],9],[[],9],[[],9],[[],9],[[],9],[[],9],[[],9],[[],9],[[],9],0,0,[[],45],[[],45],[[],45],[[],45],[[],45],[[],45],[[],45],[[],45],[[],45],[[],45],[[],45],0,[[20,29],[[9,[30]]]],[[20,29],[[9,[30]]]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[[[32,[46]]],9],[47,[[32,[8]]]],[48,[[6,[8]]]],[23],[23],[23],[8,6],[23,[[6,[49]]]],[50,6],0,0,0,0,0,0,0,[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],0,0,0,0,0,0,0,[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[47,47],[31,31],[51,51],[52,52],[36,36],[33,33],[[]],[[]],[[]],[[]],[[]],[[]],0,0,0,[23],[23],[23],[23],[23],[23],[23],[23],[23],[23],[23],[23],[[],[[9,[47]]]],[53,[[9,[47,54]]]],[[],[[9,[31]]]],[[],[[9,[51]]]],[[],[[9,[52]]]],[[],[[9,[36]]]],[[],[[9,[33]]]],[53,[[9,[47,54]]]],[53,[[9,[47,54]]]],[23],[23],[23],[23],[23],[23],[[47,47],55],[[31,31],55],[[51,51],55],[[52,52],55],[[36,36],55],[[47,25],26],[[47,25],26],[[31,25],26],[[51,25],26],[[52,25],26],[[36,25],26],[[33,25],26],[[]],[[]],[[]],[[]],[[]],[[]],[24,[[9,[47]]]],[[],8],[47],[[],38],[[],23],[[],23],[[],23],[[],23],[[],23],[[],23],[[]],[[]],[[]],[[]],[[]],[[]],[[[40,[39]]],[[40,[1,39]]]],[[[40,[39]]],[[40,[1,39]]]],[[[40,[39]]],[[40,[1,39]]]],[[[40,[39]]],[[40,[1,39]]]],[[[40,[39]]],[[40,[1,39]]]],[[[40,[39]]],[[40,[1,39]]]],[41,[[41,[1]]]],[41,[[41,[1]]]],[41,[[41,[1]]]],[41,[[41,[1]]]],[41,[[41,[1]]]],[41,[[41,[1]]]],[42,[[42,[1]]]],[42,[[42,[1]]]],[42,[[42,[1]]]],[42,[[42,[1]]]],[42,[[42,[1]]]],[42,[[42,[1]]]],[31,55],[31,23],[[47,47],55],[[31,31],55],[[51,51],55],[[52,52],55],[[36,36],55],0,0,0,0,0,0,0,0,0,[43],[[47,56],[[9,[54]]]],[47,9],[31,9],[51,9],[52,9],[36,9],[33,9],[[47,56],[[9,[54]]]],[[47,56],[[9,[54]]]],[47,23],0,0,[[],43],0,0,[[]],[[]],[[]],[[]],[[]],[[]],[[],43],[[31,23],[[6,[51]]]],0,[[],9],[[[57,[47]]],[[9,[47]]]],[[],9],[[],9],[[],9],[[],9],[[],9],[[],9],[[],9],[[],9],[[],9],[[],9],[[],9],0,0,0,0,[[],45],[[],45],[[],45],[[],45],[[],45],[[],45],0,[47,23],0,[[]],[[]],[[]],[[]],[[]],[[]]],"p":[[8,"Any"],[8,"Error"],[3,"Command"],[4,"Error"],[3,"Backtrace"],[4,"Option"],[3,"RequestParams"],[15,"u64"],[4,"Result"],[3,"UnknownBlockHashSnafu"],[3,"UnknownTransactionHashSnafu"],[3,"UnknownRecordUidSnafu"],[3,"InvalidBlockIdSnafu"],[3,"InvalidTransactionIdSnafu"],[3,"InvalidRecordIdSnafu"],[3,"MissingBlockSnafu"],[3,"MissingStateSnafu"],[3,"RequestSnafu"],[8,"Clone"],[3,"Options"],[3,"Api"],[4,"ApiError"],[15,"usize"],[15,"str"],[3,"Formatter"],[6,"Result"],[8,"Debug"],[4,"RequestError"],[3,"ArgMatches"],[6,"Error"],[3,"BlockQueryData"],[3,"Vec"],[3,"BlockSummaryQueryData"],[3,"ValidatorState"],[3,"QuorumCertificate"],[3,"StateQueryData"],[3,"Id"],[3,"IndentedSection"],[3,"Global"],[3,"Box"],[3,"Arc"],[3,"Rc"],[3,"String"],[4,"StatusCode"],[3,"TypeId"],[6,"BlockAndAssociated"],[3,"EncodedPublicKey"],[3,"ElaboratedBlockCommitment"],[6,"MerkleTree"],[3,"TransactionCommitment"],[3,"TransactionQueryData"],[3,"RecordQueryData"],[8,"Read"],[4,"SerializationError"],[15,"bool"],[8,"Write"],[3,"TaggedBlob"],[13,"InvalidBlockId"],[13,"InvalidTransactionId"],[13,"InvalidRecordId"],[13,"MissingBlock"],[13,"MissingState"],[13,"UnknownBlockHash"],[13,"UnknownTransactionHash"],[13,"Request"],[13,"UnknownRecordUid"],[8,"AvailabilityDataSource"],[8,"UpdateAvailabilityData"]]},\
"espresso_catchup_api":{"doc":"","t":[0,0,0,4,3,13,3,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,5,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,8,16,16,8,10,10,10,10,10,10],"n":["api","data_source","query_data","Error","Options","Request","RequestSnafu","api_path","as_any","as_any","as_any","as_any_mut","as_any_mut","as_any_mut","as_error_source","augment_args","augment_args_for_update","backtrace","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","cause","clone","clone","clone_into","clone_into","default","define_api","deref","deref","deref","deref_mut","deref_mut","deref_mut","description","deserialize","drop","drop","drop","fmt","fmt","fmt","from","from","from","from","from_arg_matches","from_arg_matches_mut","group_id","header","in_current_span","init","init","init","into","into","into","into_any","into_any","into_any","into_any_arc","into_any_arc","into_any_arc","into_any_rc","into_any_rc","into_any_rc","into_error","render_to","serialize","source","status","to_owned","to_owned","to_string","try_from","try_from","try_from","try_into","try_into","try_into","type_id","type_id","type_id","update_from_arg_matches","update_from_arg_matches_mut","vzip","vzip","vzip","source","CatchUpDataSource","Error","EventIterType","UpdateCatchUpData","append_events","event_count","get_nth_event_iter","is_empty","len","subscribe"],"q":["espresso_catchup_api","","","espresso_catchup_api::api","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","espresso_catchup_api::api::Error","espresso_catchup_api::data_source","","","","","","","","",""],"d":["","","","","","","SNAFU context selector for the <code>Error::Request</code> variant","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","","Returns the argument unchanged.","","","","","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","",""],"i":[0,0,0,0,0,4,0,8,8,4,7,8,4,7,4,8,8,4,8,4,7,8,4,7,4,4,7,4,7,8,0,8,4,7,8,4,7,4,4,8,4,7,4,4,7,8,4,4,7,8,8,8,4,4,8,4,7,8,4,7,8,4,7,8,4,7,8,4,7,7,4,4,4,4,4,7,4,8,4,7,8,4,7,8,4,7,8,8,8,4,7,35,0,36,37,0,36,36,37,37,37,37],"f":[0,0,0,0,0,0,0,0,[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],2],[3,3],[3,3],[4,[[6,[5]]]],[[]],[[]],[[]],[[]],[[]],[[]],[4,[[6,[2]]]],[4,4],[7,7],[[]],[[]],[[],8],[8,[[11,[[9,[4]],10]]]],[12],[12],[12],[12],[12],[12],[4,13],[[],[[11,[4]]]],[12],[12],[12],[[4,14],15],[[4,14],15],[[7,14],15],[[]],[[]],[16,4],[[]],[17,[[11,[8,18]]]],[17,[[11,[8,18]]]],[[],[[6,[19]]]],[[],20],[[]],[[],12],[[],12],[[],12],[[]],[[]],[[]],[[[22,[21]]],[[22,[1,21]]]],[[[22,[21]]],[[22,[1,21]]]],[[[22,[21]]],[[22,[1,21]]]],[23,[[23,[1]]]],[23,[[23,[1]]]],[23,[[23,[1]]]],[24,[[24,[1]]]],[24,[[24,[1]]]],[24,[[24,[1]]]],[7,4],[25],[4,11],[4,[[6,[2]]]],[4,26],[[]],[[]],[[],25],[[],11],[[],11],[[],11],[[],11],[[],11],[[],11],[[],27],[[],27],[[],27],[[8,17],[[11,[18]]]],[[8,17],[[11,[18]]]],[[]],[[]],[[]],0,0,0,0,0,[[[30,[[6,[[29,[28]]]]]]],[[32,[[22,[31]]]]]],[[],12],[12],[[],33],[[],12],[[],34]],"p":[[8,"Any"],[8,"Error"],[3,"Command"],[4,"Error"],[3,"Backtrace"],[4,"Option"],[3,"RequestSnafu"],[3,"Options"],[3,"Api"],[4,"ApiError"],[4,"Result"],[15,"usize"],[15,"str"],[3,"Formatter"],[6,"Result"],[4,"RequestError"],[3,"ArgMatches"],[6,"Error"],[3,"Id"],[3,"IndentedSection"],[3,"Global"],[3,"Box"],[3,"Arc"],[3,"Rc"],[3,"String"],[4,"StatusCode"],[3,"TypeId"],[3,"EspressoLedger"],[4,"LedgerEvent"],[3,"Vec"],[8,"Future"],[3,"Pin"],[15,"bool"],[3,"Receiver"],[13,"Request"],[8,"UpdateCatchUpData"],[8,"CatchUpDataSource"]]},\
"espresso_client":{"doc":"","tn":["0","0","Asset","AssetEditor","AssetNotFreezable","AssetNotFreezableSnafu","AssetNotMintable","AssetNotMintableSnafu","AssetNotViewable","AssetNotViewableSnafu","AssetVerificationError","AssetVerificationSnafu","Assets","BadMerkleProof","BadMerkleProofSnafu","BincodeError","BincodeSnafu","Cancelled","CancelledSnafu","CannotDecryptMemo","CannotDecryptMemoSnafu","Captures","CliClient","ClientConfigError","ClientConfigSnafu","CryptoError","CryptoSnafu","EncryptingResourceAdapter","EncryptionError","EncryptionSnafu","EspressoKeystore","EspressoKeystoreError","EventStream","Failed","FailedSnafu","Icon","InconsistentAsset","InconsistentAssetSnafu","InvalidAddress","InvalidAddressSnafu","InvalidBlock","InvalidBlockSnafu","InvalidFreezerKey","InvalidFreezerKeySnafu","InvalidViewerKey","InvalidViewerKeySnafu","IoError","IoSnafu","KeyError","KeySnafu","KeyValueStoreError","KeyValueStoreSnafu","Keystore","KeystoreBackend","KeystoreError","KeystoreModel","KeystoreStores","MintInfo","MnemonicError","MnemonicSnafu","NoSuchAccount","NoSuchAccountSnafu","NullifierAlreadyPublished","NullifierAlreadyPublishedSnafu","PersistenceError","PersistenceSnafu","RecordAmount","ScanNotFound","ScanNotFoundSnafu","SendFuture","TimedOut","TimedOutSnafu","TransactionError","TransactionSnafu","UndefinedAsset","UndefinedAssetSnafu","UserKeyExists","UserKeyExistsSnafu","_marker","_marker2","_phantom","accounts","add","add_assign","add_freezing_account","add_sending_account","add_viewing_account","address","address","arbitrary","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_error_source","asset","asset","asset","asset","asset","asset","asset","assets","assets","assets","assets","assets_mut","async_write","async_writeln","atomic_store","await_key_scan","await_transaction","backend","backtrace","balance","balance_breakdown","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","build","build","build","build","build","build","build","build","build","build","build","build","build","build","build","build","build","build","build_freeze","build_mint","build_transfer","build_unfreeze","cause","cipher","clear_description","clear_icon","clear_name","cli","cli_client","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","cmp","code","command","commit","commitment","count","create","create","create_native","create_stores","created_time","created_time","default","define_asset","definition","definition","delete","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","description","description","description","description","deserialize","deserialize","deserialize","deserialize","deserialize","div","div_assign","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","encryption","eq","eq","eq","eq","events","expected","fail","fail","fail","fail","fail","fail","fail","fail","fail","fail","fail","fail","fail","fail","fail","fail","fail","fail","finalize","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt_description","freeze","freezer_key_stream","freezing_account","freezing_accounts","freezing_accounts_mut","freezing_pub_keys","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from_str","from_str","from_str","frozen_balance_breakdown","generate_freezing_account","generate_sending_account","generate_viewing_account","get","get_hash","get_initial_scan_state","get_mut","get_nullifier_proof","get_public_key","hash","hd","header","header","header","height","icon","icon","import_asset","import_asset","import_memo","in_current_span","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","insert","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_error","into_error","into_error","into_error","into_error","into_error","into_error","into_error","into_error","into_error","into_error","into_error","into_error","into_error","into_error","into_error","into_error","into_error","into_error","into_error","into_error","into_error","into_error","into_error","into_error","into_error","into_error","into_error","into_error","io","is_positive","is_zero","iter","key","key","key_value_store","ledger_state","ledger_states","load","load","load_jpeg","load_png","loader","lw_merkle_tree","max","meta","meta_store","meta_store","meta_store_mut","mint","mint_info","mint_info","modified_time","modified_time","msg","mul","mul_assign","mutex","name","name","ne","ne","ne","ne","network","new","new","new","new_key_pair","now","nullifier","one","parse_description","parse_for_keystore","parse_for_keystore","partial_cmp","policy","pub_key","read","reader","records","records","records","register_user_key","rem","rem_assign","render_to","render_to","render_to","resize","revert","rng","save","seed","sending_account","sending_accounts","sending_accounts_mut","sending_addresses","sending_keys","serialize","serialize","serialize","serialize","serialize","serialized_size","set_description","set_icon","set_name","size","source","store","store","store","stores","sub","sub_assign","submit","submit","submit_cap","subscribe","sum","sync","sync_with_peer","tag","task_scope","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_string","to_string","to_string","transaction_history","transaction_status","transactions","transactions","transfer","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","uid","unfreeze","update","user_key_stream","verified","verified","verified_assets","verify_assets","verify_assets","verify_assets","viewer_key_stream","viewing_account","viewing_accounts","viewing_accounts_mut","viewing_pub_keys","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","width","with_description","with_icon","with_name","write","write","write_jpeg","write_png","zero","address","address","asset","asset","asset","asset","commitment","expected","key","key","msg","nullifier","pub_key","source","source","source","source","source","source","source","source","source","source","source","uid","Account","AccountEditor","Accounts","AccountsStore","KeyPair","PubKey","account","as_any","as_any","as_any","as_any_mut","as_any_mut","as_any_mut","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","clone","clone_into","commit","create","created_time","created_time","delete","deref","deref","deref","deref","deref_mut","deref_mut","deref_mut","deref_mut","description","description","deserialize","drop","drop","drop","fmt","from","from","from","get","get_mut","index","index","index","index","init","init","init","into","into","into","into_any","into_any","into_any","into_any_arc","into_any_arc","into_any_arc","into_any_rc","into_any_rc","into_any_rc","iter","iter_keys","iter_pub_keys","key","key","modified_time","modified_time","new","next_index","pub_key","pub_key","revert","save","scan","scan","serialize","set_used","store","store","to_owned","try_from","try_from","try_from","try_into","try_into","try_into","type_id","type_id","type_id","used","used","vzip","vzip","vzip","0","Asset","AssetEditor","Assets","AssetsStore","Icon","MintInfo","VerifiedAssetLibrary","as_any","as_any_mut","asset","assets","borrow","borrow_mut","check","clone","clone_into","created_time","definition","deref","deref_mut","description","description","deserialize","drop","fmt","from","icon","init","into","into_any","into_any_arc","into_any_rc","mint_info","modified_time","name","new","open","seed","serialize","signature","signer","store","store","to_owned","try_from","try_into","type_id","verified","verified_assets","vzip","0","Args","Backend","CLI","CLIArgs","CLIInput","CLIMerklePath","Command","CommandFunc","Freezing","KeyType","Keystore","Ledger","ListItem","Listable","Loader","Meta","Sending","Viewing","annotation","as_any","as_any","as_any","as_any","as_any_mut","as_any_mut","as_any_mut","as_any_mut","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","cli_main","cli_write","cli_writeln","clone","clone_into","command","command","count","count","deref","deref","deref","deref","deref","deref_mut","deref_mut","deref_mut","deref_mut","deserialize","deserialize","deserialize_unchecked","deserialize_uncompressed","drop","drop","drop","drop","eq","extra_commands","finish_transaction","fmt","fmt","fmt","fmt","from","from","from","from","from","from_str","header","header","header","help","index","init","init","init","init","init_backend","init_loader","into","into","into","into","into_any","into_any","into_any","into_any","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","io","item","key_gen","key_gen_path","kwargs","list","name","ne","params","parse_for_keystore","parse_for_keystore","parse_for_keystore","parse_for_keystore","render_to","render_to","render_to","run","serialize","serialize","serialize_unchecked","serialize_uncompressed","serialized_size","storage_path","tag","to_owned","to_string","to_string","to_string","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","uncompressed_size","use_tmp_storage","vzip","vzip","vzip","vzip","Cdn","CliClient","Keystore","OpenKeystore","Validator","_tmp_dir","address_book","address_book","address_book","as_any","as_any","as_any","as_any","as_any","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","bootstrap_ports","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","cargo_run","cdn","cdn_url","cli_test","close","close","close","close_validator","command","command","deref","deref","deref","deref","deref","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","drop","drop","drop","drop","drop","drop","drop","drop","err","from","from","from","from","from","hostname","id","init","init","init","init","init","init","into","into","into","into","into","into_any","into_any","into_any","into_any","into_any","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","key_gen","key_path","keystore_key_path","keystores","keystores","last_output","load","new","new","new","open","open","open","open_validator","open_with_args","output","pid","pid","port","prev_output","process","process","process","process","pub_key","read_until_prompt","server_port","server_port","server_port","start_validators","stdin","stdout","storage","storage","store_path","substitute","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","url","validator","validator","validator","validators","validators","var","variables","vzip","vzip","vzip","vzip","vzip","wait_for_connect","ArgonError","Cipher","CipherText","DataTooLong","Decrypter","Error","InvalidHmac","Nonce","Result","Salt","as_any","as_any","as_any","as_any","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_error_source","backtrace","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","bytes","cause","clone","clone","clone","clone_into","clone_into","clone_into","decrypt","decrypt","decrypt","default","deref","deref","deref","deref","deref_mut","deref_mut","deref_mut","deref_mut","description","deserialize","deserialize","drop","drop","drop","drop","encrypt","encrypt","eq","fmt","fmt","fmt","from","from","from","from","from","header","hmac","in_current_span","init","init","init","init","into","into","into","into","into_any","into_any","into_any","into_any","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","ne","new","new","nonce","render_to","rng","serialize","serialize","serialized_size","source","state","state","to_owned","to_owned","to_owned","to_string","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","vzip","vzip","vzip","vzip","source","source","source","BulletinBoard","Commit","EventIndex","EventSource","LedgerEvent","Memos","QueryService","Reject","add","add_assign","add_from_source","arbitrary","arbitrary_take_rest","as_any","as_any","as_any","as_any_mut","as_any_mut","as_any_mut","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","bulletin_board","clone","clone","clone","clone_into","clone_into","clone_into","default","deref","deref","deref","deref_mut","deref_mut","deref_mut","deserialize","deserialize","drop","drop","drop","eq","eq","fmt","fmt","fmt","fmt","fmt","from","from","from","from_source","from_str","from_str","header","header","index","init","init","init","into","into","into","into_any","into_any","into_any","into_any_arc","into_any_arc","into_any_arc","into_any_rc","into_any_rc","into_any_rc","ne","new","parse_for_keystore","partial_cmp","query_service","render_to","render_to","serialize","serialize","size_hint","to_owned","to_owned","to_owned","to_string","to_string","try_from","try_from","try_from","try_into","try_into","try_into","type_id","type_id","type_id","vzip","vzip","vzip","block","block","block_id","error","outputs","proof","state_comm","transaction","0","0","Key","KeyTree","Mnemonic","Salt","Secret","as_any","as_any","as_any","as_any","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_bytes","as_ref","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","clone","clone","clone","clone","clone_into","clone_into","clone_into","clone_into","cmp","depth","deref","deref","deref","deref","deref_mut","deref_mut","deref_mut","deref_mut","derive_freezer_key_pair","derive_key","derive_sub_tree","derive_user_key_pair","derive_viewer_key_pair","drop","drop","drop","drop","drop","entropy","entropy","eq","eq","eq","fmt","fmt","fmt","fmt","fmt","freezing_key","freezing_key_stream","from","from","from","from","from_entropy","from_entropy_in","from_mnemonic","from_password","from_password_and_salt","from_phrase","from_phrase_in","from_str","generate","generate_in","get_hash","hash","header","init","init","init","init","into","into","into","into","into_any","into_any","into_any","into_any","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_entropy","into_phrase","lang","lang","ne","ne","ne","open_secret","partial_cmp","phrase","phrase","random","render_to","sending_key","sending_key_stream","state","to_owned","to_owned","to_owned","to_owned","to_seed","to_string","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","validate","validate_in","viewing_key","viewing_key_stream","vzip","vzip","vzip","vzip","zeroize","SharedIO","Tee","as_any","as_any","as_any_mut","as_any_mut","async_read_line","async_write","async_writeln","borrow","borrow","borrow_mut","borrow_mut","buf","clone","clone","clone_into","clone_into","consume","consume","deref","deref","deref_mut","deref_mut","drop","drop","fill_buf","fill_buf","flush","flush","fmt","from","from","init","init","input","into","into","into_any","into_any","into_any_arc","into_any_arc","into_any_rc","into_any_rc","new","output","pipe","read","read","read_from_big_endian_into","read_from_big_endian_into","read_from_big_endian_into","read_from_big_endian_into","read_from_big_endian_into","read_from_big_endian_into","read_from_big_endian_into","read_from_big_endian_into","read_from_big_endian_into","read_from_big_endian_into","read_from_big_endian_into","read_from_big_endian_into","read_from_big_endian_into","read_from_big_endian_into","read_from_big_endian_into","read_from_big_endian_into","read_from_big_endian_into","read_from_big_endian_into","read_from_big_endian_into","read_from_big_endian_into","read_from_big_endian_into","read_from_big_endian_into","read_from_big_endian_into","read_from_big_endian_into","read_from_big_endian_into","read_from_big_endian_into","read_from_big_endian_into","read_from_big_endian_into","read_from_big_endian_into","read_from_big_endian_into","read_from_big_endian_into","read_from_big_endian_into","read_from_big_endian_into","read_from_big_endian_into","read_from_big_endian_into","read_from_big_endian_into","read_from_big_endian_into","read_from_big_endian_into","read_from_big_endian_into","read_from_big_endian_into","read_from_big_endian_into","read_from_big_endian_into","read_from_big_endian_into","read_from_big_endian_into","read_from_big_endian_into","read_from_big_endian_into","read_from_big_endian_into","read_from_big_endian_into","read_from_little_endian_into","read_from_little_endian_into","read_from_little_endian_into","read_from_little_endian_into","read_from_little_endian_into","read_from_little_endian_into","read_from_little_endian_into","read_from_little_endian_into","read_from_little_endian_into","read_from_little_endian_into","read_from_little_endian_into","read_from_little_endian_into","read_from_little_endian_into","read_from_little_endian_into","read_from_little_endian_into","read_from_little_endian_into","read_from_little_endian_into","read_from_little_endian_into","read_from_little_endian_into","read_from_little_endian_into","read_from_little_endian_into","read_from_little_endian_into","read_from_little_endian_into","read_from_little_endian_into","read_from_little_endian_into","read_from_little_endian_into","read_from_little_endian_into","read_from_little_endian_into","read_from_little_endian_into","read_from_little_endian_into","read_from_little_endian_into","read_from_little_endian_into","read_from_little_endian_into","read_from_little_endian_into","read_from_little_endian_into","read_from_little_endian_into","read_from_little_endian_into","read_from_little_endian_into","read_from_little_endian_into","read_from_little_endian_into","read_from_little_endian_into","read_from_little_endian_into","read_from_little_endian_into","read_from_little_endian_into","read_from_little_endian_into","read_from_little_endian_into","read_from_little_endian_into","read_from_little_endian_into","std","stream","to_owned","to_owned","try_from","try_from","try_into","try_into","type_id","type_id","vzip","vzip","write","write","write","write","write_as_big_endian","write_as_big_endian","write_as_big_endian","write_as_big_endian","write_as_big_endian","write_as_big_endian","write_as_big_endian","write_as_big_endian","write_as_big_endian","write_as_big_endian","write_as_big_endian","write_as_big_endian","write_as_big_endian","write_as_big_endian","write_as_big_endian","write_as_big_endian","write_as_big_endian","write_as_big_endian","write_as_big_endian","write_as_big_endian","write_as_big_endian","write_as_big_endian","write_as_big_endian","write_as_big_endian","write_as_big_endian","write_as_big_endian","write_as_big_endian","write_as_big_endian","write_as_big_endian","write_as_big_endian","write_as_big_endian","write_as_big_endian","write_as_big_endian","write_as_big_endian","write_as_big_endian","write_as_big_endian","write_as_big_endian","write_as_big_endian","write_as_big_endian","write_as_big_endian","write_as_big_endian","write_as_big_endian","write_as_big_endian","write_as_big_endian","write_as_big_endian","write_as_big_endian","write_as_big_endian","write_as_big_endian","write_as_little_endian","write_as_little_endian","write_as_little_endian","write_as_little_endian","write_as_little_endian","write_as_little_endian","write_as_little_endian","write_as_little_endian","write_as_little_endian","write_as_little_endian","write_as_little_endian","write_as_little_endian","write_as_little_endian","write_as_little_endian","write_as_little_endian","write_as_little_endian","write_as_little_endian","write_as_little_endian","write_as_little_endian","write_as_little_endian","write_as_little_endian","write_as_little_endian","write_as_little_endian","write_as_little_endian","write_as_little_endian","write_as_little_endian","write_as_little_endian","write_as_little_endian","write_as_little_endian","write_as_little_endian","write_as_little_endian","write_as_little_endian","write_as_little_endian","write_as_little_endian","write_as_little_endian","write_as_little_endian","write_as_little_endian","write_as_little_endian","write_as_little_endian","write_as_little_endian","write_as_little_endian","write_as_little_endian","write_as_little_endian","write_as_little_endian","write_as_little_endian","write_as_little_endian","write_as_little_endian","write_as_little_endian","AccMemberWitness","BaseField","CurveParam","Freeze","Freeze","KeyPair","MerkleCommitment","MerkleFrontier","MerkleLeaf","MerkleLeafProof","MerklePath","MerkleTree","Mint","Mint","NodeValue","PairingEngine","ScalarField","Signature","TransactionNote","TransactionVerifyingKey","Transfer","Transfer","VerKey","VerifyingKey","as_any","as_any","as_any_mut","as_any_mut","bench_utils","borrow","borrow","borrow_mut","borrow_mut","calculate_fee","cap","clone","clone","clone_into","clone_into","commit","constants","deref","deref","deref_mut","deref_mut","derive_txns_fee_records","deserialize","deserialize","deserialize","deserialize","drop","drop","eq","errors","fmt","fmt","fmt","freeze","from","from","from","from","from","from_str","get_hash","hash","hash","header","init","init","into","into","into_any","into_any","into_any_arc","into_any_arc","into_any_rc","into_any_rc","keys","kind","merkle_root","mint","ne","nullifiers","num_inputs","num_outputs","open_viewing_memo","output_commitments","output_commitments","output_len","parameters","proof","proven_nullifiers","render_to","serialize","serialize","serialize","serialize","serialized_size","serialized_size","set_proofs","sign_receiver_memos","structs","tag","testing_apis","to_owned","to_owned","to_string","transfer","try_from","try_from","try_from","try_into","try_into","txn_batch_verify","type_id","type_id","utils","validity_proof","verify_receiver_memos_signature","vzip","vzip","0","0","0","0","0","0","BATCH_VERIF","GEN","NUM_INPUTS_RANGE","NUM_OUTPUTS_RANGE","TREE_DEPTH","VERIFY","compute_sizes","compute_title_batch","compute_title_simple","full_path","get_builder_freeze","get_builder_mint","get_builder_transfer","get_key_pairs","save_result_to_file_batch","save_result_to_file_simple","save_results_to_file","ATTRS_LEN","BLS_SCALAR_BIT_CAPACITY","BLS_SCALAR_BIT_LEN","BLS_SCALAR_REPR_BYTE_LEN","DOM_SEP_DOMESTIC_ASSET","DOM_SEP_FOREIGN_ASSET","DUMMY_ASSET_CODE","MAX_TIMESTAMP_LEN","NATIVE_ASSET_CODE","PER_ATTR_BYTE_CAPACITY","REVEAL_MAP_LEN","VIEWABLE_DATA_LEN","ArkSerializationError","DeserializationError","DeserializationError","FailedAssetCodeVerification","FailedCredentialCreation","FailedCredentialVerification","FailedPrimitives","FailedReceiverMemoSignature","FailedSerialization","FailedSnark","FailedTransactionVerification","FailedTxMemoSignature","FailedViewableMemoDecryption","IncorrectFee","InternalError","InvalidAttribute","InvalidParameter","IoError","ParametersGenerationError","SerdeError","TxnApiError","as_any","as_any","as_any_mut","as_any_mut","as_error_source","borrow","borrow","borrow_mut","borrow_mut","deref","deref","deref_mut","deref_mut","drop","drop","fmt","fmt","fmt","fmt","from","from","from","from","header","header","in_current_span","init","init","into","into","into_any","into_any","into_any_arc","into_any_arc","into_any_rc","into_any_rc","render_to","render_to","to_string","to_string","try_from","try_from","try_into","try_into","type_id","type_id","vzip","vzip","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","FreezeAuxInfo","FreezeNote","FreezeNoteInput","acc_member_witness","as_any","as_any","as_any","as_any_mut","as_any_mut","as_any_mut","aux_info","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","clone","clone","clone","clone_into","clone_into","clone_into","deref","deref","deref","deref_mut","deref_mut","deref_mut","deserialize","deserialize","deserialize","deserialize","deserialize_unchecked","deserialize_unchecked","deserialize_uncompressed","deserialize_uncompressed","drop","drop","drop","eq","eq","fee","fmt","fmt","fmt","from","from","from","generate","get_hash","get_hash","hash","hash","init","init","init","input_nullifiers","into","into","into","into_any","into_any","into_any","into_any_arc","into_any_arc","into_any_arc","into_any_rc","into_any_rc","into_any_rc","keypair","merkle_root","ne","ne","output_commitments","proof","ro","serialize","serialize","serialize","serialize","serialize_unchecked","serialize_unchecked","serialize_uncompressed","serialize_uncompressed","serialized_size","serialized_size","to_owned","to_owned","to_owned","try_from","try_from","try_from","try_into","try_into","try_into","txn_memo_ver_key","type_id","type_id","type_id","uncompressed_size","uncompressed_size","verify","vzip","vzip","vzip","0","0","0","0","0","0","CredIssuerKeyPair","CredIssuerPubKey","FreezerKeyPair","FreezerPubKey","UserAddress","UserKeyPair","UserPubKey","ViewerKeyPair","ViewerPubKey","addr_keypair","address","address","address","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","default","default","default","default","default","default","default","default","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize_unchecked","deserialize_unchecked","deserialize_unchecked","deserialize_unchecked","deserialize_unchecked","deserialize_unchecked","deserialize_unchecked","deserialize_unchecked","deserialize_unchecked","deserialize_uncompressed","deserialize_uncompressed","deserialize_uncompressed","deserialize_uncompressed","deserialize_uncompressed","deserialize_uncompressed","deserialize_uncompressed","deserialize_uncompressed","deserialize_uncompressed","drop","drop","drop","drop","drop","drop","drop","drop","drop","enc_key","enc_key","enc_keypair","encrypt","eq","eq","eq","eq","eq","eq","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from_str","from_str","from_str","from_str","from_str","from_str","from_str","from_str","from_str","generate","generate","generate","generate","get_hash","get_hash","get_hash","get_hash","get_hash","get_hash","hash","hash","hash","hash","hash","hash","header","header","header","header","header","header","header","header","header","init","init","init","init","init","init","init","init","init","into","into","into","into","into","into","into","into","into","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","ne","ne","ne","ne","new","nullify","nullify","open_mint_viewing_memo","open_transfer_viewing_memo","parse_for_keystore","parse_for_keystore","parse_for_keystore","parse_for_keystore","pub_key","pub_key","pub_key","pub_key","pub_key","pub_key","pub_key","pub_key","render_to","render_to","render_to","render_to","render_to","render_to","render_to","render_to","render_to","sec_key","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize_unchecked","serialize_unchecked","serialize_unchecked","serialize_unchecked","serialize_unchecked","serialize_unchecked","serialize_unchecked","serialize_unchecked","serialize_unchecked","serialize_uncompressed","serialize_uncompressed","serialize_uncompressed","serialize_uncompressed","serialize_uncompressed","serialize_uncompressed","serialize_uncompressed","serialize_uncompressed","serialize_uncompressed","serialized_size","serialized_size","serialized_size","serialized_size","serialized_size","serialized_size","serialized_size","serialized_size","serialized_size","sign","tag","tag","tag","tag","tag","tag","tag","tag","tag","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_string","to_string","to_string","to_string","to_string","to_string","to_string","to_string","to_string","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","uncompressed_size","uncompressed_size","uncompressed_size","uncompressed_size","uncompressed_size","uncompressed_size","uncompressed_size","uncompressed_size","uncompressed_size","verify_sig","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","MintAuxInfo","MintNote","as_any","as_any","as_any_mut","as_any_mut","aux_info","borrow","borrow","borrow_mut","borrow_mut","chg_comm","clone","clone","clone_into","clone_into","deref","deref","deref_mut","deref_mut","deserialize","deserialize","deserialize","deserialize","deserialize_unchecked","deserialize_unchecked","deserialize_uncompressed","deserialize_uncompressed","drop","drop","eq","eq","fee","fmt","fmt","from","from","generate","get_hash","get_hash","hash","hash","init","init","input_nullifier","into","into","into_any","into_any","into_any_arc","into_any_arc","into_any_rc","into_any_rc","merkle_root","mint_amount","mint_asset_def","mint_comm","mint_internal_asset_code","ne","ne","proof","serialize","serialize","serialize","serialize","serialize_unchecked","serialize_unchecked","serialize_uncompressed","serialize_uncompressed","serialized_size","serialized_size","to_owned","to_owned","try_from","try_from","try_into","try_into","txn_memo_ver_key","type_id","type_id","uncompressed_size","uncompressed_size","verify","viewing_memo","vzip","vzip","load_freeze_proving_key","load_freeze_verifying_key","load_mint_proving_key","load_mint_verifying_key","load_transfer_proving_key","load_transfer_verifying_key","load_universal_parameter","store_freeze_proving_key","store_freeze_verifying_key","store_mint_proving_key","store_mint_verifying_key","store_transfer_proving_key","store_transfer_verifying_key","store_universal_parameter_for_demo","UniversalParam","freeze","load_srs","mint","transfer","universal_setup","universal_setup_for_staging","FreezeProvingKey","FreezeValidityProof","FreezeVerifyingKey","as_any","as_any","as_any_mut","as_any_mut","borrow","borrow","borrow_mut","borrow_mut","clone","clone","clone_into","clone_into","deref","deref","deref_mut","deref_mut","deserialize","deserialize","deserialize","deserialize","deserialize_unchecked","deserialize_unchecked","deserialize_uncompressed","deserialize_uncompressed","drop","drop","eq","eq","fmt","fmt","from","from","from","from","get_verifying_key","init","init","into","into","into_any","into_any","into_any_arc","into_any_arc","into_any_rc","into_any_rc","ne","ne","num_input","num_input","num_input","num_input","num_inputs","num_output","num_output","num_outputs","preprocess","proving_key","serialize","serialize","serialize","serialize","serialize_unchecked","serialize_unchecked","serialize_uncompressed","serialize_uncompressed","serialized_size","serialized_size","to_owned","to_owned","tree_depth","tree_depth","try_from","try_from","try_into","try_into","type_id","type_id","uncompressed_size","uncompressed_size","verifying_key","vzip","vzip","MintProvingKey","MintValidityProof","MintVerifyingKey","as_any","as_any","as_any_mut","as_any_mut","borrow","borrow","borrow_mut","borrow_mut","clone","clone","clone_into","clone_into","deref","deref","deref_mut","deref_mut","deserialize","deserialize","deserialize","deserialize","deserialize_unchecked","deserialize_unchecked","deserialize_uncompressed","deserialize_uncompressed","drop","drop","eq","eq","fmt","fmt","from","from","from","from","get_verifying_key","init","init","into","into","into_any","into_any","into_any_arc","into_any_arc","into_any_rc","into_any_rc","ne","ne","preprocess","proving_key","serialize","serialize","serialize","serialize","serialize_unchecked","serialize_unchecked","serialize_uncompressed","serialize_uncompressed","serialized_size","serialized_size","to_owned","to_owned","tree_depth","tree_depth","try_from","try_from","try_into","try_into","type_id","type_id","uncompressed_size","uncompressed_size","verifying_key","vzip","vzip","TransferProvingKey","TransferValidityProof","TransferVerifyingKey","as_any","as_any","as_any_mut","as_any_mut","borrow","borrow","borrow_mut","borrow_mut","clone","clone","clone_into","clone_into","deref","deref","deref_mut","deref_mut","deserialize","deserialize","deserialize","deserialize","deserialize_unchecked","deserialize_unchecked","deserialize_uncompressed","deserialize_uncompressed","drop","drop","eq","eq","fmt","fmt","from","from","from","from","from","get_verifying_key","init","init","into","into","into_any","into_any","into_any_arc","into_any_arc","into_any_rc","into_any_rc","n_inputs","n_inputs","n_outputs","n_outputs","ne","ne","num_input","num_input","num_inputs","num_output","num_output","num_outputs","preprocess","proving_key","serialize","serialize","serialize","serialize","serialize_unchecked","serialize_unchecked","serialize_uncompressed","serialize_uncompressed","serialized_size","serialized_size","to_owned","to_owned","tree_depth","tree_depth","try_from","try_from","try_into","try_into","type_id","type_id","uncompressed_size","uncompressed_size","verifying_key","vzip","vzip","0","0","0","0","0","0","0","0","0","0","0","Amount","AssetCode","AssetCodeSeed","AssetDefinition","AssetPolicy","BlindFactor","ExpirableCredential","FeeInput","Freeze","FreezeFlag","Frozen","IdentityAttribute","InternalAssetCode","Mint","NoteType","Nullifier","ReceiverMemo","RecordCommitment","RecordOpening","RevealMap","Transfer","TxnFeeInfo","Unfrozen","ViewableData","ViewableMemo","acc_member_witness","add","add_assign","amount","amount","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","asset_code","asset_def","attributes","attrs","blind","blinding_factor","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","cmp","code","create","creator_pk","cred","cred_creator_pub_key","cred_pk","decrypt","default","default","default","default","default","default","default","default","default","default","default","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize_unchecked","deserialize_unchecked","deserialize_unchecked","deserialize_unchecked","deserialize_unchecked","deserialize_unchecked","deserialize_unchecked","deserialize_unchecked","deserialize_unchecked","deserialize_unchecked","deserialize_unchecked","deserialize_unchecked","deserialize_unchecked","deserialize_uncompressed","deserialize_uncompressed","deserialize_uncompressed","deserialize_uncompressed","deserialize_uncompressed","deserialize_uncompressed","deserialize_uncompressed","deserialize_uncompressed","deserialize_uncompressed","deserialize_uncompressed","deserialize_uncompressed","deserialize_uncompressed","deserialize_uncompressed","div","div_assign","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","dummy","dummy","dummy","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","expiry","expiry","fee_amount","fee_chg_ro","fee_input","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","freeze_flag","freezer_pk","freezer_pub_key","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from_field_element","from_ro","from_str","from_str","from_str","from_str","from_str","from_str","from_str","from_str","from_str","from_str","from_str","from_vec","generate","get_hash","get_hash","get_hash","get_hash","get_hash","get_hash","get_hash","get_hash","get_hash","get_hash","get_hash","get_hash","get_hash","get_hash","get_hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","header","header","header","header","header","header","header","header","header","header","header","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","internal","internal","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","is_amount_revealed","is_blinding_factor_revealed","is_cred_creator_pub_key_set","is_dummy","is_dummy","is_expired","is_freezer_pub_key_set","is_native","is_reveal_threshold_set","is_user_address_revealed","is_viewer_pub_key_set","list","mul","mul_assign","native","native","ne","ne","ne","ne","ne","ne","ne","ne","ne","ne","ne","ne","ne","ne","ne","ne","new","new","new","new","new","new","new","new_domestic","new_foreign","owner_keypair","parse_for_keystore","parse_for_keystore","parse_for_keystore","partial_cmp","policy","policy_ref","pub_key","rand","rand_for_test","rand_for_test","rand_for_test","rand_for_test","random","random_for_test","rem","rem_assign","render_to","render_to","render_to","render_to","render_to","render_to","render_to","render_to","render_to","render_to","render_to","reveal_all","reveal_all_attributes","reveal_amount","reveal_blinding_factor","reveal_ith_attribute","reveal_map","reveal_map","reveal_record_opening","reveal_threshold","reveal_threshold","reveal_user_address","ro","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize_unchecked","serialize_unchecked","serialize_unchecked","serialize_unchecked","serialize_unchecked","serialize_unchecked","serialize_unchecked","serialize_unchecked","serialize_unchecked","serialize_unchecked","serialize_unchecked","serialize_unchecked","serialize_unchecked","serialize_uncompressed","serialize_uncompressed","serialize_uncompressed","serialize_uncompressed","serialize_uncompressed","serialize_uncompressed","serialize_uncompressed","serialize_uncompressed","serialize_uncompressed","serialize_uncompressed","serialize_uncompressed","serialize_uncompressed","serialize_uncompressed","serialized_size","serialized_size","serialized_size","serialized_size","serialized_size","serialized_size","serialized_size","serialized_size","serialized_size","serialized_size","serialized_size","serialized_size","serialized_size","serialized_size","serialized_size","serialized_size","set_cred_creator_pub_key","set_freezer_pub_key","set_reveal_map_for_test","set_reveal_threshold","set_viewer_pub_key","sub","sub_assign","sum","tag","tag","tag","tag","tag","tag","tag","tag","tag","tag","to_field_element","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_string","to_string","to_string","to_string","to_string","to_string","to_string","to_string","to_string","to_string","to_string","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","uncompressed_size","uncompressed_size","uncompressed_size","uncompressed_size","uncompressed_size","uncompressed_size","uncompressed_size","uncompressed_size","uncompressed_size","uncompressed_size","uncompressed_size","uncompressed_size","uncompressed_size","user_addr","user_address","value","verify_foreign","viewer_pk","viewer_pub_key","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","TransferPublicInput","as_any","as_any_mut","borrow","borrow_mut","clone","clone_into","deref","deref_mut","drop","fee","fmt","from","from","init","input_nullifiers","into","into_any","into_any_arc","into_any_rc","merkle_root","native_asset_code","output_commitments","to_owned","try_from","try_into","type_id","valid_until","viewing_memo","vzip","AuxInfo","TransferNote","TransferNoteInput","acc_member_witness","as_any","as_any","as_any","as_any_mut","as_any_mut","as_any_mut","aux_info","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","check_instance_and_get_public_input","clone","clone","clone","clone_into","clone_into","clone_into","cred","deref","deref","deref","deref_mut","deref_mut","deref_mut","deserialize","deserialize","deserialize","deserialize","deserialize_unchecked","deserialize_unchecked","deserialize_uncompressed","deserialize_uncompressed","drop","drop","drop","eq","eq","extra_proof_bound_data","fee","fmt","fmt","fmt","from","from","from","from","generate_native","generate_non_native","get_hash","get_hash","hash","hash","init","init","init","inputs_nullifiers","into","into","into","into_any","into_any","into_any","into_any_arc","into_any_arc","into_any_arc","into_any_rc","into_any_rc","into_any_rc","merkle_root","ne","ne","output_commitments","owner_keypair","proof","ro","serialize","serialize","serialize","serialize","serialize_unchecked","serialize_unchecked","serialize_uncompressed","serialize_uncompressed","serialized_size","serialized_size","to_owned","to_owned","to_owned","try_from","try_from","try_from","try_into","try_into","try_into","txn_memo_ver_key","type_id","type_id","type_id","uncompressed_size","uncompressed_size","valid_until","verify","viewing_memo","vzip","vzip","vzip","TxnsParams","as_any","as_any_mut","borrow","borrow_mut","clone","clone_into","compute_universal_param_size","deref","deref_mut","drop","fmt","from","generate_txns","init","into","into_any","into_any_rc","merkle_root","params_builder","to_owned","try_from","try_into","txns","type_id","valid_until","verifying_keys","vzip","FreezeParamsBuilder","MintParamsBuilder","TransferParamsBuilder","TxnsParams","ac_description","ac_seed","acc_member_witness","as_any","as_any","as_any","as_any_mut","as_any_mut","as_any_mut","asset_def","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","build_freeze_note","build_mint_note","build_transfer_note","clone","clone","clone_into","clone_into","deref","deref","deref","deref_mut","deref_mut","deref_mut","drop","drop","drop","fee","fee","fee_chg_ro","fee_input","fee_ro","fmt","fmt","from","from","from","init","init","init","input_acc_member_witnesses","input_creds","input_keypairs","input_ros","inputs","into","into","into","into_any","into_any","into_any","into_any_arc","into_any_arc","into_any_arc","into_any_rc","into_any_rc","into_any_rc","merkle_root","mint_ro","minter_keypair","new","new","new_non_native","num_input","num_output","output_ros","receiver_keypair","rng","root","set_input_amounts","set_input_creds","set_output_amounts","to_owned","to_owned","transfer_asset_def","tree_depth","tree_depth","tree_depth","try_from","try_from","try_from","try_into","try_into","try_into","txns","type_id","type_id","type_id","valid_until","verifying_keys","viewer_keypair","vzip","vzip","vzip","Add","Index","IndexChange","KeyNotFound","KeyNotFoundSnafu","KeyValueStore","KeyValueStoreError","PersistableBTreeMultiMap","PersistableHashMap","PersistableHashMapBTreeMultiMap","PersistableHashSet","PersistableMap","PersistenceError","PersistenceSnafu","Remove","Update","as_any","as_any","as_any","as_any","as_any","as_any","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_error_source","backtrace","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","build","cause","clone","clone","clone_into","clone_into","commit","commit_version","default","delete","deref","deref","deref","deref","deref","deref","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","description","drop","drop","drop","drop","drop","drop","fail","fmt","fmt","fmt","fmt","from","from","from","from","from","from","from","header","in_current_span","index","index","init","init","init","init","init","init","insert","insert","into","into","into","into","into","into","into_any","into_any","into_any","into_any","into_any","into_any","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_error","into_error","iter","load","new","new","pending_changes","persistable_index","remove","remove","render_to","revert","revert_version","source","store","store","to_owned","to_owned","to_string","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","type_id","vzip","vzip","vzip","vzip","vzip","vzip","0","0","0","source","0","0","AwaitingMemos","ConvertRecordAmountError","CryptoError","CryptoSnafu","Fragmentation","FragmentationSnafu","InsufficientBalance","InsufficientBalanceSnafu","InvalidFreezerKey","InvalidFreezerKeySnafu","InvalidSize","InvalidSizeSnafu","InvalidViewerKey","InvalidViewerKeySnafu","LedgerState","LedgerStates","NoFitKey","NoFitKeySnafu","OutOfRange","Pending","RecordAmount","Rejected","Retired","TooManyOutputs","TooManyOutputsSnafu","TransactionError","TransactionStatus","TransactionUID","TransferSpec","Unknown","actual","amount","arbitrary","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_error_source","asset","asset","asset","asset","asset","asset_key","asset_key","backtrace","balance","balance_breakdown","block_height","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","bound_data","build","build","build","build","build","build","build","cause","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","commit","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","description","deserialize","deserialize","deserialize","deserialize","deserialize_unchecked","deserialize_uncompressed","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","dynamic_store","eq","eq","eq","fail","fail","fail","fail","fail","fail","fail","fee","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from_str","get_hash","hash","header","header","header","in_current_span","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_error","into_error","into_error","into_error","into_error","into_error","into_error","into_error","is_final","load","max_records","max_records","my_key","my_key","new","now","now","nullifiers","num_change_records","num_inputs","num_inputs_actual","num_inputs_required","num_outputs","num_outputs_actual","num_outputs_required","num_receivers","parse_for_keystore","proving_keys","proving_keys","receivers","record_mt","render_to","render_to","render_to","required","revert","sender_key_pairs","serialize","serialize","serialize","serialize","serialize_unchecked","serialize_uncompressed","serialized_size","source","static_store","submit_transaction","succeeded","suggested_amount","tag","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_string","to_string","to_string","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","uncompressed_size","update","update_dynamic","validator","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","xfr_size_requirement","actual","amount","asset","asset","asset","asset","asset_key","asset_key","max_records","max_records","my_key","my_key","num_change_records","num_inputs","num_inputs_actual","num_inputs_required","num_outputs","num_outputs_actual","num_outputs_required","num_receivers","required","source","suggested_amount","CreateLoader","InteractiveLoader","KeystoreLoader","LoginLoader","Meta","MnemonicPasswordLogin","RecoveryLoader","as_any","as_any","as_any","as_any","as_any","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","check_mnemonic","check_password","clone","clone_into","create","create","create","create","create","create","decrypt_mnemonic","default","deref","deref","deref","deref","deref","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deserialize","dir","dir","dir","dir","drop","drop","drop","drop","drop","encrypted_bytes","encrypted_mnemonic","eq","exclusive","exclusive","fmt","from","from","from","from","from","init","init","init","init","init","input","interactive","into","into","into","into","into","into_any","into_any","into_any","into_any","into_any","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_reader","load","load","load","load","load","location","location","location","location","location","login","mnemonic","mnemonic","ne","new","new","new","new","new","new_password","password","password","path","recovery","rng","rng","rng","salt","serialize","set_password","to_owned","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","version","vzip","vzip","vzip","vzip","vzip","CreateLoader","dir","exclusive","mnemonic","password","rng","InteractiveLoader","dir","input","rng","LoginLoader","dir","password","RecoveryLoader","dir","mnemonic","new_password","rng","EmptyLeaf","FilledMTBuilder","LWMerkleTree","LookupResult","MerkleCommitment","MerkleFrontier","MerkleLeafProof","NodeValue","NotInMemory","Ok","acc_member_witness","arbitrary","as_any","as_any","as_any","as_any_mut","as_any_mut","as_any_mut","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","build","build_pruned","capacity","clone","clone","clone_into","clone_into","commitment","deref","deref","deref","deref_mut","deref_mut","deref_mut","deserialize","drop","drop","drop","eq","eq","expect_ok","extend","extend","filled_root","fmt","fmt","forget","forget_last_leaf","from","from","from","from","from_existing","from_frontier","frontier","get_hash","get_leaf","hash","height","height","init","init","init","into","into","into","into_any","into_any","into_any","into_any_arc","into_any_arc","into_any_arc","into_any_rc","into_any_rc","into_any_rc","into_frontier_and_commitment","map","ne","ne","new","new","num_leaves","num_leaves","peaks","push","push","remember","restore_from_frontier","serialize","sparse","to_owned","to_owned","tree","try_from","try_from","try_from","try_into","try_into","try_into","type_id","type_id","type_id","vzip","vzip","vzip","0","1","MetaStore","as_any","as_any_mut","borrow","borrow_mut","commit","create","deref","deref_mut","drop","encrypting_storage_adapter","exists","from","init","into","into_any","into_any_arc","into_any_rc","key_stream","meta","meta","meta_dirty","new","persisted_meta","revert","root_key_tree","try_from","try_into","type_id","vzip","NetworkBackend","address_book_client","as_any","as_any_mut","borrow","borrow_mut","create","deref","deref_mut","drop","finalize","from","get","get_initial_scan_state","get_nullifier_proof","get_public_key","init","into","into_any","into_any_arc","into_any_rc","new","post","query_client","register_user_key","submit","subscribe","try_from","try_into","type_id","univ_param","validator_client","vzip","wait_for_esqs","Automated","Interactive","Reader","as_any","as_any_mut","automated","borrow","borrow_mut","clone","clone_into","deref","deref_mut","drop","from","init","interactive","into","into_any","into_any_arc","into_any_rc","read_line","read_password","to_owned","try_from","try_into","type_id","vzip","0","0","Record","RecordEditor","Records","amount","as_any","as_any","as_any","as_any_mut","as_any_mut","as_any_mut","asset_code","asset_definition","asset_records","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","clone","clone_into","commit","create","created_time","created_time","delete","delete_by_nullifier","deref","deref","deref","deref","deref_mut","deref_mut","deref_mut","deref_mut","deserialize","drop","drop","drop","fmt","freeze_flag","from","from","from","get","get_mut","get_spendable","get_spendable_with_amount","hold_until","init","init","init","into","into","into","into_any","into_any","into_any","into_any_arc","into_any_arc","into_any_arc","into_any_rc","into_any_rc","into_any_rc","iter","modified_time","modified_time","new","nullifier","nullifier","nullifier_records","on_hold","pub_key","record","record_opening","revert","ro","save","serialize","store","store","to_owned","try_from","try_from","try_from","try_into","try_into","try_into","type_id","type_id","type_id","uid","uid","vzip","vzip","vzip","with_nullifier","with_nullifier_mut","Block","BlockProof","Ledger","NoViewingMemos","NullifierProof","NullifierSet","StateCommitment","Transaction","TransactionHash","TransactionKind","UnviewableAsset","ValidationError","Validator","Validator","ViewingError","ViewingMemoOpening","as_any","as_any","as_any_mut","as_any_mut","asset","borrow","borrow","borrow_mut","borrow_mut","cap","clone","clone","clone_into","clone_into","deref","deref","deref_mut","deref_mut","drop","drop","eq","eq","fmt","fmt","from","from","init","init","inputs","into","into","into_any","into_any","into_any_arc","into_any_arc","into_any_rc","into_any_rc","merkle_height","name","ne","outputs","record_root_history","srs","to_owned","to_owned","traits","try_from","try_from","try_into","try_into","type_id","type_id","types","vzip","vzip","Block","DEFAULT_MERKLE_HEIGHT","Failed","Freeze","Ledger","LedgerWithHeight","Mint","NullifierSet","Receive","Send","Transaction","TransactionKind","Unfreeze","Unknown","ValidationError","Validator","add_transaction","arbitrary","as_any","as_any","as_any","as_any","as_any","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_error_source","backtrace","block_height","block_height","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","cause","clone","clone","clone","clone","clone","clone_into","clone_into","clone_into","clone_into","clone_into","commit","default","deref","deref","deref","deref","deref","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","description","deserialize","deserialize","deserialize","deserialize","drop","drop","drop","drop","drop","eq","eq","eq","fmt","fmt","fmt","fmt","fmt","fmt","fmt","freeze","from","from","from","from","from","get_hash","get_hash","hash","hash","header","header","in_current_span","index","index","index","init","init","init","init","init","into","into","into","into","into","into_any","into_any","into_any","into_any","into_any","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_iter","into_iter","is_bad_nullifier_proof","is_empty","iter","len","merkle_height","mint","name","ne","ne","new","next_block","open_mint_viewing_memo","open_xfr_viewing_memo","receive","record_root_history","records_commitment","records_frontier","render_to","render_to","send","serialize","serialize","serialize","serialize","source","srs","to_owned","to_owned","to_owned","to_owned","to_owned","to_string","to_string","transactions","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","txns","type_id","type_id","type_id","type_id","type_id","unfreeze","unknown","validate_and_apply","vzip","vzip","vzip","vzip","vzip","msg","Block","Block","Error","Hash","Kind","Ledger","NullifierSet","NullifierSet","Proof","Proof","StateCommitment","Transaction","Transaction","TransactionKind","ValidationError","Validator","Validator","add_transaction","block_height","cap","commit","freeze","hash","input_nullifiers","is_bad_nullifier_proof","is_empty","kind","len","merkle_height","mint","multi_insert","name","new","next_block","open_viewing_memo","output_commitments","output_len","output_openings","proven_nullifiers","receive","record_root_history","send","set_proofs","srs","txns","unfreeze","unknown","validate_and_apply","Block","BlockProof","NoViewingMemos","NullifierProof","NullifierSet","StateCommitment","Transaction","TransactionHash","TransactionKind","UnviewableAsset","ValidationError","Validator","ViewingError","ViewingMemoOpening","asset","inputs","outputs","SignedMemos","Transaction","TransactionEditor","TransactionParams","Transactions","add_pending_uids","as_any","as_any","as_any","as_any","as_any","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","asset","asset","asset","asset_change","asset_change","asset_change","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","clear_timeout","clone","clone","clone","clone_into","clone_into","clone_into","commit","create","created_time","created_time","delete","deref","deref","deref","deref","deref","deref","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deserialize","deserialize","deserialize","drop","drop","drop","drop","drop","eq","eq","eq","expiring_txns","fee_change","fee_change","fee_change","fmt","fmt","fmt","from","from","from","from","from","get","get_mut","init","init","init","init","init","inputs","inputs","inputs","into","into","into","into","into","into_any","into_any","into_any","into_any","into_any","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","iter","kind","kind","kind","memos","memos","modified_time","modified_time","new","outputs","outputs","outputs","pending_uids","pending_uids","receivers","receivers","receivers","remove_expired","remove_pending_uid","revert","save","senders","senders","senders","serialize","serialize","serialize","set_status","sig","signed_memos","signed_memos","status","status","status","store","store","time","timeout","timeout","timeout","to_owned","to_owned","to_owned","transaction","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","uid","uid","uids_awaiting_memos","vzip","vzip","vzip","vzip","vzip","with_asset_change","with_fee_change","with_memo_id","with_memo_id_mut","with_timeout"],"q":["espresso_clientespresso_client::KeystoreError","","","","","","","","","","","","","","","","","","","","","","","","","espresso_client::accounts","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","espresso_client::assets","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","espresso_client::cli","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","espresso_client::cli_client","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","espresso_client::encryption","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","espresso_client::encryption::Error","","","espresso_client::events","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","espresso_client::events::LedgerEvent","","","","","","","","espresso_client::hd","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","espresso_client::ioespresso_client::jf_cap","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","espresso_client::jf_cap::TransactionNote","","","espresso_client::jf_cap::TransactionVerifyingKey","","","espresso_client::jf_cap::bench_utils","","","","","","","","","","","","","","","","","espresso_client::jf_cap::constants","","","","","","","","","","","","espresso_client::jf_cap::errors","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","espresso_client::jf_cap::errors::DeserializationError","","espresso_client::jf_cap::errors::TxnApiError","","","","","","","","","","","","","","","","espresso_client::jf_cap::freeze","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","espresso_client::jf_cap::keysespresso_client::jf_cap::mint","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","espresso_client::jf_cap::parameters","","","","","","","","","","","","","","espresso_client::jf_cap::proof","","","","","","","espresso_client::jf_cap::proof::freeze","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","espresso_client::jf_cap::proof::mint","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","espresso_client::jf_cap::proof::transfer","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","espresso_client::jf_cap::structsespresso_client::jf_cap::testing_apis","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","espresso_client::jf_cap::transfer","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","espresso_client::jf_cap::utils","","","","","","","","","","","","","","","","","","","","","","","","","","","","espresso_client::jf_cap::utils::params_builder","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","espresso_client::key_value_store","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","espresso_client::key_value_store::IndexChange","","","espresso_client::key_value_store::KeyValueStoreError","espresso_client::ledger_stateespresso_client::ledger_state::TransactionError","","","","","","","","","","","","","","","","","","","","","","","espresso_client::loader","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","espresso_client::loader::create","","","","","","espresso_client::loader::interactive","","","","espresso_client::loader::login","","","espresso_client::loader::recovery","","","","","espresso_client::lw_merkle_tree","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","espresso_client::lw_merkle_tree::LookupResult","","espresso_client::meta","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","espresso_client::network","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","espresso_client::reader","","","","","","","","","","","","","","","","","","","","","","","","","","","espresso_client::reader::Reader","","espresso_client::records","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","espresso_client::reef","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","espresso_client::reef::cap","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","espresso_client::reef::cap::ValidationError","espresso_client::reef::traits","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","espresso_client::reef::types","","","","","","","","","","","","","","","","","espresso_client::transactionsd":["","","An asset with its code as the primary key.","An editor to create or update the asset or assets store.","","SNAFU context selector for the …","","SNAFU context selector for the …","","SNAFU context selector for the …","Attempted to load an asset library with an invalid …","SNAFU context selector for the …","Assets stored in an assets store.","","SNAFU context selector for the …","","SNAFU context selector for the <code>KeystoreError::BincodeError</code> …","","SNAFU context selector for the <code>KeystoreError::Cancelled</code> …","","SNAFU context selector for the …","","","","SNAFU context selector for the …","","SNAFU context selector for the <code>KeystoreError::CryptoError</code> …","","","SNAFU context selector for the …","","","Notifications about ledger state changes.","","SNAFU context selector for the <code>KeystoreError::Failed</code> …","A small icon to display with an asset in a GUI interface.","","SNAFU context selector for the …","","SNAFU context selector for the …","","SNAFU context selector for the <code>KeystoreError::InvalidBlock</code> …","","SNAFU context selector for the …","","SNAFU context selector for the …","","SNAFU context selector for the <code>KeystoreError::IoError</code> …","","SNAFU context selector for the <code>KeystoreError::KeyError</code> …","","SNAFU context selector for the …","The generic CAP keystore implementation.","The interface required by the keystore from a specific …","","Transient state derived from the persistent LedgerState …","Storage for keystore resources.","Information required to mint an asset.","","SNAFU context selector for the <code>KeystoreError::MnemonicError</code>…","","SNAFU context selector for the <code>KeystoreError::NoSuchAccount</code>…","","SNAFU context selector for the …","","SNAFU context selector for the …","Record amount.","","SNAFU context selector for the <code>KeystoreError::ScanNotFound</code> …","","","SNAFU context selector for the <code>KeystoreError::TimedOut</code> …","","SNAFU context selector for the …","","SNAFU context selector for the …","","SNAFU context selector for the <code>KeystoreError::UserKeyExists</code>…","","","","The accounts module.","","","Add a freezing key to the keystore’s key set.","Add a sending key to the keystore’s key set.","Add a viewing key to the keystore’s key set.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Get an asset","Get details about an asset type using its code.","","","","","","The assets module.","Get the list of assets.","List assets discovered or imported by this keystore.","","Get the mutable assets.","","","","A future which completes when there are no more …","A future which completes when the transaction is finalized …","","","Compute the spendable balance of the given asset owned by …","Compute the spendable balance of the given asset owned by …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Consume the selector and return the associated error","Consume the selector and return the associated error","Consume the selector and return the associated error","Consume the selector and return the associated error","Consume the selector and return the associated error","Consume the selector and return the associated error","Consume the selector and return the associated error","Consume the selector and return the associated error","Consume the selector and return the associated error","Consume the selector and return the associated error","Consume the selector and return the associated error","Consume the selector and return the associated error","Consume the selector and return the associated error","Consume the selector and return the associated error","Consume the selector and return the associated error","Consume the selector and return the associated error","Consume the selector and return the associated error","Consume the selector and return the associated error","Build a transaction to freeze at least <code>amount</code> of a …","Create a mint note that assigns an asset to an owner.","Build a transfer with full customization.","Build a transaction to unfreeze at least <code>amount</code> of a …","","","Clear the asset description.","Clear the asset icon.","Clear the asset name.","The generic CAP Keystore frontend","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Get the asset code.","Create a Command from a help string and a function.","Commit the store version.","","","Create a new keystore.","Create an asset.","Create a native asset.","","Get the created time.","The time when the asset was created.","","Define a new asset and store secret info for minting.","Get the asset definition.","","Deletes an asset from the store.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Get the optional asset description.","","","Optional asset description.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Symmetric encryption for locally persistent keystore data.","","","","","Event definitions for ledger state changes.","","Consume the selector and return a <code>Result</code> with the …","Consume the selector and return a <code>Result</code> with the …","Consume the selector and return a <code>Result</code> with the …","Consume the selector and return a <code>Result</code> with the …","Consume the selector and return a <code>Result</code> with the …","Consume the selector and return a <code>Result</code> with the …","Consume the selector and return a <code>Result</code> with the …","Consume the selector and return a <code>Result</code> with the …","Consume the selector and return a <code>Result</code> with the …","Consume the selector and return a <code>Result</code> with the …","Consume the selector and return a <code>Result</code> with the …","Consume the selector and return a <code>Result</code> with the …","Consume the selector and return a <code>Result</code> with the …","Consume the selector and return a <code>Result</code> with the …","Consume the selector and return a <code>Result</code> with the …","Consume the selector and return a <code>Result</code> with the …","Consume the selector and return a <code>Result</code> with the …","Consume the selector and return a <code>Result</code> with the …","Record a finalized transaction.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Try to format the asset description as human-readable as …","Build an submit a freeze transaction.","","Get the freezing account by the public key.","","Get the mutable freezing accounts.","Get the freezing public keys.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","","","Returns the argument unchanged.","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","","","","Returns the argument unchanged.","Returns the argument unchanged.","","","","Compute the balance frozen records of the given asset type …","Generate a new freezing key and add it to the keystore’s …","Generate a new sending key and add it to the keystore’s …","Generate a new viewing key and add it to the keystore’s …","Get the asset by the code from the store.","","Get a ledger state from which to start a scan.","Get a mutable asset editor by the code from the store.","Determine whether a nullifier is spent and obtain a proof.","Find the public encryption key associated with the given …","","Hierarchical deterministic key generation","","","","The icon height in pixels.","Get the optional asset icon.","Optional asset icon.","Import an unverified asset.","Import an asset.","Manually add an encrypted record.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Insert an asset.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","I/O interface for the CLI.","","","Iterate through the assets.","","","The key-value store.","The ledger state module.","","Load from a byte stream.","","Load from a JPEG byte stream.","Load from a PNG byte stream.","Traits and types for creating and loading keystores.","A Merkle tree which supports arbitrarily sparse …","","Storage for KeystoreLoader metadata.","Access the metadata storage layer","","Access the metadata storage layer","Build and submit a mint transaction.","Get the optional mint information.","","Get the modified time.","The last time when the asset was modified.","","","","","Get the optional asset name.","Optional asset name.","","","","","","Load an assets store.","","","","The index of the most recently processed event.","","","Inverse of <code>fmt_description()</code>.","","","","Get the asset policy.","","Access the shared state directly.","Interactive input.","The records module.","List records owned or viewable by this keystore.","","Publish an encryption key so that other keystores can …","","","","","","Resize the icon.","Revert the store version.","","Save the asset to the store.","","Get the sending account by the address.","","Get the mutable sending accounts.","Get the sending addresses.","Get the sending keys.","","","","","","","Set the optional asset description.","Set the optional asset icon.","Set the optional asset name.","Get the size <code>(width, height)</code> of the image.","","","","A key-value store for assets.","","","","Submit a transaction to a validator.","Submit a transaction to be validated.","Submit a CAP transaction to be validated.","Subscribe to the asynchronous ledgerevent stream.","","A future which completes when the keystore has processed …","A future which completes when the keystore has processed …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","List past transactions involving this keystore.","Get the status of a transaction.","The transaction module.","","Basic transfer without customization.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Build and submit an unfreeze transaction.","Updates the asset by merging in the given asset with the …","","Check if the asset is verified.","","A set of asset codes loaded from verified asset libraries.","Load a verified asset library with its trusted signer.","Load a verified asset library with its trusted signer.","Load a verified asset library from a file or byte stream.","","Get the viewing account by the public key.","","Get the mutable viewing accounts.","Get the viewing public keys.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","The icon width in pixels","Set the asset description.","Set the asset icon.","Set the asset name.","Access the shared state directly.","Write to a byte stream.","Write to a byte stream using the JPEG format.","Write to a byte stream using the PNG format.","","","","","","","","","","","","","","","","","","","","","","","","","","","","An editor to create or update the account or accounts …","Accounts stored in an accounts store.","","Keys with a public part.","","","","","","","","","","","","","","","","","Commit the store version.","Create an account with the default description.","Get the created time.","The time when the account was created.","Deletes an account from the store.","","","","","","","","","Get the account description.","The account description.","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Get the account by the public key from the store.","Get a mutable account editor by the public key from the …","Get the index.","Get the optional index into the HD key stream.","The next index into the HD key stream.","Optional index into the HD key stream.","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","Iterate through the accounts.","Iterate through the keys of all accounts.","Iterate through the public keys of all accounts.","Get the account key.","The account key.","Get the modified time.","The last time when the account was modified.","Load an accounts store.","Get and increment the index.","","Get the account public key.","Revert the store version.","Save the account to the store.","Get the optional ledger scan.","Optional ledger scan.","","Set the account as used.","","A key-value store for accounts.","","","","","","","","","","","Check whether the account is used.","Whether the account is used.","","","","","An asset with its code as the primary key.","An editor to create or update the asset or assets store.","Assets stored in an assets store.","","A small icon to display with an asset in a GUI interface.","Information required to mint an asset.","A library of assets, signed by a trusted party.","","","","","","","Check that the library is correctly signed and return the …","","","The time when the asset was created.","","","","","Optional asset description.","","","","Returns the argument unchanged.","Optional asset icon.","","Calls <code>U::from(self)</code>.","","","","","The last time when the asset was modified.","Optional asset name.","Create and sign a new verified asset library.","Obtain a list of the assets in <code>self</code>, but only if <code>self</code> is …","","","","","","A key-value store for assets.","","","","","","A set of asset codes loaded from verified asset libraries.","","","The type of command line options for use when configuring …","The KeystoreBackend implementation to use for the keystore.","The interface required of a particular ledger-specific …","CLI command line arguments.","Types which can be parsed from a string relative to a …","","A REPL command.","","","","","The ledger for which we want to instantiate this CLI.","","Types which can be listed in terminal output and parsed …","The KeystoreLoader implementation to use to create or load …","The type of metadata used by Self::Loader.","","","","","","","","","","","","","","","","","","","","Run the CLI based in the provided command line arguments.","","","","","Create a Command from a help string and a function.","Create a Command from a help string and a function.","","","","","","","","","","","","","","","","","","","","","Add extra, ledger-specific commands to the generic CLI …","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","Returns the argument unchanged.","","","","","A brief description of what the command does.","","","","","","Create a backend for the keystore which is being …","Create a loader in order to create or load a new keystore …","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","Override the default, terminal-based IO.","","","If specified, do not run the REPl, only generate a key …","The keyword parameters of the command and their types, as …","","The name of the command, for display and lookup.","","The parameters of the command and their types, as strings, …","","","","","","","","Run the command with a list of arguments.","","","","","","Path to use for the keystore’s persistent storage.","","","","","","","","","","","","","","","","","","","","If <code>true</code>, create a temporary directory for storage instead …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Set up and run a test of the keystore CLI.","","","","","Issue a command to the keystore identified by <code>keystore</code>.","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","","","","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Match the output of the previous command against a regex.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","An authenticating stream cipher.","Encrypted and authenticated data.","","A decrypter for an authenticated stream cipher.","","","","","Salt used when deriving keys from passwords.","","","","","","","","","","","","","","","","","","","","","","","","","","","Decrypt an encrypted message using a given key.","","","","","","","","","","","","","","","","","","","Encrypt a message using a given key.","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","","","","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","A new block was added to the ledger.","An index into the LedgerEvent stream.","The event streams that the keystore can subscribe to.","A ledger state change.","Receiver memos were posted for one or more previously …","","A proposed block was rejected.","","","Add to the index into a particular event stream, leaving …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","An EventIndex with the given index into the given event …","","","","","Get the index into a particular event stream.","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","An EventIndex with the given indices.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","A 32-byte pseudo-random key.","A virtual tree of keys.","A mnemonic representation.","Salt used when deriving keys from passwords.","A wrapper around a secret which cannot be copied.","","","","","","","","","Get the pseudo-random bytes that make up this key.","","","","","","","","","","","","","","","","","","","","","","","","","","","","Derive a freezing key from the KeyTree with a certain id.","Derive a generic Key from the KeyTree with a certain id.","Derive a sub-tree of this KeyTree.","Derive a sending key from the KeyTree with a certain id.","Derive a viewing key from the KeyTree with a certain id.","","","","","","Returns the original entropy of the mnemonic phrase.","","","","","","","","","","The <code>n</code>th key pair in a freezing key stream.","The sub-tree of the top-level tree used by the keystore to …","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Creates a new English <code>Mnemonic</code> from the given entropy.","Creates a new <code>Mnemonic</code> in the specified language from the …","Recover a KeyTree from its mnemonic seed phrase.","Build a new KeyTree from a password using the [argon2] KDF.","Recover a password-protected KeyTree.","Creates a <code>Mnemonic</code> from an existing mnemonic phrase.","Creates a <code>Mnemonic</code> from an existing mnemonic phrase in the …","","Generates a new English <code>Mnemonic</code> randomly in the specified …","Generates a new <code>Mnemonic</code> randomly in the specified …","","","","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","Consumes the <code>Mnemonic</code> and return the entropy as a <code>Vec&lt;u8&gt;</code>.","Consumes the <code>Mnemonic</code> and return the phrase as a <code>String</code>.","Returns the <code>Language</code> of the mnemonic.","","","","","Access the secret data directly.","","Returns the mnemonic phrase as a string slice.","","Build a new KeyTree from a prng.","","The <code>n</code>th key pair in a sending key stream.","The sub-tree of the top-level tree used by the keystore to …","","","","","","Generates the seed from the <code>Mnemonic</code> and the passphrase.","","","","","","","","","","","","","","Validates the word count and checksum of an English …","Validates the word count and checksum of a mnemonic phrase …","The <code>n</code>th key pair in a viewing key stream.","The sub-tree of the top-level tree used by the keystore to …","","","","","","Wrapper around an input stream and an output stream","Adapter for an input or output stream which echoes all I/O …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","Construct a new I/O object with particular Read and Write …","","Create a SharedIO instance using a bidirectional pipe.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Create a SharedIO instance that uses the standard I/O …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","The proof of membership in an accumulator (Merkle tree) …","type alias for scalar field of the bls curve","type alias for jubjub curve parameter","a freeze/unfreeze note","verification key for validity proof in freeze note","The key pair of Schnorr signature scheme","Elements needed for a full commitment to MerkleTree","proof sufficient, with commitment, to define sparse …","MerkleTree leaf element","MerkleTree leaf element with associated authenticated path","An authentication path of a ternary Merkle tree.","Merkle Tree.","a mint (asset issuance) note","verification key for validity proof in mint note","Represents the value for a node in the merkle tree","type alias for pairing parameter","type alias for scalar field of the jubjub curve","The signature of Schnorr signature scheme","A transaction note contains a note of possibly various …","A transaction verifying key contains a proof verification …","a transfer note","verification key for validity proof in transfer note","The verification key of Schnorr signature scheme","plonk","","","","","","","","","","Compute amount of claimable transaction fee","","","","","","","Constants used across the whole library","","","","","Derive a list of record commitments corresponding to fees …","","","","","","","","Error types related to transaction API","","","","Generation and verification of freezing transfer notes","Returns the argument unchanged.","","","","Returns the argument unchanged.","","","","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","Cryptographic key related data structures","","Retrieve merkle root","Generation and verification of mint notes (a.k.a Asset …","","Retrieve transaction input nullifiers","","","","Retrieve transaction output record commitments","","Retrieve number of transaction outputs in the note","Helper functions to create, save to and fetch from files …","SNARK proofs data structures, generation and verification …","","","","","","","","","","Compute signature over a list of receiver memos","record-related data structures in transactions","","This file implements various wrappers of internal …","","","","Generation and verification of user configurable transfer …","","","","","","Batch verification for transaction","","","Utility structures and functions needed for internal …","Retrieve validity proof","Verify signature of Receiver Memos associated with the …","","","","","","","","","","","","","","","","","","","","","","","","","","the number of identity attributes","The number of bits that can be reliably stored for …","Length of a ScalarField","Length of a BaseField representation in bytes","Minted Asset Code domain separator","External Asset Code domain separator","Dummy asset code, cannot be 0 (default) or 1(native)","The upper bound on the time unit difference between expiry …","Native asset code, cannot be 0 as then code is identical …","number of byte can each <code>identityAttribute</code> take.","Maximum length of a reveal map := (b_0,b_1,b_2, attr_map) …","length in scalars of decrypted transfer viewing …","Failed to deserialize with Arkworks: {0}","Errors from deserialization.","Failed to deserialize: {0}","AssetCode verification failed: {0}","Credential creation failed: {0}","Credential verification failed: {0}","Crypto primitives failed: {0}","Failed ReceiverMemo Signature: {0}","Failed Serialization: {0}","Plonk SNARK failed: {0}","Failed Transaction Verification: {0}","Failed Transaction Memo Signature: {0}“","Failed ViewableMemo Decryption: {0}","Incorrect fee collection: {0}","‼ ️Internal error! Please report to Crypto Team …","Invalid Attribute code","Invalid parameters: {0}","I/O failure: {0}","Parameters generation error:{0}","Failed to deserialize with Serde: {0}","All possible categories of error from Transaction API","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","","","Returns the argument unchanged.","","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Auxiliary info of FreezeNote: includes merkle root and fee","Freezing note structure","All necessary information for each freezing input record …","Accumulator membership proof (namely the Merkle proof) of …","","","","","","","Auxiliary information (merkle root, fee)","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","proposed fee in native asset type for the transfer","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Generates a freezing note. (See “tests/examples.rs” …","","","","","","","","nullifiers for freezing/fee inputs","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","Reference of the freezer’s freezing key pair.","Accumulator state","","","generated output commitments","proof of freezing","Record opening of the input record.","","","","","","","","","","","","","","","","","","","","Transaction memos signature verification key (usually used …","","","","","","Freezing note verification method","","","","","","","","","","Key pair for the credential creator","Public key for the credential creator","Key pair for the freezer","Public key for the freezer","Public address for a user to send assets to/from.","A key pair for the user who owns and can consume records …","The public key of a <code>UserKeyPair</code>","Key pair for the viewer","Public key for the viewer","","Get public key address field","Getter for public address","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Clone the Encryption key. Enc key does not impl Copy so we …","","","Encrypt a message with authenticated label using AEAD.","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","","","Returns the argument unchanged.","Returns the argument unchanged.","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","","","","","","","","","","Generate a new user key pair","Generate a new key pair","Generate a new key pair","Generate a new key pair","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Constructor","Nullify an Asset Record Commitment (RC)","Nullify an Asset Record Commitment (RC)","Open MintNote ViewableMemo intoViewableData for new minted …","Open ViewableMemo into input and output vectors …","","","","","","Getter for the user public key","Getter for the public key","Getter for the public key","","","Getter for the public key","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Sign an arbitrary message using the address spending key","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Verify a signature","","","","","","","","","","Auxiliary info of <code>MintNote</code>","Asset issuance/Mint note structure for single newly minted …","","","","","auxiliary information","","","","","output commitment for the fee change","","","","","","","","","","","","","","","","","","","","","Proposed transaction fee in native asset type","","","Returns the argument unchanged.","Returns the argument unchanged.","Generate a mint note.","","","","","","","nullifier for the input (i.e. transaction fee record)","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","Merkle tree accumulator root","the amount of the minted asset","the asset definition of the asset","output commitment for the minted asset","the asset code","","","the validity proof of this note","","","","","","","","","","","","","","","","","Transaction memos signature verification key (usually used …","","","","","Verifying a Mint note.","memo for policy compliance specified for the designated …","","","Load the freeze proving key from <code>src</code> file","Load the freeze verifying key from <code>src</code> file","Load the mint proving key from <code>src</code> file","Load the mint verifying key from <code>src</code> file","Load the transfer proving key from <code>src</code> file","Load the transfer verifying key from <code>src</code> file","Load universal parameter from a file.","Create and store freeze prover’s proving key","Create and store freeze verifier’s verifying key","Create and store mint prover’s proving key","Create and store mint verifier’s verifying key","Create and store transfer prover’s proving key","Create and store transfer verifier’s verifying key","Create and store universal parameter in a file.","The universal parameters (Structured Reference String) for …","This module contains functions and data structures for","Use Common Reference String parameters from Aztec’s MPC …","This module contains functions and data structures for","This module contains functions and data structures for","One-time universal setup for parameters to be used in …","load Aztec’s universal setup CRS A unified API for SRS …","Key for proving the validity of a Freeze note during asset …","Proof associated to a Freeze note","Key for verifying the validity of a Freeze note during …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","","Returns the argument unchanged.","Expose the verifying key","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","Getter for number of input (fee input included)","Getter for number of input (fee input included)","","","","Getter for number of output (fee change output included)","Getter for number of output (fee change output included)","","One-time preprocess of the Freezing transaction circuit, …","","","","","","","","","","","","","","","","","","","","","","","","","","","Key for proving the validity of a Mint note during asset …","Proof associated to a Mint note","Key for verifying the validity of a Mint note during asset …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","","","Returns the argument unchanged.","Expose the verifying key","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","One-time preprocess of the Mint transaction circuit, …","","","","","","","","","","","","","","","","","","","","","","","","","","","Key for computing the proof associated to a Transfer note","Proof associated to a Transfer note","Key for verifying a Transfer note Verifying key of …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","","","Returns the argument unchanged.","","Expose the verifying key","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","Getter for number of input (fee input included)","Getter for number of input (fee input included)","","Getter for number of output (fee change output included)","Getter for number of output (fee change output included)","","One-time preprocess of the Transfer transaction circuit, …","","","","","","","","","","","","","","","","","","","","","","","","key","","","","","","","","","","","","","","Record Amount type","Asset code structure","The random seed used in AssetCode derivation","Asset Definition","Policies related to asset record","The blind factor used to produce a hiding commitment","A credential with expiry created by a credential creator …","All necessary information for the input record that is …","Freeze note","Flag indicating whether records is frozen or not","Record can only be unfrozen","An identity attribute of a user, usually attested via …","A unique identifier/code for an asset type","Mint note","Enum for each type of note","The nullifier represents a spent/consumed asset record","The proof of membership in an accumulator (Merkle tree) …","Asset record to be published","The opening of an asset record, containing all fields (and …","A bitmap indicating which of the following fields are to …","Transfer note","Fee structure containing fee input spending info, fee to …","Record is spendable or frozable","Transfer ViewableMemo decrypted","Memos for viewers such as viewers required by the asset …","Accumulator membership proof (i.e. Merkle Proof) of the …","","","value","visible amount","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","asset code of the associated policy","asset definition","visible attributes","","record commitment blinding factor","visible blinding factor","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","asset code as unique id code","Issue an credential for a list of attributes with an …","","","Reference to credential creator public key","","Decrypts the receiver memo","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Return the AssetCode assigned for a dummy record","Return the dummy record asset definition: code is 2, and …","Create a new dummy record. Returns record’s “spending…","","","","","","","","","","","","","","","","","","Retrieve expiry value","","Fee to pay","Fee change record opening","Fee input spending info","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","flag indicating if the record is frozen (true) or not …","","Reference to freezer public key","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","","","Returns the argument unchanged.","","","","Returns the argument unchanged.","Returns the argument unchanged.","","Returns the argument unchanged.","Returns the argument unchanged.","","Returns the argument unchanged.","Returns the argument unchanged.","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","Returns the argument unchanged.","Returns the argument unchanged.","converting the record commitment to a field element","Create a new ReceiverMemo from an Record Opening.","","","","","","","","","","","","Generate a vector of Amount from a u128 vector","sample a new seed for asset code generation","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Get the internal reveal map representation","Getter for internal ciphertext","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Check if the policy is set to reveal amount","Check if the policy is set to reveal blinding factor","True if credential creator public key is not dummy, false …","returns true if it is a dummy asset, false otherwise","True if dummy record, false otherwise","Returns true if the credential expired, false otherwise","True if freezer public key is not dummy, false otherwise","returns true if it is a native asset, false otherwise","True if <code>reveal_threshold</code> is not the default value, false …","Check if the policy is set to reveal user address","True if viewer public key is not the default key, false …","","","","Return the AssetCode assigned for the native asset","Return native asset definition: code is 1, and policy is …","","","","","","","","","","","","","","","","","Create a new Fee struct from fee input and fee to pay","Derive an Asset code from its seed and digest <code>seed</code>:  only …","Create a <code>RevealMap</code> with internal representation. <strong>USE WITH </strong>…","Create a new <code>AssetDefinition</code> with specified asset code and …","Create a new RecordOpening with a random blind factor","Create a new <code>IdentityAttribute</code> from its value in bytes.","Construct a viewing memo directly from internal ciphertext.","Derive a domestic cap Asset code from its seed and digest …","Derive asset code from a foreign tokens (e.g. an Ethereum …","Reference of owner’s key pair","","","","","asset policy attached","Get reference to policy","owner public key","Generate a random blind factor","Generate a random reveal map","generates a random AssetPolicy","Create a new random asset definition","Create a random record opening. Only used for testing.","Generate a random asset code Returns the asset code …","Generate a random nullifier","","","","","","","","","","","","","","Set policy to reveal user address, amount, record …","Set policy to reveal all identity attributes to viewer …","Set policy to reveal amount to viewer Return …","Set policy to reveal record commitment blinding factor to …","Set policy to reveal ith identity attribute to viewer …","Getter for the reveal map <strong>USE WITH CAUTION</strong>: in most cases, …","","Set policy to reveal user address, amount and record …","Referecne to revealing threshold","","Set policy to reveal user address to viewer Return …","Record opening","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Set the credential creator public key","Set the freezer public key","Set the reveal map directly! <strong>USE WITH CAUTION!</strong>: since you …","Set revealing threshold policy","Set the viewer public key","","","","","","","","","","","","","","converting the record commitment to a field element","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","visible user address","Getter for the attribute value in bytes.","Verify that asset code is a foreign derived from a non cap …","","Reference to viewer public key","","","","","","","","","","","","","","","","","","","","","Public inputs of a transfer transaction Struct for the …","","","","","","","","","","","","","Returns the argument unchanged.","","","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","Auxiliary info of TransferNote: includes merkle root, …","Anonymous Transfer note structure for single sender, …","All necessary information for each input record in the …","Accumulator membership proof (namely the Merkle proof) of …","","","","","","","Auxiliary information (merkle root, native asset, fee, …","","","","","","","Anonymous transfer note verification method","","","","","","","The identity credential of the user. Optional, only needed …","","","","","","","","","","","","","","","","","","","","Additional data bound to <code>TransferValidityProof</code>","proposed fee in native asset type for the transfer","","","","Returns the argument unchanged.","Returns the argument unchanged.","","Returns the argument unchanged.","Generate a note for transfering native asset","Generate a note for transfering non-native asset","","","","","","","","nullifier for inputs","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","Accumulator state","","","generated output commitments","Reference of the record owner’s key pair.","proof of spending and policy compliance","Record opening of the input record.","","","","","","","","","","","","","","","","","","","","Transaction memos signature verification key (usually used …","","","","","","A projected future timestamp that the snark proof should …","Anonymous transfer note verification method","Memo generated for policy compliance","","","","Parameters <strong>for testing only</strong>!","","","","","","","Computes the size of the universal parameters given the …","","","","","Returns the argument unchanged.","Randomly generate a list of transaction of different types","","Calls <code>U::from(self)</code>.","","","these txns are prove against this <code>merkle_root</code>","Utilities used for tests and benchmarks.","","","","transaction notes generated","","these txns are valid until <code>valid_until</code>","verifying keys for transaction validity proofs","","Struct containing the parameters needed to build a Freeze …","Struct containing the parameters needed to build a Mint …","Struct that allows to build Transfer notes parameters","Parameters <strong>for testing only</strong>!","","","","","","","","","","","","","","","","","Build the note given the parameters, a proving key and a …","Build the note given the parameters and a proving key","Build a transfer note","","","","","","","","","","","","","","","","fee change record","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","","","","List of credentials","List of input key pairs","Input records","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","these txns are prove against this <code>merkle_root</code>","","","Generate the parameters for a Mint note","Instantiate a new FreezeParamsBuilder","Create  non native Transfer note parameters","","","Output records","","","Root of the Merkle tree","Define the input amounts of a Transfer note","Set the input credentials","Define the outputs amounts of a Transfer note","","","","","","","","","","","","","transaction notes generated","","","","these txns are valid until <code>valid_until</code>","verifying keys for transaction validity proofs","","","","","","An Interface for an in memory index which can insert and …","Changes for in-memory state.","","SNAFU context selector for the …","A storage for key-value pairs.","Errors happening during key-value store operations.","","","","","A persistable in-memory state.","","SNAFU context selector for the …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Consume the selector and return the associated error","","","","","","Commit the pending changes.","Commit the persistable index and the store version.","","Delete a key from the persistable index and update the …","","","","","","","","","","","","","","","","","","","","Consume the selector and return a <code>Result</code> with the …","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","Returns the argument unchanged.","Returns the argument unchanged.","","","Get the index.","In-memory index, including both committed and uncommitted …","","","","","","","Insert an item into the index.  Returns the item value in …","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","Iterate through the index table.","Load the value associated with the key from the index …","Create a key-value store.","","Changes that haven’t been committed.","","Remove a value from the index.  Returns the removed item …","","","","Revert the persistable index and the store version.","","Store a key-value pair to the persistable index and update …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","The error that happens when converting a record amount.","","SNAFU context selector for the …","","SNAFU context selector for the …","","SNAFU context selector for the …","","SNAFU context selector for the …","","SNAFU context selector for the …","","SNAFU context selector for the …","The state of the global ledger.","Storage for the static and dynamic parts of the ledger …","","SNAFU context selector for the <code>TransactionError::NoFitKey</code> …","","","Record amount.","","","","SNAFU context selector for the …","Errors that happens during a transaction.","The status of a transaction.","The UID of a transaction.","Specifications for building a transfer.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Compute the spendable balance of the given asset owned by …","Compute the spendable balance of the given asset owned by …","Get the block height of the validator.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Consume the selector and return the associated error","Consume the selector and return the associated error","Consume the selector and return the associated error","Consume the selector and return the associated error","Consume the selector and return the associated error","Consume the selector and return the associated error","Consume the selector and return the associated error","","","","","","","","","","","","","","","","","","","","","","","","","","Commit the store version.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Consume the selector and return a <code>Result</code> with the …","Consume the selector and return a <code>Result</code> with the …","Consume the selector and return a <code>Result</code> with the …","Consume the selector and return a <code>Result</code> with the …","Consume the selector and return a <code>Result</code> with the …","Consume the selector and return a <code>Result</code> with the …","Consume the selector and return a <code>Result</code> with the …","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","","","","","","","","","","","","","","","","","","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Load the ledger state from the store.","","","","","Construct a ledger state.","Get the event index.","Index of the last event processed.","Sparse nullifier set Merkle tree mirrored from validators","","","","","","","","","","Get the proving keys.","Proving keys.","","Lightweight record Merkle tree mirrored from validators.","","","","","Revert the store version.","List of key_pairs that will be used to find the records …","","","","","","","","","","Submit a transaction.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Update the store with the given ledger state.","Update the dynamic store with the given ledger state.","The Validator.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Create or log into a keystore using a given password and …","Load or a create a keystore with interactive, text-based …","","Log into a keystore using a given password.","Metadata about a keystore which is always stored …","Metadata that supports login with a password and …","Recover a keystore from a mnemonic phrase.","","","","","","","","","","","","","","","","","","","","","Check if a password phrase matches the one associated with …","Check if a password matches the one associated with this …","","","","Create a new keystore.","","","","","Decrypt the mnemonic phrase associated with this metadata.","","","","","","","","","","","","","","","","","","","","","","","","","A CreateLoader which fails if a keystore already exists.","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","","","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","Load an existing keystore.","","","","","The location of the keystore targetted by this loader.","","","","","","","","","","","","","Create new login metadata with a given mnemonic phrase and …","","","","","","","","","","","Change the password associated with this metadata.","","","","","","","","","","","","","","","","","","","","","","","Create or log into a keystore using a given password and …","","","","","","Load or a create a keystore with interactive, text-based …","","","","Log into a keystore using a given password.","","","Recover a keystore from a mnemonic phrase.","","","","","The index is outside the occupied range in the tree","","A lightweight Merkle tree which supports arbitrarily …","The result of querying at an index in the tree","Elements needed for a full commitment to MerkleTree","proof sufficient, with commitment, to define sparse …","MerkleTree leaf element with associated authenticated path","Represents the value for a node in the merkle tree","The index is valid but we do not have the leaf in memory","The value at the given index, and a proof of validity","Get a membership witness of a particular element for a CAP …","","","","","","","","","","","","","","","","","","","","","Get a commitment to the abstract sequence represented by …","","","","","","","","","","","","","Assert the lookup result is Ok.","","","","","","Trim the leaf at a given position from memory, if present.","","Returns the argument unchanged.","Returns the argument unchanged.","","Returns the argument unchanged.","","","Get the frontier of this Merkle tree.","","Returns the leaf value given a position","","Get the height of the tree.","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","FIXME: Not sure what this function does :-(.","","","","Create a new Merkle with a specific height","Get the number of elements, or leaves, which have been …","","","","Append a new element to the sequence.","“Re-insert” a leaf into the tree using its proof.","Recreates a completely lightweight Merkle tree from the …","","Create a completely lightweight version of the given …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","","","","","","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","","","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","A Record with it’s uid (u64) as the key","An editor to update a record or records store","","","","","","","","","","","Record (size, uid) indexed by asset type, owner, and …","","","","","","","","","Commit the store version.","Create a Record","","The time when the record was created.","Deletes an record from the store.","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Get a record from a uid from the store","get a Record Editor by uid from storage","Get records associated with an asset and account which are …","Get one record with the exact amount or return None.  ","if Some(t), this record is on hold until the validator …","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","Returns an Iterator to all the Records in the store","","The last time when the record was last modified.","","","The nullifier that represent the consumption of this asset …","Record uids indexed by nullifier, for easy removal when …","","","","","Revert the store version.","All the information required to create commitments/proofs …","Save the record to the store.","","","","","","","","","","","","","","","Identifier for this record and its primary key in storage","","","","Get a Record from a Nullifier","Get a RecordEditor from a Nullifier","A block of transactions that can be applied to a ledger <code>L</code>.","A proof used to authenticate a committed block in a ledger …","A CAP ledger.","","A proof that a nullifier is spent or unspent, relative to …","A set of spent nullifiers for a ledger <code>L</code>.","A commitment to a validator state for a ledger <code>L</code>.","A transaction that can be applied to a ledger <code>L</code>.","A committing hash of a transaction that can be applied to …","Types of transactions supported by a ledger <code>L</code>.","","An error that can occur while validating transitions of a …","A validator for a ledger <code>L</code>.","The state of a validator for this ledger.","Errors that can occur when trying to decrypt a viewing …","Information contained in a viewing memo.","","","","","","","","","","Minimal implementation of the ledger traits for a …","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","The height of the ledger’s records MerkleTree.","A human-readable name for this ledger.","","","The number of past MerkleTree roots maintained by …","The universal setup for PLONK proofs.","","","Traits describing the interface of a CAP ledger.","","","","","","","Ledger types","","","A block of CAP transactions.","The default ledger height is 5, for testing.","","","","A minimal CAP ledger.","","A set of nullifiers.","","","A CAP transaction.","All the kinds of transactions in the basic CAP protocol.","","","Errors in mock CAP validation.","A mock CAP validator.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","","","","","","","","","","","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Attempt to open the viewer memo attached to a CAP mint …","Attempt to open the viewer memo attached to a CAP transfer …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","A block of transactions.","Blocks applied by this validator.","Errors that can occur when validation this block.","Transaction digest.","Supported transaction types.","A CAP ledger.","A set of nullifiers which have been spent.","Nullifier set to be updated when a transaction is added to …","Authentication that a given nullifier is or isn’t in the …","Additional data required to authenticate a committed …","A commitment to the state of the validator.","A CAP transaction.","Transactions in this block.","The types of transactions supported by this network.","Errors that can occur when validating a Transaction or …","State required to validate a Block of Transactions.","The state of a validator for this ledger.","Add a new Transaction to this block.","The number of blocks this validator has applied.","Wrap a raw CAP transaction in this network’s transaction …","The commitment to the current state of the validator.","","A committing hash of this transaction.","This transaction’s inputs, without authentication.","Whether validation failed because a transaction’s …","Whether there are no transactions in this block.","The type of this transaction.","The number of transactions in this block.","The height of the ledger’s records MerkleTree.","","Update the set to include additional nullifiers.","A human-readable name for this ledger.","A catch-all error variant with a helpful message.","Build a block on top of the current state of this …","Attempt to decrypt the attached viewing memo.","Commitments to the records that this transaction will …","The number of outputs.","If this is not a private transaction, get the openings of …","Nullifiers for the records that this transaction will …","","The number of past MerkleTree roots maintained by …","","Update the proofs that this transaction’s nullifiers are …","The universal setup for PLONK proofs.","The transactions in this block.","","","Apply a new block, updating the state and returning UIDs …","A block of transactions that can be applied to a ledger <code>L</code>.","A proof used to authenticate a committed block in a ledger …","","A proof that a nullifier is spent or unspent, relative to …","A set of spent nullifiers for a ledger <code>L</code>.","A commitment to a validator state for a ledger <code>L</code>.","A transaction that can be applied to a ledger <code>L</code>.","A committing hash of a transaction that can be applied to …","Types of transactions supported by a ledger <code>L</code>.","","An error that can occur while validating transitions of a …","A validator for a ledger <code>L</code>.","Errors that can occur when trying to decrypt a viewing …","Information contained in a viewing memo.","","","","","A Transactionwith its UID as the primary key.","An editor to create or update the transaction or …","","","Add the UIDs of memos we are waiting on to complete the …","","","","","","","","","","","","The asset we are transacting","","","Amount of change included in the transaction in the asset …","","","","","","","","","","","","","","","","","","","Commit the store version.","Create an Transaction.","","Time when this transaction was created in the transaction …","Deletes an transaction from the store.","","","","","","","","","","","","","","","","","","","","","","","","","","Amount of change included in the transaction from the fee.","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Get the transaction by the uid from the store.","Get a mutable transaction editor by the uid from the store.","","","","","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","Iterate through the transactions.","","Describes the operation this transaction is performing …","","","A receiver memo for each output, except for burned outputs.","","The last time when the record was last modified.","Load a transactions store.","","","","","The uids of the outputs of this transaction for which …","","","","Remove a transaction from the pending index when it is …","remove a UID of a memo we were waiting because it was …","Revert the store version.","Save the transaction to the store.","","Addresses used to build this transaction.","","","","","","","If this transaction has memos, the collection of memos and …","","","Hash which appears in the commited block for this …","","","A key-value store for transactions.","","","Time when this transaction will expire if it’s not …","","","","","","","","","","","","","","","","","","","","","","Identifier for the Transaction, also the primary key in …","Maps pending memo UIDs to the Transactionthey come from","","","","","","Add asset change record to the transaction once it is …","Add fee change record to the transaction once it is certain","Get a Transaction with the id of a memo, will return the …","Same as with_memo_id but return a TransactionEditor","Get all the transactions timing out at the provided time.  "],"i":[13,1,0,0,21,0,21,0,21,0,21,0,0,21,0,21,0,21,0,21,0,0,0,21,0,21,0,0,21,0,0,0,276,21,0,0,21,0,21,0,21,0,21,0,21,0,21,0,21,0,21,0,0,0,0,0,0,0,21,0,21,0,21,0,21,0,0,21,0,0,21,0,21,0,21,0,21,0,243,243,64,0,1,1,2,2,2,34,39,13,51,24,243,18,2,13,52,20,1,29,53,30,31,32,33,54,34,35,36,37,38,55,56,57,58,59,60,61,62,39,40,63,41,42,43,44,45,46,21,64,51,24,243,18,2,13,52,20,1,29,53,30,31,32,33,54,34,35,36,37,38,55,56,57,58,59,60,61,62,39,40,63,41,42,43,44,45,46,21,64,21,18,2,51,29,36,37,38,0,18,2,18,18,0,0,18,2,2,243,21,2,2,51,24,243,18,2,13,52,20,1,29,53,30,31,32,33,54,34,35,36,37,38,55,56,57,58,59,60,61,62,39,40,63,41,42,43,44,45,46,21,64,51,24,243,18,2,13,52,20,1,29,53,30,31,32,33,54,34,35,36,37,38,55,56,57,58,59,60,61,62,39,40,63,41,42,43,44,45,46,21,64,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,2,2,2,2,21,64,51,51,51,0,0,13,52,20,1,29,53,30,31,32,33,54,34,35,36,37,38,55,56,57,58,59,60,61,62,39,40,63,41,42,43,44,45,46,64,13,52,20,1,29,53,30,31,32,33,54,34,35,36,37,38,55,56,57,58,59,60,61,62,39,40,63,41,42,43,44,45,46,64,1,20,0,24,31,0,276,24,24,2,20,20,1,2,20,20,24,51,51,24,243,18,2,13,52,20,1,29,53,30,31,32,33,54,34,35,36,37,38,55,56,57,58,59,60,61,62,39,40,63,41,42,43,44,45,46,21,64,51,51,24,243,18,2,13,52,20,1,29,53,30,31,32,33,54,34,35,36,37,38,55,56,57,58,59,60,61,62,39,40,63,41,42,43,44,45,46,21,64,20,21,52,20,13,13,52,20,1,1,1,51,24,243,18,2,13,52,20,1,29,53,30,31,32,33,54,34,35,36,37,38,55,56,57,58,59,60,61,62,39,40,63,41,42,43,44,45,46,21,64,0,13,52,20,1,0,35,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,276,13,13,52,20,1,1,1,29,53,30,31,32,33,54,34,35,36,37,38,55,56,57,58,59,60,61,62,39,40,63,41,42,43,44,45,46,21,21,52,2,243,2,18,18,2,51,24,243,18,2,13,13,52,20,1,1,1,1,1,1,1,29,53,30,31,32,33,54,34,35,36,37,38,55,56,57,58,59,60,61,62,39,40,63,41,42,43,44,45,46,21,21,21,21,21,64,13,20,1,2,2,2,2,24,1,276,24,276,276,1,0,13,1,21,13,20,20,0,2,2,21,51,24,243,18,2,13,52,20,1,29,53,30,31,32,33,54,34,35,36,37,38,55,56,57,58,59,60,61,62,39,40,63,41,42,43,44,45,46,21,64,24,51,24,243,18,2,13,52,20,1,29,53,30,31,32,33,54,34,35,36,37,38,55,56,57,58,59,60,61,62,39,40,63,41,42,43,44,45,46,21,64,51,24,243,18,2,13,52,20,1,29,53,30,31,32,33,54,34,35,36,37,38,55,56,57,58,59,60,61,62,39,40,63,41,42,43,44,45,46,21,64,51,24,243,18,2,13,52,20,1,29,53,30,31,32,33,54,34,35,36,37,38,55,56,57,58,59,60,61,62,39,40,63,41,42,43,44,45,46,21,64,51,24,243,18,2,13,52,20,1,29,53,30,31,32,33,54,34,35,36,37,38,55,56,57,58,59,60,61,62,39,40,63,41,42,43,44,45,46,21,64,29,53,30,31,32,33,54,34,35,36,37,38,55,56,57,58,59,60,61,62,39,40,63,41,42,43,44,45,46,0,1,1,24,44,45,0,0,18,13,64,13,13,0,0,1,0,18,18,18,2,20,20,20,20,43,1,1,2,20,20,13,52,20,1,0,24,2,52,0,2,30,1,52,20,1,1,20,41,2,0,0,2,18,276,1,1,13,1,21,13,24,243,51,52,2,18,18,2,2,13,13,52,20,1,13,51,51,51,13,21,64,51,24,243,1,1,276,2,2,276,1,2,2,13,2,13,52,20,1,29,53,30,31,32,33,54,34,35,36,37,38,55,56,57,58,59,60,61,62,39,40,63,41,42,43,44,45,46,64,13,1,21,2,2,0,18,2,51,24,243,18,2,13,13,52,20,1,1,1,29,53,30,31,32,33,54,34,35,36,37,38,55,56,57,58,59,60,61,62,39,40,63,41,42,43,44,45,46,21,64,51,24,243,18,2,13,52,20,1,29,53,30,31,32,33,54,34,35,36,37,38,55,56,57,58,59,60,61,62,39,40,63,41,42,43,44,45,46,21,64,51,24,243,18,2,13,52,20,1,29,53,30,31,32,33,54,34,35,36,37,38,55,56,57,58,59,60,61,62,39,40,63,41,42,43,44,45,46,21,64,31,2,51,243,20,20,24,0,24,2,243,2,18,18,2,51,24,243,18,2,13,52,20,1,29,53,30,31,32,33,54,34,35,36,37,38,55,56,57,58,59,60,61,62,39,40,63,41,42,43,44,45,46,21,64,13,51,51,51,2,13,13,13,1,277,278,279,280,281,282,283,284,285,286,287,288,289,290,291,292,293,294,295,296,297,298,299,300,283,0,0,0,0,0,301,117,117,78,116,117,78,116,117,78,116,117,78,116,116,116,78,78,116,116,78,117,117,78,116,117,117,78,116,116,116,116,117,78,116,116,117,78,116,78,78,78,116,78,116,117,78,116,117,78,116,117,78,116,117,78,116,117,78,116,78,78,78,116,116,116,116,78,78,301,116,78,117,116,116,116,117,117,78,116,117,78,116,117,78,116,117,78,116,116,116,117,78,116,13,0,0,0,0,0,0,0,113,113,51,113,113,113,113,113,113,20,20,113,113,52,20,113,113,113,113,20,113,113,113,113,113,20,20,20,113,113,52,113,113,113,51,24,113,113,113,113,20,24,113,121,302,302,0,0,0,0,0,0,303,0,0,302,0,0,302,302,303,303,124,122,124,303,121,122,124,303,121,122,124,303,121,122,124,303,121,0,0,0,121,121,0,0,0,0,122,124,303,121,121,122,124,303,121,121,121,121,121,122,124,303,121,121,302,0,122,124,121,121,122,124,303,121,121,121,122,124,121,122,124,122,124,303,121,302,302,122,124,303,121,122,124,303,121,122,124,303,121,122,124,303,121,304,124,0,304,122,305,122,121,122,306,124,303,121,122,124,121,122,121,121,121,121,121,304,121,121,122,124,121,122,124,303,121,121,122,124,303,121,122,124,303,121,121,304,122,124,303,121,0,0,0,0,0,133,128,133,128,133,307,128,134,135,133,307,128,134,135,134,133,307,128,134,135,133,307,128,134,135,0,133,134,0,133,128,134,133,133,128,133,307,128,134,135,133,307,128,134,135,133,307,128,128,134,134,135,135,0,133,307,128,134,135,134,134,133,307,128,134,135,135,133,307,128,134,135,133,307,128,134,135,133,307,128,134,135,133,307,128,134,135,128,128,133,133,133,133,133,133,128,134,133,128,134,133,133,133,128,134,135,133,307,128,134,135,134,128,134,133,134,133,307,307,128,128,134,133,133,307,128,134,135,133,307,128,134,135,133,307,128,134,135,135,133,128,128,133,133,133,133,133,307,128,134,135,0,139,0,0,139,0,0,139,0,0,0,139,140,141,142,139,140,141,142,139,139,139,140,141,142,139,140,141,142,142,139,140,141,142,140,141,142,0,140,141,142,139,140,141,142,139,140,141,142,139,142,142,139,140,141,142,0,140,142,139,139,142,139,140,141,142,142,139,142,139,139,140,141,142,139,140,141,142,139,140,141,142,139,140,141,142,139,140,141,142,142,140,141,142,139,140,142,142,142,139,140,141,140,141,142,139,139,140,141,142,139,140,141,142,139,140,141,142,139,140,141,142,308,309,310,145,146,0,0,0,146,145,146,10,10,10,10,10,146,10,145,146,10,145,146,10,145,146,10,145,10,146,10,145,146,10,145,10,146,10,145,146,10,145,146,10,146,10,145,10,145,146,10,10,145,145,146,10,145,10,10,145,10,145,10,146,10,145,146,10,145,146,10,145,146,10,145,146,10,145,10,10,10,10,10,10,145,146,10,10,146,10,145,10,145,146,10,145,146,10,145,146,10,145,146,10,145,311,312,311,312,313,311,311,313,147,148,0,0,0,0,0,149,143,147,148,149,143,147,148,147,149,149,143,147,148,149,143,147,148,149,143,147,148,149,143,147,148,149,143,149,143,147,148,149,143,147,148,143,143,143,143,143,149,149,143,147,148,149,149,149,143,148,149,149,143,147,148,143,143,149,143,147,148,149,149,143,143,143,149,149,149,149,149,149,149,149,149,143,147,148,149,143,147,148,149,143,147,148,149,143,147,148,149,143,147,148,149,149,149,149,149,143,148,148,149,149,149,143,149,143,143,143,149,143,147,148,149,149,149,143,147,148,149,143,147,148,149,143,147,148,149,149,143,143,149,143,147,148,149,0,0,123,154,123,154,0,0,0,123,154,123,154,123,123,154,123,154,123,154,123,154,123,154,123,154,123,154,123,154,154,123,154,123,154,123,123,154,123,154,123,154,123,154,123,123,123,123,154,123,123,123,123,123,123,123,123,123,123,123,123,123,123,123,123,123,123,123,123,123,123,123,123,154,154,154,154,154,154,154,154,154,154,154,154,154,154,154,154,154,154,154,154,154,154,154,154,123,123,123,123,123,123,123,123,123,123,123,123,123,123,123,123,123,123,123,123,123,123,123,123,154,154,154,154,154,154,154,154,154,154,154,154,154,154,154,154,154,154,154,154,154,154,154,154,123,154,123,154,123,154,123,154,123,154,123,154,123,123,154,154,123,123,123,123,123,123,123,123,123,123,123,123,123,123,123,123,123,123,123,123,123,123,123,123,154,154,154,154,154,154,154,154,154,154,154,154,154,154,154,154,154,154,154,154,154,154,154,154,123,123,123,123,123,123,123,123,123,123,123,123,123,123,123,123,123,123,123,123,123,123,123,123,154,154,154,154,154,154,154,154,154,154,154,154,154,154,154,154,154,154,154,154,154,154,154,154,0,0,0,108,165,0,0,0,0,0,0,0,108,165,0,0,0,0,0,0,108,165,0,0,108,165,108,165,0,108,165,108,165,0,108,108,165,108,165,108,0,108,165,108,165,0,108,108,165,165,108,165,108,0,108,165,165,0,108,108,108,108,165,165,108,108,108,165,108,165,108,165,108,165,108,165,108,165,0,108,108,0,108,108,165,165,108,108,108,108,0,0,108,165,108,108,165,165,108,165,108,0,0,165,0,108,165,165,0,108,165,165,108,165,0,108,165,0,108,108,108,165,314,315,316,317,318,319,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,181,0,164,164,164,164,164,164,164,164,164,164,164,164,164,164,164,164,164,181,0,164,181,164,181,164,164,181,164,181,164,181,164,181,164,181,164,164,181,181,164,164,164,181,164,181,164,164,181,164,181,164,181,164,181,164,181,164,181,164,181,164,181,164,181,164,181,164,181,320,321,322,323,324,325,326,327,328,329,330,331,332,333,334,335,336,337,0,0,0,183,167,182,183,167,182,183,167,167,182,183,167,182,183,167,182,183,167,182,183,167,182,183,167,182,183,167,167,182,182,167,182,167,182,167,182,183,167,182,182,167,182,183,167,182,183,167,167,182,167,182,167,182,183,167,167,182,183,167,182,183,167,182,183,167,182,183,183,182,167,182,167,167,183,167,167,182,182,167,182,167,182,167,182,167,182,183,167,182,183,167,182,183,182,167,182,183,167,182,167,167,182,183,25,187,188,114,11,77,0,0,0,0,0,0,0,0,0,9,49,9,49,25,49,9,187,188,114,11,77,3,25,49,9,187,188,114,11,77,3,25,49,9,187,188,114,11,77,3,25,49,9,187,188,114,11,77,3,25,49,9,187,188,114,11,77,3,25,49,9,187,188,114,11,77,3,25,49,9,187,188,114,77,3,25,25,49,9,187,188,114,11,77,3,25,49,9,187,188,114,11,77,3,25,25,49,49,9,9,187,187,188,188,114,114,11,11,77,77,3,3,25,49,9,187,188,114,11,77,3,25,49,9,187,188,114,11,77,3,25,49,9,187,188,114,11,77,3,49,49,9,49,25,49,187,114,77,3,25,25,49,49,9,9,187,187,188,188,114,114,11,11,77,77,3,3,25,25,25,49,9,9,187,188,114,11,11,77,3,3,25,49,9,187,188,114,11,77,3,9,188,11,3,25,49,187,114,77,3,25,49,187,114,77,3,25,49,9,187,188,114,11,77,3,25,49,9,187,188,114,11,77,3,25,49,9,187,188,114,11,77,3,25,49,9,187,188,114,11,77,3,25,49,9,187,188,114,11,77,3,25,49,9,187,188,114,11,77,3,25,49,187,114,49,9,3,11,11,25,49,114,77,9,9,188,11,11,3,3,3,25,49,9,187,188,114,11,77,3,3,25,25,49,49,9,9,187,187,188,188,114,114,11,11,77,77,3,3,25,49,9,187,188,114,11,77,3,25,49,9,187,188,114,11,77,3,25,49,9,187,188,114,11,77,3,9,25,49,9,187,188,114,11,77,3,25,49,9,187,188,114,11,77,3,25,49,9,187,188,114,11,77,3,25,25,49,49,9,9,187,187,188,188,114,114,11,11,77,77,3,3,25,49,9,187,188,114,11,77,3,25,49,9,187,188,114,11,77,3,25,49,9,187,188,114,11,77,3,49,25,49,9,187,188,114,11,77,3,0,0,169,196,169,196,169,169,196,169,196,169,169,196,169,196,169,196,169,196,169,169,196,196,169,196,169,196,169,196,169,196,196,169,196,169,196,169,169,196,169,196,169,196,169,169,196,169,196,169,196,169,196,196,169,169,169,169,169,196,169,169,169,196,196,169,196,169,196,169,196,169,196,169,196,169,196,196,169,196,169,196,169,169,169,196,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,185,186,185,186,185,186,185,186,185,186,185,186,185,186,185,186,185,185,186,186,185,186,185,186,185,186,185,186,185,186,185,185,186,186,186,185,186,185,186,185,186,185,186,185,186,185,186,185,186,185,186,185,185,186,185,0,185,185,185,186,186,185,186,185,186,185,186,185,186,185,186,185,186,185,186,185,186,185,186,186,185,186,0,0,0,198,199,198,199,198,199,198,199,198,199,198,199,198,199,198,199,198,198,199,199,198,199,198,199,198,199,198,199,198,199,198,198,199,199,199,198,199,198,199,198,199,198,199,198,199,198,199,0,198,198,198,199,199,198,199,198,199,198,199,198,199,198,199,198,199,198,199,198,199,198,199,199,198,199,0,0,0,200,201,200,201,200,201,200,201,200,201,200,201,200,201,200,201,200,200,201,201,200,201,200,201,200,201,200,201,200,201,200,200,201,201,201,201,200,201,200,201,200,201,200,201,200,201,200,201,200,201,200,201,200,201,200,200,201,200,0,200,200,200,201,201,200,201,200,201,200,201,200,201,200,201,200,201,200,201,200,201,200,201,201,200,201,204,106,85,19,205,206,90,93,208,210,92,0,0,0,0,0,0,0,0,203,0,207,0,0,203,0,0,0,0,0,0,203,0,207,0,0,211,85,85,197,195,184,203,204,106,85,19,205,69,66,206,90,93,207,197,208,209,210,195,92,211,184,203,204,106,85,19,205,69,66,206,90,93,207,197,208,209,210,195,92,211,195,197,195,209,197,195,184,203,204,106,85,19,205,69,66,206,90,93,207,197,208,209,210,195,92,211,184,203,204,106,85,19,205,69,66,206,90,93,207,197,208,209,210,195,92,211,203,204,106,85,19,205,69,66,206,90,93,207,197,208,209,210,195,92,211,203,204,106,85,19,205,69,66,206,90,93,207,197,208,209,210,195,92,211,85,66,209,209,209,69,69,92,204,106,85,19,205,69,66,206,207,197,208,184,203,204,106,85,19,205,69,66,206,90,93,207,197,208,209,210,195,92,211,184,203,204,106,85,19,205,69,66,206,90,93,207,197,208,209,210,195,92,211,204,204,106,106,85,85,19,19,205,205,69,69,66,66,206,206,90,90,93,93,207,207,197,197,208,208,209,209,210,210,92,92,204,106,19,69,66,206,90,93,197,208,209,210,92,204,106,19,69,66,206,90,93,197,208,209,210,92,85,85,184,203,204,106,85,19,205,69,66,206,90,93,207,197,208,209,210,195,92,211,19,66,197,204,106,85,19,205,69,66,206,90,93,207,197,208,209,210,195,92,209,209,184,184,184,203,204,204,106,106,85,85,85,19,19,205,69,66,66,206,206,90,90,93,93,207,197,208,208,209,210,210,195,92,92,211,197,69,69,184,203,204,106,85,85,85,85,85,85,85,19,205,205,69,66,206,206,90,90,93,93,207,197,197,208,209,210,195,92,92,211,93,92,204,106,85,19,66,206,90,93,208,210,92,85,106,204,85,19,205,69,66,206,90,93,207,197,208,209,210,92,204,85,19,205,69,66,206,90,93,207,197,208,209,210,92,204,106,85,19,66,206,90,93,208,210,92,184,203,204,106,85,19,205,69,66,206,90,93,207,197,208,209,210,195,92,211,205,210,184,203,204,106,85,19,205,69,66,206,90,93,207,197,208,209,210,195,92,211,184,203,204,106,85,19,205,69,66,206,90,93,207,197,208,209,210,195,92,211,184,203,204,106,85,19,205,69,66,206,90,93,207,197,208,209,210,195,92,211,184,203,204,106,85,19,205,69,66,206,90,93,207,197,208,209,210,195,92,211,69,69,69,66,197,209,69,66,69,69,69,19,85,85,19,66,204,106,85,19,205,69,66,206,90,93,197,208,209,210,195,92,184,204,205,66,197,208,210,19,19,211,19,93,92,85,66,66,197,206,205,69,66,197,19,90,85,85,204,106,85,19,66,206,90,93,208,210,92,69,69,69,69,69,69,69,69,69,69,69,211,204,204,106,106,85,85,19,19,205,205,69,69,66,66,206,206,90,90,93,93,207,207,197,197,208,208,209,209,210,210,92,92,204,106,19,69,66,206,90,93,197,208,209,210,92,204,106,19,69,66,206,90,93,197,208,209,210,92,204,106,85,19,205,69,66,206,90,93,207,197,208,209,210,92,69,69,69,69,69,85,85,85,204,106,19,66,206,90,93,208,210,92,93,203,204,106,85,19,205,69,66,206,90,93,207,197,208,209,210,195,92,211,204,106,85,19,66,206,90,93,208,210,92,184,203,204,204,106,106,85,85,19,19,205,69,66,66,206,206,90,90,93,93,207,197,208,208,209,210,210,195,92,92,211,184,203,204,106,85,19,205,69,66,206,90,93,207,197,208,209,210,195,92,211,184,203,204,106,85,19,205,69,66,206,90,93,207,197,208,209,210,195,92,211,204,106,19,69,66,206,90,93,197,208,209,210,92,209,195,208,19,69,69,184,203,204,106,85,19,205,69,66,206,90,93,207,197,208,209,210,195,92,211,0,218,218,218,218,218,218,218,218,218,218,218,218,218,218,218,218,218,218,218,218,218,218,218,218,218,218,218,218,218,0,0,0,221,168,220,221,168,220,221,168,168,220,221,168,220,221,168,168,220,221,168,220,221,221,168,220,221,168,220,221,168,168,220,220,168,220,168,220,168,220,221,168,220,220,220,168,220,221,168,220,221,221,168,168,168,220,168,220,168,220,221,168,168,220,221,168,220,221,168,220,221,168,220,221,220,168,220,168,221,168,221,168,168,220,220,168,220,168,220,168,220,168,220,221,168,220,221,168,220,221,220,168,220,221,168,220,220,168,168,168,220,221,0,222,222,222,222,222,222,0,222,222,222,222,222,222,222,222,222,222,222,0,222,222,222,222,222,222,222,222,0,0,0,0,179,179,179,180,179,178,180,179,178,179,180,179,178,180,179,178,178,179,180,179,178,179,178,180,179,178,180,179,178,180,179,178,179,178,180,178,179,179,178,180,179,178,180,179,178,180,180,180,180,178,180,179,178,180,179,178,180,179,178,180,179,178,222,179,179,179,178,180,180,180,180,179,180,180,180,180,180,179,178,180,180,179,178,180,179,178,180,179,178,222,180,179,178,222,222,179,180,179,178,338,0,0,88,0,0,0,0,0,0,0,0,88,0,338,338,226,338,223,224,88,225,226,338,223,224,88,225,88,88,226,338,223,224,88,225,226,338,223,224,88,225,223,88,223,224,223,224,225,226,225,226,226,338,223,224,88,225,226,338,223,224,88,225,88,226,338,223,224,88,225,223,223,224,88,88,226,338,223,224,88,88,225,88,88,225,225,226,338,223,224,88,225,339,225,226,338,223,224,88,225,226,338,223,224,88,225,226,338,223,224,88,225,226,338,223,224,88,225,223,224,226,226,226,225,225,226,339,225,88,225,226,88,226,226,223,224,88,226,338,223,224,88,225,226,338,223,224,88,225,226,338,223,224,88,225,226,338,223,224,88,225,340,341,342,343,1,26,238,0,89,0,89,0,89,0,89,0,89,0,89,0,0,0,89,0,236,238,0,238,238,89,0,0,0,0,0,238,229,230,26,344,239,236,229,230,231,232,233,237,234,235,89,238,26,228,344,239,236,229,230,231,232,233,237,234,235,89,238,26,228,89,344,229,230,231,232,234,235,89,228,228,228,344,239,236,229,230,231,232,233,237,234,235,89,238,26,228,344,239,236,229,230,231,232,233,237,234,235,89,238,26,228,344,229,230,231,232,233,234,235,89,236,229,230,231,232,233,237,234,235,238,26,228,236,229,230,231,232,233,237,234,235,238,26,228,239,344,239,236,229,230,231,232,233,237,234,235,89,238,26,228,344,239,236,229,230,231,232,233,237,234,235,89,238,26,228,89,238,26,26,228,26,26,344,239,236,229,230,231,232,233,237,234,235,89,238,26,228,239,238,26,228,229,230,231,232,233,234,235,344,236,229,230,231,232,233,237,234,235,89,89,238,238,26,26,228,344,239,236,229,230,231,232,233,237,234,235,89,238,26,228,26,26,26,89,238,26,89,344,239,236,229,230,231,232,233,237,234,235,89,238,26,228,344,239,236,229,230,231,232,233,237,234,235,89,238,26,228,344,239,236,229,230,231,232,233,237,234,235,89,238,26,228,344,239,236,229,230,231,232,233,237,234,235,89,238,26,228,344,239,236,229,230,231,232,233,237,234,235,89,238,26,228,229,230,231,232,233,237,234,235,238,239,230,231,234,235,228,228,228,228,231,233,232,232,233,232,232,231,26,228,228,344,228,89,238,26,229,239,344,238,26,26,228,26,26,26,89,239,228,238,230,26,236,229,230,231,232,233,237,234,235,238,26,228,89,238,26,344,239,236,229,230,231,232,233,237,234,235,89,238,26,26,228,344,239,236,229,230,231,232,233,237,234,235,89,238,26,228,344,239,236,229,230,231,232,233,237,234,235,89,238,26,228,26,239,239,228,344,239,236,229,230,231,232,233,237,234,235,89,238,26,228,344,345,346,345,346,347,348,349,350,346,347,349,350,347,351,348,348,351,348,348,347,345,352,346,0,0,0,0,353,0,0,245,246,247,248,244,245,246,247,248,244,245,246,247,248,244,245,246,247,248,244,244,244,244,244,0,353,245,246,247,248,244,244,245,246,247,248,244,245,246,247,248,244,244,245,246,247,248,245,246,247,248,244,244,244,244,245,245,244,245,246,247,248,244,245,246,247,248,244,246,0,245,246,247,248,244,245,246,247,248,244,245,246,247,248,244,245,246,247,248,244,246,353,245,246,247,248,353,245,246,247,248,0,245,248,244,245,246,247,248,244,248,245,247,246,0,245,246,248,244,244,244,244,245,246,247,248,244,245,246,247,248,244,245,246,247,248,244,244,245,246,247,248,244,0,245,245,245,245,245,0,246,246,246,0,247,247,0,248,248,248,248,251,0,0,0,0,0,0,0,251,251,242,242,252,251,242,252,251,242,252,251,242,252,251,242,252,252,252,251,242,251,242,242,252,251,242,252,251,242,242,252,251,242,251,242,251,242,242,252,251,242,242,242,252,251,242,242,252,252,242,251,242,251,242,252,252,251,242,252,251,242,252,251,242,252,251,242,252,251,242,252,251,251,242,252,242,242,252,252,252,242,242,242,242,242,251,242,242,252,251,242,252,251,242,252,251,242,252,251,242,354,354,0,104,104,104,104,104,104,104,104,104,104,104,104,104,104,104,104,104,104,104,104,104,104,104,104,104,104,104,104,104,0,258,258,258,258,258,258,258,258,258,258,258,258,258,258,258,258,258,258,258,258,258,258,258,258,258,258,258,258,258,258,258,258,258,127,127,0,127,127,127,127,127,127,127,127,127,127,127,127,127,127,127,127,127,127,127,127,127,127,127,127,355,356,0,0,0,264,266,265,264,266,265,264,264,264,265,266,265,264,266,265,264,264,264,265,265,264,264,265,265,266,266,265,264,266,266,265,264,264,266,265,264,264,264,266,265,264,265,265,265,265,264,266,265,264,266,265,264,266,265,264,266,265,264,266,265,264,265,264,264,265,264,264,265,264,264,266,264,265,264,266,264,266,265,264,266,265,264,266,265,264,266,265,264,264,264,266,265,264,265,265,0,0,0,173,0,0,0,0,0,0,173,0,0,357,0,0,172,173,172,173,172,172,173,172,173,0,172,173,172,173,172,173,172,173,172,173,172,173,172,173,172,173,172,173,172,172,173,172,173,172,173,172,173,357,357,172,172,357,357,172,173,0,172,173,172,173,172,173,0,172,173,0,0,269,270,0,0,270,0,270,270,0,0,270,270,0,0,267,268,270,269,267,268,271,270,269,267,268,271,269,269,268,268,270,269,267,268,271,270,269,267,268,271,269,270,269,267,268,271,270,269,267,268,271,268,268,270,269,267,268,271,270,269,267,268,271,269,270,269,267,268,270,269,267,268,271,270,267,268,270,270,269,269,267,268,271,270,270,269,267,268,271,270,267,270,267,270,269,269,267,267,267,270,269,267,268,271,270,269,267,268,271,270,269,267,268,271,270,269,267,268,271,270,269,267,268,271,267,267,269,267,267,267,271,270,271,267,268,269,268,0,0,270,271,268,268,270,269,270,270,269,267,268,269,271,270,269,267,268,271,270,269,267,270,269,267,268,271,270,269,267,268,271,267,270,269,267,268,271,270,270,268,270,269,267,268,271,358,0,359,360,361,361,0,0,361,362,359,359,0,360,0,0,0,357,360,359,361,359,363,361,361,364,360,361,360,357,363,362,357,364,359,361,361,361,361,361,363,357,363,361,357,360,363,363,359,0,0,173,0,0,0,0,0,0,173,0,0,0,0,172,172,172,0,0,0,0,0,272,272,274,273,74,107,272,274,273,74,107,74,74,107,74,74,107,272,274,273,74,107,272,274,273,74,107,272,273,74,107,273,74,107,274,274,74,74,274,272,272,274,273,74,107,272,272,274,273,74,107,273,74,107,272,274,273,74,107,273,74,107,274,74,74,107,273,74,107,272,274,273,74,107,274,274,272,274,273,74,107,74,74,107,272,274,273,74,107,272,274,273,74,107,272,274,273,74,107,272,274,273,74,107,274,74,74,107,74,273,74,74,274,74,74,107,74,74,74,74,107,274,272,274,272,74,74,107,273,74,107,272,273,74,107,74,74,107,272,274,107,74,74,107,273,74,107,272,272,274,273,74,107,272,274,273,74,107,272,274,273,74,107,74,74,274,272,274,273,74,107,272,272,274,274,274],"f":[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[[1,1],1],[[1,1]],[[2,3,4],[[8,[[7,[5,6]]]]]],[[2,9,4,10],[[8,[[7,[5,6]]]]]],[[2,11,4],[[8,[[7,[5,6]]]]]],0,0,[12,[[15,[13,14]]]],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],17],[[18,19],[[15,[20,21]]]],[[2,19],22],0,0,0,0,0,0,[18,[[23,[20,6]]]],[2,22],0,[18,24],0,0,0,[[2,25],22],[[2,26],22],0,[21,[[28,[27]]]],[[2,19],22],[[2,25,19],22],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[29,21],[30,21],[31,21],[32,21],[33,21],[34,21],[35,21],[36,21],[37,21],[38,21],[39,21],[40,21],[41,21],[42,21],[43,21],[44,21],[45,21],[46,21],[[2,[28,[25]],[47,[1]],19,[47,[48]],25],22],[[2,[28,[25]],[47,[1]],19,[47,[1]],49],22],[[2,[28,[25]],19,[47,[1]],[23,[50,6]],28],22],[[2,[28,[25]],[47,[1]],19,[47,[48]],25],22],[21,[[28,[17]]]],0,[51,51],[51,51],[51,51],0,0,[13,13],[52,52],[20,20],[1,1],[29,29],[53,53],[30,30],[31,31],[32,32],[33,33],[54,54],[34,34],[35,35],[36,36],[37,37],[38,38],[55,55],[56,56],[57,57],[58,58],[59,59],[60,60],[61,61],[62,62],[39,39],[40,40],[63,63],[41,41],[42,42],[43,43],[44,44],[45,45],[46,46],[64,64],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[1,1],65],[20,19],0,[24,[[15,[21]]]],0,0,[[],[[8,[[7,[22,6]]]]]],[[24,66,[28,[52]]],[[15,[51,21]]]],[24,[[15,[51,21]]]],[[],22],[20,[[68,[67]]]],0,[[],1],[[2,4,69],22],[20,66],0,[[24,19],[[15,[20,21]]]],[70],[51,20],[70],[70],[70],[70],[70],[70],[70],[70],[70],[70],[70],[70],[70],[70],[70],[70],[70],[70],[70],[70],[70],[70],[70],[70],[70],[70],[70],[70],[70],[70],[70],[70],[70],[70],[70],[70],[70],[70],[70],[70],[51,20],[70],[70],[70],[70],[70],[70],[70],[70],[70],[70],[70],[70],[70],[70],[70],[70],[70],[70],[70],[70],[70],[70],[70],[70],[70],[70],[70],[70],[70],[70],[70],[70],[70],[70],[70],[70],[70],[70],[70],[20,[[28,[4]]]],[21,71],0,0,[[],[[15,[13,72]]]],[[],[[15,[13]]]],[[],[[15,[52]]]],[[],[[15,[20]]]],[[],[[15,[1]]]],[1,1],[1],[70],[70],[70],[70],[70],[70],[70],[70],[70],[70],[70],[70],[70],[70],[70],[70],[70],[70],[70],[70],[70],[70],[70],[70],[70],[70],[70],[70],[70],[70],[70],[70],[70],[70],[70],[70],[70],[70],[70],[70],0,[[13,13],73],[[52,52],73],[[20,20],73],[[1,1],73],0,0,[29,[[15,[21]]]],[30,[[15,[21]]]],[31,[[15,[21]]]],[32,[[15,[21]]]],[33,[[15,[21]]]],[34,[[15,[21]]]],[35,[[15,[21]]]],[36,[[15,[21]]]],[37,[[15,[21]]]],[38,[[15,[21]]]],[39,[[15,[21]]]],[40,[[15,[21]]]],[41,[[15,[21]]]],[42,[[15,[21]]]],[43,[[15,[21]]]],[44,[[15,[21]]]],[45,[[15,[21]]]],[46,[[15,[21]]]],[[74,28],[[8,[[7,[22,6]]]]]],[[13,75],[[15,[76]]]],[[13,75],[[15,[76]]]],[[52,75],[[15,[76]]]],[[20,75],[[15,[76]]]],[[1,75],[[15,[76]]]],[[1,75],[[15,[76]]]],[[1,75],[[15,[76]]]],[[29,75],[[15,[76]]]],[[53,75],[[15,[76]]]],[[30,75],[[15,[76]]]],[[31,75],[[15,[76]]]],[[32,75],[[15,[76]]]],[[33,75],[[15,[76]]]],[[54,75],[[15,[76]]]],[[34,75],[[15,[76]]]],[[35,75],[[15,[76]]]],[[36,75],[[15,[76]]]],[[37,75],[[15,[76]]]],[[38,75],[[15,[76]]]],[[55,75],[[15,[76]]]],[[56,75],[[15,[76]]]],[[57,75],[[15,[76]]]],[[58,75],[[15,[76]]]],[[59,75],[[15,[76]]]],[[60,75],[[15,[76]]]],[[61,75],[[15,[76]]]],[[62,75],[[15,[76]]]],[[39,75],[[15,[76]]]],[[40,75],[[15,[76]]]],[[63,75],[[15,[76]]]],[[41,75],[[15,[76]]]],[[42,75],[[15,[76]]]],[[43,75],[[15,[76]]]],[[44,75],[[15,[76]]]],[[45,75],[[15,[76]]]],[[46,75],[[15,[76]]]],[[21,75],[[15,[76]]]],[[21,75],[[15,[76]]]],[52,4],[[2,[28,[25]],[47,[1]],19,[47,[48]],25],22],0,[[2,77],22],0,[18,78],[2,22],[[]],[[]],[[]],[[]],[[]],[[[80,[[79,[50]],[23,[50,6]]]]],13],[[]],[[]],[[]],[50,1],[81,1],[82,1],[[]],[83,1],[84,1],[85,1],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[[7,[86,6]]],21],[87,21],[88,21],[89,21],[[]],[[]],[71,[[15,[13]]]],[71,[[15,[20]]]],[71,[[15,[1]]]],[[2,25,19],22],[[2,4],[[8,[[7,[5,6]]]]]],[[2,4,[28,[10]]],[[8,[[7,[5,6]]]]]],[[2,4],[[8,[[7,[5,6]]]]]],[[24,19],[[15,[20,21]]]],[[],83],[10,[[8,[[7,[22,6]]]]]],[[24,19],[[15,[51,21]]]],[[83,90],[[8,[[7,[22,6]]]]]],[25,[[8,[[7,[22,6]]]]]],[1],0,[[],91],[[],91],[[],91],[13,81],[20,[[28,[13]]]],0,[[18,20],[[15,[21]]]],[[2,20],22],[[2,92,93,83,[96,[[95,[94]]]]],22],[[]],[[],70],[[],70],[[],70],[[],70],[[],70],[[],70],[[],70],[[],70],[[],70],[[],70],[[],70],[[],70],[[],70],[[],70],[[],70],[[],70],[[],70],[[],70],[[],70],[[],70],[[],70],[[],70],[[],70],[[],70],[[],70],[[],70],[[],70],[[],70],[[],70],[[],70],[[],70],[[],70],[[],70],[[],70],[[],70],[[],70],[[],70],[[],70],[[],70],[[],70],[[24,20],[[15,[51,21]]]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[[7,[6]]],[[7,[16,6]]]],[[[7,[6]]],[[7,[16,6]]]],[[[7,[6]]],[[7,[16,6]]]],[[[7,[6]]],[[7,[16,6]]]],[[[7,[6]]],[[7,[16,6]]]],[[[7,[6]]],[[7,[16,6]]]],[[[7,[6]]],[[7,[16,6]]]],[[[7,[6]]],[[7,[16,6]]]],[[[7,[6]]],[[7,[16,6]]]],[[[7,[6]]],[[7,[16,6]]]],[[[7,[6]]],[[7,[16,6]]]],[[[7,[6]]],[[7,[16,6]]]],[[[7,[6]]],[[7,[16,6]]]],[[[7,[6]]],[[7,[16,6]]]],[[[7,[6]]],[[7,[16,6]]]],[[[7,[6]]],[[7,[16,6]]]],[[[7,[6]]],[[7,[16,6]]]],[[[7,[6]]],[[7,[16,6]]]],[[[7,[6]]],[[7,[16,6]]]],[[[7,[6]]],[[7,[16,6]]]],[[[7,[6]]],[[7,[16,6]]]],[[[7,[6]]],[[7,[16,6]]]],[[[7,[6]]],[[7,[16,6]]]],[[[7,[6]]],[[7,[16,6]]]],[[[7,[6]]],[[7,[16,6]]]],[[[7,[6]]],[[7,[16,6]]]],[[[7,[6]]],[[7,[16,6]]]],[[[7,[6]]],[[7,[16,6]]]],[[[7,[6]]],[[7,[16,6]]]],[[[7,[6]]],[[7,[16,6]]]],[[[7,[6]]],[[7,[16,6]]]],[[[7,[6]]],[[7,[16,6]]]],[[[7,[6]]],[[7,[16,6]]]],[[[7,[6]]],[[7,[16,6]]]],[[[7,[6]]],[[7,[16,6]]]],[[[7,[6]]],[[7,[16,6]]]],[[[7,[6]]],[[7,[16,6]]]],[[[7,[6]]],[[7,[16,6]]]],[[[7,[6]]],[[7,[16,6]]]],[[[7,[6]]],[[7,[16,6]]]],[97,[[97,[16]]]],[97,[[97,[16]]]],[97,[[97,[16]]]],[97,[[97,[16]]]],[97,[[97,[16]]]],[97,[[97,[16]]]],[97,[[97,[16]]]],[97,[[97,[16]]]],[97,[[97,[16]]]],[97,[[97,[16]]]],[97,[[97,[16]]]],[97,[[97,[16]]]],[97,[[97,[16]]]],[97,[[97,[16]]]],[97,[[97,[16]]]],[97,[[97,[16]]]],[97,[[97,[16]]]],[97,[[97,[16]]]],[97,[[97,[16]]]],[97,[[97,[16]]]],[97,[[97,[16]]]],[97,[[97,[16]]]],[97,[[97,[16]]]],[97,[[97,[16]]]],[97,[[97,[16]]]],[97,[[97,[16]]]],[97,[[97,[16]]]],[97,[[97,[16]]]],[97,[[97,[16]]]],[97,[[97,[16]]]],[97,[[97,[16]]]],[97,[[97,[16]]]],[97,[[97,[16]]]],[97,[[97,[16]]]],[97,[[97,[16]]]],[97,[[97,[16]]]],[97,[[97,[16]]]],[97,[[97,[16]]]],[97,[[97,[16]]]],[97,[[97,[16]]]],[98,[[98,[16]]]],[98,[[98,[16]]]],[98,[[98,[16]]]],[98,[[98,[16]]]],[98,[[98,[16]]]],[98,[[98,[16]]]],[98,[[98,[16]]]],[98,[[98,[16]]]],[98,[[98,[16]]]],[98,[[98,[16]]]],[98,[[98,[16]]]],[98,[[98,[16]]]],[98,[[98,[16]]]],[98,[[98,[16]]]],[98,[[98,[16]]]],[98,[[98,[16]]]],[98,[[98,[16]]]],[98,[[98,[16]]]],[98,[[98,[16]]]],[98,[[98,[16]]]],[98,[[98,[16]]]],[98,[[98,[16]]]],[98,[[98,[16]]]],[98,[[98,[16]]]],[98,[[98,[16]]]],[98,[[98,[16]]]],[98,[[98,[16]]]],[98,[[98,[16]]]],[98,[[98,[16]]]],[98,[[98,[16]]]],[98,[[98,[16]]]],[98,[[98,[16]]]],[98,[[98,[16]]]],[98,[[98,[16]]]],[98,[[98,[16]]]],[98,[[98,[16]]]],[98,[[98,[16]]]],[98,[[98,[16]]]],[98,[[98,[16]]]],[98,[[98,[16]]]],[29,21],[53,21],[30,21],[31,21],[32,21],[33,21],[54,21],[34,21],[35,21],[36,21],[37,21],[38,21],[55,21],[56,21],[57,21],[58,21],[59,21],[60,21],[61,21],[62,21],[39,21],[40,21],[63,21],[41,21],[42,21],[43,21],[44,21],[45,21],[46,21],0,[1,73],[1,73],[24,99],0,0,0,0,0,[[[0,[100,101]],102],[[15,[13,103]]]],[64,[[15,[87]]]],[[[0,[100,101]]],[[15,[13,103]]]],[[[0,[100,101]]],[[15,[13,103]]]],0,0,[[],1],0,[18,104],0,[18,104],[[2,[28,[25]],[47,[1]],19,[47,[1]],49],22],[20,[[28,[52]]]],0,[20,[[68,[67]]]],0,0,[1,1],[1],0,[20,[[28,[4]]]],0,[[13,13],73],[[52,52],73],[[20,20],73],[[1,1],73],0,[[105,64,83],[[15,[24,21]]]],[[],[[8,[[7,[22,6]]]]]],[[106,[23,[50,6]]],52],[[],9],[2,22],0,[[],1],[71,[[23,[50,6]]]],[[2,71],[[8,[[7,[22,6]]]]]],[[2,71],[[8,[[7,[22,6]]]]]],[[1,1],[[28,[65]]]],[20,69],0,[2,22],0,0,[2,22],0,[9,[[8,[[7,[22,6]]]]]],[1,1],[1],[4],[4],[4],[[13,81,81]],[24,[[15,[21]]]],0,[51,[[15,[20,21]]]],0,[[2,25],22],0,[18,78],[2,22],[2,22],[13,15],[13,[[15,[72]]]],[52,15],[20,15],[1,15],[13,70],[[51,[28,[4]]],51],[[51,[28,[13]]],51],[[51,[28,[4]]],51],[13],[21,[[28,[17]]]],[64,[[15,[[23,[50,6]],87]]]],0,0,0,[[1,1],1],[[1,1]],[74,[[8,[[7,[22,6]]]]]],[[2,107],22],[[2,108,107],22],[[10,[28,[10]]],[[8,[[7,[22,6]]]]]],[[],1],[[2,10],22],[[2,2],22],[[],4],0,[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],4],[[],4],[[],4],[2,[[8,[[7,[5,6]]]]]],[[2,26],22],0,0,[[2,[28,[25]],19,[47,[1]]],22],[[],15],[[],15],[[],15],[[],15],[[],15],[[],15],[[[109,[13]]],[[15,[13]]]],[[],15],[[],15],[[],15],[110,[[15,[1]]]],[48,[[15,[1]]]],[[],15],[[],15],[[],15],[[],15],[[],15],[[],15],[[],15],[[],15],[[],15],[[],15],[[],15],[[],15],[[],15],[[],15],[[],15],[[],15],[[],15],[[],15],[[],15],[[],15],[[],15],[[],15],[[],15],[[],15],[[],15],[[],15],[[],15],[[],15],[[],15],[[],15],[[],15],[[],15],[[],15],[[],15],[[],15],[[],15],[[],15],[[],15],[[],15],[[],15],[[],15],[[],15],[[],15],[[],15],[[],15],[[],15],[[],15],[[],15],[[],15],[[],15],[[],15],[[],15],[[],15],[[],15],[[],15],[[],15],[[],15],[[],15],[[],15],[[],15],[[],15],[[],15],[[],15],[[],15],[[],15],[[],15],[[],15],[[],15],[[],15],[[],15],[[],15],[[],111],[[],111],[[],111],[[],111],[[],111],[[],111],[[],111],[[],111],[[],111],[[],111],[[],111],[[],111],[[],111],[[],111],[[],111],[[],111],[[],111],[[],111],[[],111],[[],111],[[],111],[[],111],[[],111],[[],111],[[],111],[[],111],[[],111],[[],111],[[],111],[[],111],[[],111],[[],111],[[],111],[[],111],[[],111],[[],111],[[],111],[[],111],[[],111],[[],111],0,[[2,[28,[25]],[47,[1]],19,[47,[48]],25],22],[[51,20],[[15,[51,21]]]],0,[20,73],0,0,[[18,112,113],[[15,[[23,[66,6]],21]]]],[[24,112,113],[[15,[[23,[66,6]],21]]]],[[2,112,113],22],0,[[2,114],22],0,[18,78],[2,22],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[13,81],[[51,4],51],[[51,13],51],[[51,4],51],[2,22],[[13,[0,[115,101]],102],[[15,[103]]]],[[13,[0,[115,101]]],[[15,[103]]]],[[13,[0,[115,101]]],[[15,[103]]]],[[],1],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[]],[[]],[[]],[[]],[[]],[[]],[116,116],[[]],[78,[[15,[21]]]],[[78,[28,[70]]],[[15,[117,21]]]],[116,[[68,[67]]]],0,[78,[[15,[116,21]]]],[117,116],[70],[70],[70],[117,116],[70],[70],[70],[116,71],0,[[],[[15,[116]]]],[70],[70],[70],[[116,75],[[15,[76]]]],[[]],[[]],[[]],[78,[[15,[116,21]]]],[78,[[15,[117,21]]]],[78,70],[116,[[28,[70]]]],0,0,[[],70],[[],70],[[],70],[[]],[[]],[[]],[[[7,[6]]],[[7,[16,6]]]],[[[7,[6]]],[[7,[16,6]]]],[[[7,[6]]],[[7,[16,6]]]],[97,[[97,[16]]]],[97,[[97,[16]]]],[97,[[97,[16]]]],[98,[[98,[16]]]],[98,[[98,[16]]]],[98,[[98,[16]]]],[78,99],[78,99],[78,99],[116],0,[116,[[68,[67]]]],0,[[105,64,71,83],[[15,[78,21]]]],[78,70],[[]],[116],[78,[[15,[21]]]],[117,[[15,[116,21]]]],[116,[[28,[118]]]],0,[116,15],[117,117],0,0,[[]],[[],15],[[],15],[[],15],[[],15],[[],15],[[],15],[[],111],[[],111],[[],111],[116,73],0,[[]],[[]],[[]],0,0,0,0,0,0,0,0,[[],16],[[],16],0,0,[[]],[[]],[113,[[28,[[112,[119]]]]]],[113,113],[[]],0,0,[70],[70],0,0,[[],[[15,[113]]]],[70],[[113,75],[[15,[76]]]],[[]],0,[[],70],[[]],[[[7,[6]]],[[7,[16,6]]]],[97,[[97,[16]]]],[98,[[98,[16]]]],0,0,0,[[[23,[20,6]],120],113],[[113,112],[[28,[[23,[20,6]]]]]],0,[113,15],0,0,0,0,[[]],[[],15],[[],15],[[],111],0,0,[[]],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],22],0,0,[121,121],[[]],0,0,0,0,[70],[70],[70],[121],[70],[70],[70],[70],[70],[[],[[15,[121]]]],[[],[[15,[121,72]]]],[[],[[15,[121,72]]]],[[],[[15,[121,72]]]],[70],[70],[70],[70],[[121,121],73],[[],[[23,[122,6]]]],[[123,2,[15,[26,21]],[28,[73]],71],22],[[122,75],[[15,[76]]]],[[124,75],[[15,[76]]]],[[121,75],[[15,[76]]]],[[121,75],[[15,[76]]]],[[]],[[]],[[]],[[[96,[[95,[94]]]]],121],[[]],[71,[[15,[121]]]],[[],91],[[],91],[[],91],0,0,[[],70],[[],70],[[],70],[[],70],[125,[[8,[[7,[22,6]]]]]],[[126,127],[[8,[[7,[22,6]]]]]],[[]],[[]],[[]],[[]],[[[7,[6]]],[[7,[16,6]]]],[[[7,[6]]],[[7,[16,6]]]],[[[7,[6]]],[[7,[16,6]]]],[[[7,[6]]],[[7,[16,6]]]],[97,[[97,[16]]]],[97,[[97,[16]]]],[97,[[97,[16]]]],[97,[[97,[16]]]],[98,[[98,[16]]]],[98,[[98,[16]]]],[98,[[98,[16]]]],[98,[[98,[16]]]],[[],[[28,[123]]]],0,[126,[[15,[21]]]],[[],[[28,[126]]]],0,[2,[[8,[[7,[22,6]]]]]],0,[[121,121],73],0,[[2,71],[[8,[[7,[22,6]]]]]],[[2,71],[[8,[[7,[22,6]]]]]],[[2,71],[[8,[[7,[22,6]]]]]],[[2,71],[[8,[[7,[22,6]]]]]],[4],[4],[4],0,[121,[[15,[72]]]],[121,15],[121,[[15,[72]]]],[121,[[15,[72]]]],[121,70],[[],[[28,[126]]]],[[],4],[[]],[[],4],[[],4],[[],4],[[],15],[[],15],[[],15],[[[109,[121]]],[[15,[121]]]],[[],15],[[],15],[[],15],[[],15],[[],15],[[],111],[[],111],[[],111],[[],111],[121,70],[[],73],[[]],[[]],[[]],[[]],0,0,0,0,0,0,[128,129],0,0,[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],0,[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[[130,[71]],[130,[71]]],[[15,[131,4]]]],0,0,[132],[[133,70],[[15,[133,4]]]],[128],[134],[[133,70],[[15,[133,4]]]],[[133,70,[130,[71]]],[[15,[133,4]]]],[[128,71],[[15,[[23,[4]],4]]]],[70],[70],[70],[70],[70],[70],[70],[70],[70],[70],[70],[70],[128],[70],[134],[70],[70],[135],[136,4],[[]],[[]],[[]],[[]],[[]],[134,4],0,[[],70],[[],70],[[],70],[[],70],[[],[[15,[135,4]]]],[[],70],[[]],[[]],[[]],[[]],[[]],[[[7,[6]]],[[7,[16,6]]]],[[[7,[6]]],[[7,[16,6]]]],[[[7,[6]]],[[7,[16,6]]]],[[[7,[6]]],[[7,[16,6]]]],[[[7,[6]]],[[7,[16,6]]]],[97,[[97,[16]]]],[97,[[97,[16]]]],[97,[[97,[16]]]],[97,[[97,[16]]]],[97,[[97,[16]]]],[98,[[98,[16]]]],[98,[[98,[16]]]],[98,[[98,[16]]]],[98,[[98,[16]]]],[98,[[98,[16]]]],[137,[[15,[4]]]],0,[[133,70],[[15,[126,4]]]],[133,99],0,[133,99],[[133,[28,[126]]],[[15,[133,4]]]],[[],[[15,[133,4]]]],[[129,129,[28,[126]]],[[15,[128,4]]]],[[137,49,70,138,[23,[138]],129],134],[[133,70],[[15,[133,4]]]],[128,[[15,[[23,[4]],4]]]],[[134,70],22],[[133,70],[[15,[133,4]]]],[[133,70],[[15,[133,4]]]],[[133,[130,[71]]],[[15,[133,4]]]],[128,[[28,[81]]]],[134,[[28,[81]]]],0,0,0,0,0,0,0,[128,[[15,[[23,[4]],4]]]],[134,138],0,0,[[137,49,129],[[15,[[23,[134]],4]]]],0,0,[128,126],0,0,[[133,[130,[71]]],[[15,[4,4]]]],[[],15],[[],15],[[],15],[[],15],[[],15],[[],15],[[],15],[[],15],[[],15],[[],15],[[],111],[[],111],[[],111],[[],111],[[],111],[135,129],[[133,70],[[15,[134,4]]]],[128,129],0,[133,99],0,[[133,[130,[71]]],[[15,[4,4]]]],0,[[]],[[]],[[]],[[]],[[]],[138,22],0,0,0,0,0,0,0,0,0,0,[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],17],[139,[[28,[27]]]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],0,[139,[[28,[17]]]],[140,140],[141,141],[142,142],[[]],[[]],[[]],[[142,143],[[15,[[23,[50,6]],139]]]],[[140,142],[[15,[[23,[50,6]],139]]]],[[141,142],[[15,[[23,[50,6]],139]]]],[[],142],[70],[70],[70],[70],[70],[70],[70],[70],[139,71],[[],[[15,[142]]]],[[],[[15,[142,72]]]],[70],[70],[70],[70],[143,[[15,[142,139]]]],[140,[[15,[142,139]]]],[[142,142],73],[[139,75],[[15,[76]]]],[[139,75],[[15,[76]]]],[[142,75],[[15,[76]]]],[[]],[[]],[[]],[[]],[144,142],[[],91],0,[[]],[[],70],[[],70],[[],70],[[],70],[[]],[[]],[[]],[[]],[[[7,[6]]],[[7,[16,6]]]],[[[7,[6]]],[[7,[16,6]]]],[[[7,[6]]],[[7,[16,6]]]],[[[7,[6]]],[[7,[16,6]]]],[97,[[97,[16]]]],[97,[[97,[16]]]],[97,[[97,[16]]]],[97,[[97,[16]]]],[98,[[98,[16]]]],[98,[[98,[16]]]],[98,[[98,[16]]]],[98,[[98,[16]]]],[[142,142],73],[143,140],[143,141],0,[4],0,[142,[[15,[72]]]],[142,15],[142,70],[139,[[28,[17]]]],0,0,[[]],[[]],[[]],[[],4],[[],15],[[],15],[[],15],[[],15],[[],15],[[],15],[[],15],[[],15],[[],111],[[],111],[[],111],[[],111],[[]],[[]],[[]],[[]],0,0,0,0,0,0,0,0,0,0,0,[[10,10],10],[[10,10]],[[10,145,70],10],[12,[[15,[10,14]]]],[12,[[15,[10,14]]]],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[]],[[]],[[]],[[]],[[]],[[]],0,[146,146],[10,10],[145,145],[[]],[[]],[[]],[[],10],[70],[70],[70],[70],[70],[70],[[],[[15,[146]]]],[[],[[15,[10]]]],[70],[70],[70],[[10,10],73],[[145,145],73],[[146,75],[[15,[76]]]],[[10,75],[[15,[76]]]],[[10,75],[[15,[76]]]],[[145,75],[[15,[76]]]],[[145,75],[[15,[76]]]],[[]],[[]],[[]],[[145,70],10],[71,[[15,[10]]]],[71,[[15,[145]]]],[[],91],[[],91],[[10,145],70],[[],70],[[],70],[[],70],[[]],[[]],[[]],[[[7,[6]]],[[7,[16,6]]]],[[[7,[6]]],[[7,[16,6]]]],[[[7,[6]]],[[7,[16,6]]]],[97,[[97,[16]]]],[97,[[97,[16]]]],[97,[[97,[16]]]],[98,[[98,[16]]]],[98,[[98,[16]]]],[98,[[98,[16]]]],[[10,10],73],[[70,70],10],[[2,71],[[8,[[7,[22,6]]]]]],[[10,10],[[28,[65]]]],0,[4],[4],[146,15],[10,15],[70],[[]],[[]],[[]],[[],4],[[],4],[[],15],[[],15],[[],15],[[],15],[[],15],[[],15],[[],111],[[],111],[[],111],[[]],[[]],[[]],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[147,148],[149,71],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[149,149],[143,143],[147,147],[148,148],[[]],[[]],[[]],[[]],[[149,149],65],0,[70],[70],[70],[70],[70],[70],[70],[70],[143,3],[143,147],[143,143],[143,9],[143,11],[149],[70],[70],[70],[70],[149],0,[[149,149],73],[[143,143],73],[[148,148],73],[[149,75],[[15,[76]]]],[[149,75],[[15,[76]]]],[[143,75],[[15,[76]]]],[[147,75],[[15,[76]]]],[[148,75],[[15,[76]]]],[[143,83],3],[143,143],[[]],[[]],[[]],[[]],[[],[[15,[149,150]]]],[151,[[15,[149,150]]]],[149,143],[[],[[15,[152]]]],[[],[[15,[143,152]]]],[[],[[15,[149,150]]]],[151,[[15,[149,150]]]],[71,[[15,[149]]]],[153,149],[[151,153],149],[[],83],[149],[[],91],[[],70],[[],70],[[],70],[[],70],[[]],[[]],[[]],[[]],[[[7,[6]]],[[7,[16,6]]]],[[[7,[6]]],[[7,[16,6]]]],[[[7,[6]]],[[7,[16,6]]]],[[[7,[6]]],[[7,[16,6]]]],[97,[[97,[16]]]],[97,[[97,[16]]]],[97,[[97,[16]]]],[97,[[97,[16]]]],[98,[[98,[16]]]],[98,[[98,[16]]]],[98,[[98,[16]]]],[98,[[98,[16]]]],[149,[[23,[50,6]]]],[149,4],[149,151],0,[[149,149],73],[[143,143],73],[[148,148],73],[148],[[149,149],[[28,[65]]]],[149,71],0,[[]],[4],[[143,83],9],[143,143],0,[[]],[[]],[[]],[[]],[149],[[],4],[[],15],[[],15],[[],15],[[],15],[[],15],[[],15],[[],15],[[],15],[[],111],[[],111],[[],111],[[],111],[[],[[15,[150]]]],[151,[[15,[150]]]],[[143,83],11],[143,143],[[]],[[]],[[]],[[]],[149],0,0,[[],16],[[],16],[[],16],[[],16],[4,22],0,0,[[]],[[]],[[]],[[]],0,[123,123],[154,154],[[]],[[]],[[123,70]],[[154,70]],[70],[70],[70],[70],[70],[70],[123,[[15,[155]]]],[154,[[15,[155]]]],[123,[[15,[155]]]],[154,[[15,[155]]]],[[154,75],[[15,[76]]]],[[]],[[]],[[],70],[[],70],0,[[]],[[]],[[[7,[6]]],[[7,[16,6]]]],[[[7,[6]]],[[7,[16,6]]]],[97,[[97,[16]]]],[97,[[97,[16]]]],[98,[[98,[16]]]],[98,[[98,[16]]]],[[[0,[156,157]],[0,[115,157]]],123],0,[[]],[123,[[15,[70,155]]]],[154,[[15,[70,155]]]],[158,[[15,[155]]]],[82,[[15,[155]]]],[[],[[15,[155]]]],[84,[[15,[155]]]],[[],[[15,[155]]]],[81,[[15,[155]]]],[[],[[15,[155]]]],[138,[[15,[155]]]],[159,[[15,[155]]]],[[],[[15,[155]]]],[[],[[15,[155]]]],[[],[[15,[155]]]],[[],[[15,[155]]]],[160,[[15,[155]]]],[161,[[15,[155]]]],[[],[[15,[155]]]],[162,[[15,[155]]]],[[],[[15,[155]]]],[[],[[15,[155]]]],[[],[[15,[155]]]],[163,[[15,[155]]]],[50,[[15,[155]]]],[[],[[15,[155]]]],[83,[[15,[155]]]],[81,[[15,[155]]]],[[],[[15,[155]]]],[[],[[15,[155]]]],[[],[[15,[155]]]],[159,[[15,[155]]]],[[],[[15,[155]]]],[138,[[15,[155]]]],[163,[[15,[155]]]],[[],[[15,[155]]]],[50,[[15,[155]]]],[[],[[15,[155]]]],[83,[[15,[155]]]],[[],[[15,[155]]]],[[],[[15,[155]]]],[84,[[15,[155]]]],[[],[[15,[155]]]],[82,[[15,[155]]]],[162,[[15,[155]]]],[161,[[15,[155]]]],[[],[[15,[155]]]],[160,[[15,[155]]]],[[],[[15,[155]]]],[158,[[15,[155]]]],[[],[[15,[155]]]],[[],[[15,[155]]]],[[],[[15,[155]]]],[[],[[15,[155]]]],[161,[[15,[155]]]],[[],[[15,[155]]]],[160,[[15,[155]]]],[158,[[15,[155]]]],[163,[[15,[155]]]],[[],[[15,[155]]]],[50,[[15,[155]]]],[[],[[15,[155]]]],[[],[[15,[155]]]],[83,[[15,[155]]]],[159,[[15,[155]]]],[138,[[15,[155]]]],[[],[[15,[155]]]],[[],[[15,[155]]]],[[],[[15,[155]]]],[82,[[15,[155]]]],[[],[[15,[155]]]],[81,[[15,[155]]]],[84,[[15,[155]]]],[162,[[15,[155]]]],[[],[[15,[155]]]],[[],[[15,[155]]]],[159,[[15,[155]]]],[[],[[15,[155]]]],[50,[[15,[155]]]],[160,[[15,[155]]]],[[],[[15,[155]]]],[163,[[15,[155]]]],[83,[[15,[155]]]],[[],[[15,[155]]]],[[],[[15,[155]]]],[[],[[15,[155]]]],[[],[[15,[155]]]],[[],[[15,[155]]]],[[],[[15,[155]]]],[84,[[15,[155]]]],[81,[[15,[155]]]],[138,[[15,[155]]]],[162,[[15,[155]]]],[158,[[15,[155]]]],[82,[[15,[155]]]],[[],[[15,[155]]]],[[],[[15,[155]]]],[161,[[15,[155]]]],[[],[[15,[155]]]],[[],123],0,[[]],[[]],[[],15],[[],15],[[],15],[[],15],[[],111],[[],111],[[]],[[]],[[]],[123,[[15,[70,155]]]],[[]],[154,[[15,[70,155]]]],[161,[[15,[155]]]],[[],[[15,[155]]]],[81,[[15,[155]]]],[159,[[15,[155]]]],[162,[[15,[155]]]],[84,[[15,[155]]]],[[],[[15,[155]]]],[160,[[15,[155]]]],[[],[[15,[155]]]],[83,[[15,[155]]]],[50,[[15,[155]]]],[163,[[15,[155]]]],[158,[[15,[155]]]],[138,[[15,[155]]]],[[],[[15,[155]]]],[[],[[15,[155]]]],[[],[[15,[155]]]],[[],[[15,[155]]]],[[],[[15,[155]]]],[[],[[15,[155]]]],[82,[[15,[155]]]],[[],[[15,[155]]]],[[],[[15,[155]]]],[[],[[15,[155]]]],[[],[[15,[155]]]],[[],[[15,[155]]]],[163,[[15,[155]]]],[159,[[15,[155]]]],[138,[[15,[155]]]],[[],[[15,[155]]]],[162,[[15,[155]]]],[83,[[15,[155]]]],[[],[[15,[155]]]],[161,[[15,[155]]]],[160,[[15,[155]]]],[[],[[15,[155]]]],[81,[[15,[155]]]],[50,[[15,[155]]]],[158,[[15,[155]]]],[[],[[15,[155]]]],[[],[[15,[155]]]],[[],[[15,[155]]]],[[],[[15,[155]]]],[[],[[15,[155]]]],[82,[[15,[155]]]],[[],[[15,[155]]]],[[],[[15,[155]]]],[84,[[15,[155]]]],[[],[[15,[155]]]],[[],[[15,[155]]]],[[],[[15,[155]]]],[[],[[15,[155]]]],[[],[[15,[155]]]],[82,[[15,[155]]]],[[],[[15,[155]]]],[[],[[15,[155]]]],[[],[[15,[155]]]],[81,[[15,[155]]]],[[],[[15,[155]]]],[159,[[15,[155]]]],[[],[[15,[155]]]],[138,[[15,[155]]]],[[],[[15,[155]]]],[163,[[15,[155]]]],[162,[[15,[155]]]],[84,[[15,[155]]]],[161,[[15,[155]]]],[158,[[15,[155]]]],[160,[[15,[155]]]],[50,[[15,[155]]]],[[],[[15,[155]]]],[83,[[15,[155]]]],[82,[[15,[155]]]],[[],[[15,[155]]]],[[],[[15,[155]]]],[160,[[15,[155]]]],[81,[[15,[155]]]],[163,[[15,[155]]]],[159,[[15,[155]]]],[138,[[15,[155]]]],[84,[[15,[155]]]],[83,[[15,[155]]]],[[],[[15,[155]]]],[161,[[15,[155]]]],[[],[[15,[155]]]],[[],[[15,[155]]]],[162,[[15,[155]]]],[[],[[15,[155]]]],[[],[[15,[155]]]],[[],[[15,[155]]]],[[],[[15,[155]]]],[[],[[15,[155]]]],[[],[[15,[155]]]],[158,[[15,[155]]]],[[],[[15,[155]]]],[50,[[15,[155]]]],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[[],16],[[],16],[[],16],[[],16],0,[[]],[[]],[[]],[[]],[[],[[15,[85,164]]]],[[108,[23,[6]]],108],[108,108],[165,165],[[]],[[]],[108,[[166,[108]]]],0,[70],[70],[70],[70],[[],[[15,[[23,[93,6]],164]]]],[[],[[15,[108,72]]]],[[],[[15,[108]]]],[[],[[15,[165,72]]]],[[],[[15,[165]]]],[70],[70],[[108,108],73],0,[[108,75],[[15,[76]]]],[[165,75],[[15,[76]]]],[[165,75],[[15,[76]]]],0,[[]],[167,108],[168,108],[169,108],[[]],[71,[[15,[165]]]],[[],83],[108],[108],[[],91],[[],70],[[],70],[[]],[[]],[[[7,[6]]],[[7,[16,6]]]],[[[7,[6]]],[[7,[16,6]]]],[97,[[97,[16]]]],[97,[[97,[16]]]],[98,[[98,[16]]]],[98,[[98,[16]]]],0,[108],[108,[[170,[[95,[94]]]]]],0,[[108,108],73],[108,[[23,[90,6]]]],[165,70],[165,70],[[108,171,171],[[15,[172,173]]]],[108,[[23,[93,6]]]],[108,[[23,[93,6]]]],[108,70],0,0,[108,[[23,[6]]]],[4],[108,15],[108,[[15,[72]]]],[165,15],[165,[[15,[72]]]],[108,70],[165,70],[[108,[23,[6]]]],[120,[[15,[[174,[119]],164]]]],0,[[],4],0,[[]],[[]],[[],4],0,[[],15],[[[109,[165]]],[[15,[165]]]],[[],15],[[],15],[[],15],[83,[[15,[164]]]],[[],111],[[],111],0,[108,[[177,[[176,[175]]]]]],[[108,174],[[15,[164]]]],[[]],[[]],0,0,0,0,0,0,0,0,0,0,0,0,[[]],[[71,70,70,50,70],4],[[71,70,70,50,70,70,70,70,70],4],[[71,71],4],[[9,[23,[3,6]],70,50],178],[[9,9,11,50],179],[[70,70,50],180],[70,[[23,[9,6]]]],[[[23,[4,6]],71],[[15,[[7,[17,6]]]]]],[[[23,[4,6]],71],[[15,[[7,[17,6]]]]]],[[[23,[4,6]],71,132],[[15,[[7,[17,6]]]]]],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[[],16],[[],16],[[],16],[[],16],[[],17],[[]],[[]],[[]],[[]],[70],[70],[70],[70],[70],[70],[[164,75],[[15,[76]]]],[[164,75],[[15,[76]]]],[[181,75],[[15,[76]]]],[[181,75],[[15,[76]]]],[[]],[72,164],[181,164],[[]],[[],91],[[],91],[[]],[[],70],[[],70],[[]],[[]],[[[7,[6]]],[[7,[16,6]]]],[[[7,[6]]],[[7,[16,6]]]],[97,[[97,[16]]]],[97,[[97,[16]]]],[98,[[98,[16]]]],[98,[[98,[16]]]],[4],[4],[[],4],[[],4],[[],15],[[],15],[[],15],[[],15],[[],111],[[],111],[[]],[[]],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],0,[[]],[[]],[[]],[[]],[[]],[[]],[167,167],[182,182],[183,183],[[]],[[]],[[]],[70],[70],[70],[70],[70],[70],[[],[[15,[167,72]]]],[[],[[15,[167]]]],[[],[[15,[182,72]]]],[[],[[15,[182]]]],[[],[[15,[167,72]]]],[[],[[15,[182,72]]]],[[],[[15,[167,72]]]],[[],[[15,[182,72]]]],[70],[70],[70],[[167,167],73],[[182,182],73],0,[[167,75],[[15,[76]]]],[[182,75],[[15,[76]]]],[[183,75],[[15,[76]]]],[[]],[[]],[[]],[[[23,[183,6]],184,185],[[15,[164]]]],[[],83],[[],83],[167],[182],[[],70],[[],70],[[],70],0,[[]],[[]],[[]],[[[7,[6]]],[[7,[16,6]]]],[[[7,[6]]],[[7,[16,6]]]],[[[7,[6]]],[[7,[16,6]]]],[97,[[97,[16]]]],[97,[[97,[16]]]],[97,[[97,[16]]]],[98,[[98,[16]]]],[98,[[98,[16]]]],[98,[[98,[16]]]],0,0,[[167,167],73],[[182,182],73],0,0,0,[167,15],[167,[[15,[72]]]],[182,[[15,[72]]]],[182,15],[167,[[15,[72]]]],[182,[[15,[72]]]],[167,[[15,[72]]]],[182,[[15,[72]]]],[167,70],[182,70],[[]],[[]],[[]],[[],15],[[],15],[[],15],[[],15],[[],15],[[],15],0,[[],111],[[],111],[[],111],[167,70],[182,70],[[167,186,[170,[[95,[94]]]]],[[15,[164]]]],[[]],[[]],[[]],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[49,25],[9,25],0,[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[25,25],[49,49],[9,9],[187,187],[188,188],[114,114],[11,11],[77,77],[3,3],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],25],[[],49],[[],9],[[],187],[[],188],[[],114],[[],77],[[],3],[70],[25],[70],[70],[70],[70],[70],[70],[70],[70],[70],[70],[70],[70],[70],[70],[70],[70],[70],[[],[[15,[25]]]],[[],[[15,[25,72]]]],[[],[[15,[49]]]],[[],[[15,[49,72]]]],[[],[[15,[9]]]],[[],[[15,[9,72]]]],[[],[[15,[187]]]],[[],[[15,[187,72]]]],[[],[[15,[188,72]]]],[[],[[15,[188]]]],[[],[[15,[114]]]],[[],[[15,[114,72]]]],[[],[[15,[11]]]],[[],[[15,[11,72]]]],[[],[[15,[77,72]]]],[[],[[15,[77]]]],[[],[[15,[3]]]],[[],[[15,[3,72]]]],[[],[[15,[25,72]]]],[[],[[15,[49,72]]]],[[],[[15,[9,72]]]],[[],[[15,[187,72]]]],[[],[[15,[188,72]]]],[[],[[15,[114,72]]]],[[],[[15,[11,72]]]],[[],[[15,[77,72]]]],[[],[[15,[3,72]]]],[[],[[15,[25,72]]]],[[],[[15,[49,72]]]],[[],[[15,[9,72]]]],[[],[[15,[187,72]]]],[[],[[15,[188,72]]]],[[],[[15,[114,72]]]],[[],[[15,[11,72]]]],[[],[[15,[77,72]]]],[[],[[15,[3,72]]]],[70],[70],[70],[70],[70],[70],[70],[70],[70],[49,189],0,0,[49,[[15,[190,164]]]],[[25,25],73],[[49,49],73],[[187,187],73],[[114,114],73],[[77,77],73],[[3,3],73],[[25,75],[[15,[76]]]],[[25,75],[[15,[76]]]],[[49,75],[[15,[76]]]],[[49,75],[[15,[76]]]],[[9,75],[[15,[76]]]],[[9,75],[[15,[76]]]],[[187,75],[[15,[76]]]],[[187,75],[[15,[76]]]],[[188,75],[[15,[76]]]],[[188,75],[[15,[76]]]],[[114,75],[[15,[76]]]],[[114,75],[[15,[76]]]],[[11,75],[[15,[76]]]],[[11,75],[[15,[76]]]],[[77,75],[[15,[76]]]],[[77,75],[[15,[76]]]],[[3,75],[[15,[76]]]],[[3,75],[[15,[76]]]],[[]],[[[112,[119]]],25],[191,25],[[]],[[]],[192,9],[[]],[[]],[[]],[193,11],[[]],[[]],[[]],[194,3],[71,[[15,[25]]]],[71,[[15,[49]]]],[71,[[15,[9]]]],[71,[[15,[187]]]],[71,[[15,[188]]]],[71,[[15,[114]]]],[71,[[15,[11]]]],[71,[[15,[77]]]],[71,[[15,[3]]]],[[],9],[[],188],[[],11],[[],3],[[],83],[[],83],[[],83],[[],83],[[],83],[[],83],[25],[49],[187],[114],[77],[3],[[],91],[[],91],[[],91],[[],91],[[],91],[[],91],[[],91],[[],91],[[],91],[[],70],[[],70],[[],70],[[],70],[[],70],[[],70],[[],70],[[],70],[[],70],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[[7,[6]]],[[7,[16,6]]]],[[[7,[6]]],[[7,[16,6]]]],[[[7,[6]]],[[7,[16,6]]]],[[[7,[6]]],[[7,[16,6]]]],[[[7,[6]]],[[7,[16,6]]]],[[[7,[6]]],[[7,[16,6]]]],[[[7,[6]]],[[7,[16,6]]]],[[[7,[6]]],[[7,[16,6]]]],[[[7,[6]]],[[7,[16,6]]]],[97,[[97,[16]]]],[97,[[97,[16]]]],[97,[[97,[16]]]],[97,[[97,[16]]]],[97,[[97,[16]]]],[97,[[97,[16]]]],[97,[[97,[16]]]],[97,[[97,[16]]]],[97,[[97,[16]]]],[98,[[98,[16]]]],[98,[[98,[16]]]],[98,[[98,[16]]]],[98,[[98,[16]]]],[98,[[98,[16]]]],[98,[[98,[16]]]],[98,[[98,[16]]]],[98,[[98,[16]]]],[98,[[98,[16]]]],[[25,25],73],[[49,49],73],[[187,187],73],[[114,114],73],[[25,189],49],[[9,77,83,93],90],[[3,25,83,93],90],[[11,169],[[15,[195,164]]]],[[11,66,168],[[15,[164]]]],[[2,71],[[8,[[7,[22,6]]]]]],[[2,71],[[8,[[7,[22,6]]]]]],[[2,71],[[8,[[7,[22,6]]]]]],[[2,71],[[8,[[7,[22,6]]]]]],[9],[9,49],[188,187],[11,114],[11],[3],[3,77],0,[4],[4],[4],[4],[4],[4],[4],[4],[4],0,[25,[[15,[72]]]],[25,15],[49,[[15,[72]]]],[49,15],[9,[[15,[72]]]],[9,15],[187,15],[187,[[15,[72]]]],[188,15],[188,[[15,[72]]]],[114,15],[114,[[15,[72]]]],[11,15],[11,[[15,[72]]]],[77,[[15,[72]]]],[77,15],[3,15],[3,[[15,[72]]]],[25,[[15,[72]]]],[49,[[15,[72]]]],[9,[[15,[72]]]],[187,[[15,[72]]]],[188,[[15,[72]]]],[114,[[15,[72]]]],[11,[[15,[72]]]],[77,[[15,[72]]]],[3,[[15,[72]]]],[25,[[15,[72]]]],[49,[[15,[72]]]],[9,[[15,[72]]]],[187,[[15,[72]]]],[188,[[15,[72]]]],[114,[[15,[72]]]],[11,[[15,[72]]]],[77,[[15,[72]]]],[3,[[15,[72]]]],[25,70],[49,70],[9,70],[187,70],[188,70],[114,70],[11,70],[77,70],[3,70],[9,[[174,[119]]]],[[],4],[[],4],[[],4],[[],4],[[],4],[[],4],[[],4],[[],4],[[],4],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],4],[[],4],[[],4],[[],4],[[],4],[[],4],[[],4],[[],4],[[],4],[[],15],[[[109,[25]]],[[15,[25]]]],[[],15],[[[109,[49]]],[[15,[49]]]],[[],15],[[[109,[9]]],[[15,[9]]]],[[],15],[[[109,[187]]],[[15,[187]]]],[[[109,[188]]],[[15,[188]]]],[[],15],[[],15],[[[109,[114]]],[[15,[114]]]],[[[109,[11]]],[[15,[11]]]],[[],15],[[],15],[[[109,[77]]],[[15,[77]]]],[[],15],[[[109,[3]]],[[15,[3]]]],[[],15],[[],15],[[],15],[[],15],[[],15],[[],15],[[],15],[[],15],[[],15],[[],111],[[],111],[[],111],[[],111],[[],111],[[],111],[[],111],[[],111],[[],111],[25,70],[49,70],[9,70],[187,70],[188,70],[114,70],[11,70],[77,70],[3,70],[[49,174],[[15,[164]]]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],0,0,[[],16],[[],16],[[],16],[[],16],0,[[]],[[]],[[]],[[]],0,[169,169],[196,196],[[]],[[]],[70],[70],[70],[70],[[],[[15,[169,72]]]],[[],[[15,[169]]]],[[],[[15,[196,72]]]],[[],[[15,[196]]]],[[],[[15,[169,72]]]],[[],[[15,[196,72]]]],[[],[[15,[169,72]]]],[[],[[15,[196,72]]]],[70],[70],[[169,169],73],[[196,196],73],0,[[169,75],[[15,[76]]]],[[196,75],[[15,[76]]]],[[]],[[]],[[197,106,184,198],[[15,[164]]]],[[],83],[[],83],[169],[196],[[],70],[[],70],0,[[]],[[]],[[[7,[6]]],[[7,[16,6]]]],[[[7,[6]]],[[7,[16,6]]]],[97,[[97,[16]]]],[97,[[97,[16]]]],[98,[[98,[16]]]],[98,[[98,[16]]]],0,0,0,0,0,[[169,169],73],[[196,196],73],0,[169,[[15,[72]]]],[169,15],[196,15],[196,[[15,[72]]]],[169,[[15,[72]]]],[196,[[15,[72]]]],[169,[[15,[72]]]],[196,[[15,[72]]]],[169,70],[196,70],[[]],[[]],[[],15],[[],15],[[],15],[[],15],0,[[],111],[[],111],[169,70],[196,70],[[169,199,[170,[[95,[94]]]]],[[15,[164]]]],0,[[]],[[]],[[70,50,[28,[126]]],[[15,[185,164]]]],[[70,50,[28,[126]]],[[15,[186,164]]]],[[50,[28,[126]]],[[15,[198,164]]]],[[50,[28,[126]]],[[15,[199,164]]]],[[70,70,50,[28,[126]]],[[15,[200,164]]]],[[70,70,50,[28,[126]]],[[15,[201,164]]]],[[[28,[126]]],[[15,[[125,[[176,[175]]]],164]]]],[[70,50,125,[28,[126]]],[[15,[164]]]],[[70,50,125,[28,[126]]],[[15,[164]]]],[[50,125,[28,[126]]],[[15,[164]]]],[[50,125,[28,[126]]],[[15,[164]]]],[[70,70,50,125,[28,[126]]],[[15,[164]]]],[[70,70,50,125,[28,[126]]],[[15,[164]]]],[[70,[28,[126]]],[[15,[164]]]],0,0,[70,[[15,[[125,[[176,[175]]]],164]]]],0,0,[70,[[15,[[125,[[176,[175]]]],164]]]],[70,[[15,[[125,[[176,[175]]]],164]]]],0,0,0,[[],16],[[],16],[[],16],[[],16],[[]],[[]],[[]],[[]],[185,185],[186,186],[[]],[[]],[70],[70],[70],[70],[[],[[15,[185]]]],[[],[[15,[185,72]]]],[[],[[15,[186]]]],[[],[[15,[186,72]]]],[[],[[15,[185,72]]]],[[],[[15,[186,72]]]],[[],[[15,[185,72]]]],[[],[[15,[186,72]]]],[70],[70],[[185,185],73],[[186,186],73],[[185,75],[[15,[76]]]],[[186,75],[[15,[76]]]],[144,185],[[]],[144,186],[[]],[186,[[202,[[176,[175]]]]]],[[],70],[[],70],[[]],[[]],[[[7,[6]]],[[7,[16,6]]]],[[[7,[6]]],[[7,[16,6]]]],[97,[[97,[16]]]],[97,[[97,[16]]]],[98,[[98,[16]]]],[98,[[98,[16]]]],[[185,185],73],[[186,186],73],[185,70],[186,70],0,0,[185,70],[185,70],[186,70],[185,70],[[125,70,50],[[15,[164]]]],0,[185,[[15,[72]]]],[185,15],[186,[[15,[72]]]],[186,15],[185,[[15,[72]]]],[186,[[15,[72]]]],[185,[[15,[72]]]],[186,[[15,[72]]]],[185,70],[186,70],[[]],[[]],0,0,[[],15],[[],15],[[],15],[[],15],[[],111],[[],111],[185,70],[186,70],0,[[]],[[]],0,0,0,[[],16],[[],16],[[],16],[[],16],[[]],[[]],[[]],[[]],[198,198],[199,199],[[]],[[]],[70],[70],[70],[70],[[],[[15,[198,72]]]],[[],[[15,[198]]]],[[],[[15,[199]]]],[[],[[15,[199,72]]]],[[],[[15,[198,72]]]],[[],[[15,[199,72]]]],[[],[[15,[198,72]]]],[[],[[15,[199,72]]]],[70],[70],[[198,198],73],[[199,199],73],[[198,75],[[15,[76]]]],[[199,75],[[15,[76]]]],[[]],[144,198],[144,199],[[]],[199,[[202,[[176,[175]]]]]],[[],70],[[],70],[[]],[[]],[[[7,[6]]],[[7,[16,6]]]],[[[7,[6]]],[[7,[16,6]]]],[97,[[97,[16]]]],[97,[[97,[16]]]],[98,[[98,[16]]]],[98,[[98,[16]]]],[[198,198],73],[[199,199],73],[[125,50],[[15,[164]]]],0,[198,[[15,[72]]]],[198,15],[199,[[15,[72]]]],[199,15],[198,[[15,[72]]]],[199,[[15,[72]]]],[198,[[15,[72]]]],[199,[[15,[72]]]],[198,70],[199,70],[[]],[[]],0,0,[[],15],[[],15],[[],15],[[],15],[[],111],[[],111],[198,70],[199,70],0,[[]],[[]],0,0,0,[[],16],[[],16],[[],16],[[],16],[[]],[[]],[[]],[[]],[200,200],[201,201],[[]],[[]],[70],[70],[70],[70],[[],[[15,[200,72]]]],[[],[[15,[200]]]],[[],[[15,[201]]]],[[],[[15,[201,72]]]],[[],[[15,[200,72]]]],[[],[[15,[201,72]]]],[[],[[15,[200,72]]]],[[],[[15,[201,72]]]],[70],[70],[[200,200],73],[[201,201],73],[[200,75],[[15,[76]]]],[[201,75],[[15,[76]]]],[[]],[144,200],[144,201],[[]],[200,201],[201,[[202,[[176,[175]]]]]],[[],70],[[],70],[[]],[[]],[[[7,[6]]],[[7,[16,6]]]],[[[7,[6]]],[[7,[16,6]]]],[97,[[97,[16]]]],[97,[[97,[16]]]],[98,[[98,[16]]]],[98,[[98,[16]]]],0,0,0,0,[[200,200],73],[[201,201],73],[200,70],[201,70],[200,70],[200,70],[201,70],[200,70],[[125,70,70,50],[[15,[164]]]],0,[200,[[15,[72]]]],[200,15],[201,[[15,[72]]]],[201,15],[200,[[15,[72]]]],[201,[[15,[72]]]],[200,[[15,[72]]]],[201,[[15,[72]]]],[200,70],[201,70],[[]],[[]],0,0,[[],15],[[],15],[[],15],[[],15],[[],111],[[],111],[200,70],[201,70],0,[[]],[[]],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[[85,85],85],[[85,85]],0,0,[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],0,0,0,0,0,0,[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[203,203],[204,204],[106,106],[85,85],[19,19],[205,205],[69,69],[66,66],[206,206],[90,90],[93,93],[207,207],[197,197],[208,208],[209,209],[210,210],[195,195],[92,92],[211,211],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[85,85],65],0,[[25,[23,[208,6]],83,188],[[15,[209,164]]]],0,0,[69,187],0,[[92,9,93],[[15,[197,164]]]],[[],204],[[],106],[[],85],[[],19],[[],205],[[],69],[[],66],[[],206],[[],207],[[],197],[[],208],[70],[70],[70],[70],[70],[70],[70],[70],[70],[70],[70],[70],[70],[70],[70],[70],[70],[70],[70],[70],[70],[70],[70],[70],[70],[70],[70],[70],[70],[70],[70],[70],[70],[70],[70],[70],[70],[70],[70],[70],[[],[[15,[204]]]],[[],[[15,[204,72]]]],[[],[[15,[106]]]],[[],[[15,[106,72]]]],[[],[[15,[85]]]],[[],[[15,[85,72]]]],[[],[[15,[19,72]]]],[[],[[15,[19]]]],[[],[[15,[205,72]]]],[[],[[15,[205]]]],[[],[[15,[69]]]],[[],[[15,[69,72]]]],[[],[[15,[66,72]]]],[[],[[15,[66]]]],[[],[[15,[206,72]]]],[[],[[15,[206]]]],[[],[[15,[90]]]],[[],[[15,[90,72]]]],[[],[[15,[93,72]]]],[[],[[15,[93]]]],[[],[[15,[207]]]],[[],[[15,[207,72]]]],[[],[[15,[197]]]],[[],[[15,[197,72]]]],[[],[[15,[208]]]],[[],[[15,[208,72]]]],[[],[[15,[209]]]],[[],[[15,[209,72]]]],[[],[[15,[210]]]],[[],[[15,[210,72]]]],[[],[[15,[92,72]]]],[[],[[15,[92]]]],[[],[[15,[204,72]]]],[[],[[15,[106,72]]]],[[],[[15,[19,72]]]],[[],[[15,[69,72]]]],[[],[[15,[66,72]]]],[[],[[15,[206,72]]]],[[],[[15,[90,72]]]],[[],[[15,[93,72]]]],[[],[[15,[197,72]]]],[[],[[15,[208,72]]]],[[],[[15,[209,72]]]],[[],[[15,[210,72]]]],[[],[[15,[92,72]]]],[[],[[15,[204,72]]]],[[],[[15,[106,72]]]],[[],[[15,[19,72]]]],[[],[[15,[69,72]]]],[[],[[15,[66,72]]]],[[],[[15,[206,72]]]],[[],[[15,[90,72]]]],[[],[[15,[93,72]]]],[[],[[15,[197,72]]]],[[],[[15,[208,72]]]],[[],[[15,[209,72]]]],[[],[[15,[210,72]]]],[[],[[15,[92,72]]]],[85,85],[85],[70],[70],[70],[70],[70],[70],[70],[70],[70],[70],[70],[70],[70],[70],[70],[70],[70],[70],[70],[70],[[],19],[[],66],[207],[[204,204],73],[[106,106],73],[[85,85],73],[[19,19],73],[[205,205],73],[[69,69],73],[[66,66],73],[[206,206],73],[[90,90],73],[[93,93],73],[[207,207],73],[[197,197],73],[[208,208],73],[[209,209],73],[[210,210],73],[[195,195],73],[[92,92],73],[209,83],0,0,0,0,[[203,75],[[15,[76]]]],[[204,75],[[15,[76]]]],[[204,75],[[15,[76]]]],[[106,75],[[15,[76]]]],[[106,75],[[15,[76]]]],[[85,75],[[15,[76]]]],[[85,75],[[15,[76]]]],[[85,75],[[15,[76]]]],[[19,75],[[15,[76]]]],[[19,75],[[15,[76]]]],[[205,75],[[15,[76]]]],[[69,75],[[15,[76]]]],[[66,75],[[15,[76]]]],[[66,75],[[15,[76]]]],[[206,75],[[15,[76]]]],[[206,75],[[15,[76]]]],[[90,75],[[15,[76]]]],[[90,75],[[15,[76]]]],[[93,75],[[15,[76]]]],[[93,75],[[15,[76]]]],[[207,75],[[15,[76]]]],[[197,75],[[15,[76]]]],[[208,75],[[15,[76]]]],[[208,75],[[15,[76]]]],[[209,75],[[15,[76]]]],[[210,75],[[15,[76]]]],[[210,75],[[15,[76]]]],[[195,75],[[15,[76]]]],[[92,75],[[15,[76]]]],[[92,75],[[15,[76]]]],[[211,75],[[15,[76]]]],0,0,[69,77],[[]],[[]],[[]],[[]],[84,85],[50,85],[83,85],[[]],[81,85],[1,85],[212,85],[[]],[[]],[144,205],[[]],[[]],[[[95,[94]]],206],[[]],[[]],[213,90],[197,93],[[]],[[]],[[]],[214,197],[[]],[[]],[[]],[[]],[215,92],[[]],[[]],[[[95,[94]]],93],[197,[[15,[92,164]]]],[71,[[15,[204]]]],[71,[[15,[106]]]],[71,[[15,[85]]]],[71,[[15,[19]]]],[71,[[15,[66]]]],[71,[[15,[206]]]],[71,[[15,[90]]]],[71,[[15,[93]]]],[71,[[15,[208]]]],[71,[[15,[210]]]],[71,[[15,[92]]]],[[],[[23,[85,6]]]],[[],106],[[],83],[[],83],[[],83],[[],83],[[],83],[[],83],[[],83],[[],83],[[],83],[[],83],[[],83],[[],83],[[],83],[[],83],[[],83],[204],[85],[19],[205],[69],[66],[206],[90],[93],[207],[197],[208],[209],[210],[92],[[],91],[[],91],[[],91],[[],91],[[],91],[[],91],[[],91],[[],91],[[],91],[[],91],[[],91],[[],70],[[],70],[[],70],[[],70],[[],70],[[],70],[[],70],[[],70],[[],70],[[],70],[[],70],[[],70],[[],70],[[],70],[[],70],[[],70],[[],70],[[],70],[[],70],[[],70],[205],[210,216],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[[7,[6]]],[[7,[16,6]]]],[[[7,[6]]],[[7,[16,6]]]],[[[7,[6]]],[[7,[16,6]]]],[[[7,[6]]],[[7,[16,6]]]],[[[7,[6]]],[[7,[16,6]]]],[[[7,[6]]],[[7,[16,6]]]],[[[7,[6]]],[[7,[16,6]]]],[[[7,[6]]],[[7,[16,6]]]],[[[7,[6]]],[[7,[16,6]]]],[[[7,[6]]],[[7,[16,6]]]],[[[7,[6]]],[[7,[16,6]]]],[[[7,[6]]],[[7,[16,6]]]],[[[7,[6]]],[[7,[16,6]]]],[[[7,[6]]],[[7,[16,6]]]],[[[7,[6]]],[[7,[16,6]]]],[[[7,[6]]],[[7,[16,6]]]],[[[7,[6]]],[[7,[16,6]]]],[[[7,[6]]],[[7,[16,6]]]],[[[7,[6]]],[[7,[16,6]]]],[[[7,[6]]],[[7,[16,6]]]],[97,[[97,[16]]]],[97,[[97,[16]]]],[97,[[97,[16]]]],[97,[[97,[16]]]],[97,[[97,[16]]]],[97,[[97,[16]]]],[97,[[97,[16]]]],[97,[[97,[16]]]],[97,[[97,[16]]]],[97,[[97,[16]]]],[97,[[97,[16]]]],[97,[[97,[16]]]],[97,[[97,[16]]]],[97,[[97,[16]]]],[97,[[97,[16]]]],[97,[[97,[16]]]],[97,[[97,[16]]]],[97,[[97,[16]]]],[97,[[97,[16]]]],[97,[[97,[16]]]],[98,[[98,[16]]]],[98,[[98,[16]]]],[98,[[98,[16]]]],[98,[[98,[16]]]],[98,[[98,[16]]]],[98,[[98,[16]]]],[98,[[98,[16]]]],[98,[[98,[16]]]],[98,[[98,[16]]]],[98,[[98,[16]]]],[98,[[98,[16]]]],[98,[[98,[16]]]],[98,[[98,[16]]]],[98,[[98,[16]]]],[98,[[98,[16]]]],[98,[[98,[16]]]],[98,[[98,[16]]]],[98,[[98,[16]]]],[98,[[98,[16]]]],[98,[[98,[16]]]],[69,73],[69,73],[69,73],[66,73],[197,73],[[209,83],73],[69,73],[66,73],[69,73],[69,73],[69,73],[2,[[8,[[7,[22,6]]]]]],[85,85],[85],[[],19],[[],66],[[204,204],73],[[106,106],73],[[85,85],73],[[19,19],73],[[205,205],73],[[69,69],73],[[66,66],73],[[206,206],73],[[90,90],73],[[93,93],73],[[197,197],73],[[208,208],73],[[209,209],73],[[210,210],73],[[195,195],73],[[92,92],73],[[211,85],[[15,[164]]]],[106,204],[[],205],[[19,69],[[15,[66,164]]]],[[85,66,49,207],197],[[],[[15,[208,164]]]],[[[216,[119]]],210],[106,19],[[],19],0,[[2,71],[[8,[[7,[22,6]]]]]],[[2,71],[[8,[[7,[22,6]]]]]],[[2,71],[[8,[[7,[22,6]]]]]],[[85,85],[[28,[65]]]],0,[66,69],0,[[],206],[[],205],[[],69],[[],66],[[],197],[[]],[[],90],[85,85],[85],[4],[4],[4],[4],[4],[4],[4],[4],[4],[4],[4],[69,[[15,[69,164]]]],[69,[[15,[69,164]]]],[69,[[15,[69,164]]]],[69,[[15,[69,164]]]],[[69,70],[[15,[69,164]]]],[69,205],0,[69,[[15,[69,164]]]],[69,85],0,[69,[[15,[69,164]]]],0,[204,15],[204,[[15,[72]]]],[106,15],[106,[[15,[72]]]],[85,[[15,[72]]]],[85,15],[19,15],[19,[[15,[72]]]],[205,15],[205,[[15,[72]]]],[69,[[15,[72]]]],[69,15],[66,[[15,[72]]]],[66,15],[206,[[15,[72]]]],[206,15],[90,[[15,[72]]]],[90,15],[93,[[15,[72]]]],[93,15],[207,[[15,[72]]]],[207,15],[197,15],[197,[[15,[72]]]],[208,[[15,[72]]]],[208,15],[209,[[15,[72]]]],[209,15],[210,[[15,[72]]]],[210,15],[92,15],[92,[[15,[72]]]],[204,[[15,[72]]]],[106,[[15,[72]]]],[19,[[15,[72]]]],[69,[[15,[72]]]],[66,[[15,[72]]]],[206,[[15,[72]]]],[90,[[15,[72]]]],[93,[[15,[72]]]],[197,[[15,[72]]]],[208,[[15,[72]]]],[209,[[15,[72]]]],[210,[[15,[72]]]],[92,[[15,[72]]]],[204,[[15,[72]]]],[106,[[15,[72]]]],[19,[[15,[72]]]],[69,[[15,[72]]]],[66,[[15,[72]]]],[206,[[15,[72]]]],[90,[[15,[72]]]],[93,[[15,[72]]]],[197,[[15,[72]]]],[208,[[15,[72]]]],[209,[[15,[72]]]],[210,[[15,[72]]]],[92,[[15,[72]]]],[204,70],[106,70],[85,70],[19,70],[205,70],[69,70],[66,70],[206,70],[90,70],[93,70],[207,70],[197,70],[208,70],[209,70],[210,70],[92,70],[[69,187],69],[[69,77],69],[[69,205],69],[[69,85],69],[[69,114],69],[[85,85],85],[[85,85]],[[],85],[[],4],[[],4],[[],4],[[],4],[[],4],[[],4],[[],4],[[],4],[[],4],[[],4],[93,[[95,[94]]]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],4],[[],4],[[],4],[[],4],[[],4],[[],4],[[],4],[[],4],[[],4],[[],4],[[],4],[[],15],[[],15],[[],15],[[[109,[204]]],[[15,[204]]]],[[],15],[[[109,[106]]],[[15,[106]]]],[217,[[15,[85]]]],[[],15],[[[109,[19]]],[[15,[19]]]],[[],15],[[],15],[[],15],[[],15],[[[109,[66]]],[[15,[66]]]],[[[109,[206]]],[[15,[206]]]],[[],15],[[],15],[[[109,[90]]],[[15,[90]]]],[[],15],[[[109,[93]]],[[15,[93]]]],[[],15],[[],15],[[],15],[[[109,[208]]],[[15,[208]]]],[[],15],[[[109,[210]]],[[15,[210]]]],[[],15],[[],15],[[],15],[[[109,[92]]],[[15,[92]]]],[[],15],[[],15],[[],15],[[],15],[[],15],[[],15],[[],15],[[],15],[[],15],[[],15],[[],15],[[],15],[[],15],[[],15],[[],15],[[],15],[[],15],[[],15],[[],15],[[],15],[[],15],[[],111],[[],111],[[],111],[[],111],[[],111],[[],111],[[],111],[[],111],[[],111],[[],111],[[],111],[[],111],[[],111],[[],111],[[],111],[[],111],[[],111],[[],111],[[],111],[[],111],[204,70],[106,70],[19,70],[69,70],[66,70],[206,70],[90,70],[93,70],[197,70],[208,70],[209,70],[210,70],[92,70],0,0,[208,[[15,[[23,[50,6]],164]]]],[19,[[15,[164]]]],0,[69,114],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],0,[[],16],[[],16],[[]],[[]],[218,218],[[]],[70],[70],[70],0,[[218,75],[[15,[76]]]],[219,218],[[]],[[],70],0,[[]],[[[7,[6]]],[[7,[16,6]]]],[97,[[97,[16]]]],[98,[[98,[16]]]],0,0,0,[[]],[[],15],[[],15],[[],111],0,0,[[]],0,0,0,0,[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],0,[[]],[[]],[[]],[[]],[[]],[[]],[[168,[170,[[95,[94]]]],83],[[15,[218,164]]]],[168,168],[220,220],[221,221],[[]],[[]],[[]],0,[70],[70],[70],[70],[70],[70],[[],[[15,[168,72]]]],[[],[[15,[168]]]],[[],[[15,[220]]]],[[],[[15,[220,72]]]],[[],[[15,[168,72]]]],[[],[[15,[220,72]]]],[[],[[15,[168,72]]]],[[],[[15,[220,72]]]],[70],[70],[70],[[168,168],73],[[220,220],73],0,0,[[168,75],[[15,[76]]]],[[220,75],[[15,[76]]]],[[221,75],[[15,[76]]]],[[]],[[]],[211,221],[[]],[[[23,[221,6]],85,83,200],[[15,[164]]]],[[[23,[221,6]],184,83,200,[23,[50,6]]],[[15,[164]]]],[[],83],[[],83],[168],[220],[[],70],[[],70],[[],70],0,[[]],[[]],[[]],[[[7,[6]]],[[7,[16,6]]]],[[[7,[6]]],[[7,[16,6]]]],[[[7,[6]]],[[7,[16,6]]]],[97,[[97,[16]]]],[97,[[97,[16]]]],[97,[[97,[16]]]],[98,[[98,[16]]]],[98,[[98,[16]]]],[98,[[98,[16]]]],0,[[168,168],73],[[220,220],73],0,0,0,0,[168,[[15,[72]]]],[168,15],[220,15],[220,[[15,[72]]]],[168,[[15,[72]]]],[220,[[15,[72]]]],[168,[[15,[72]]]],[220,[[15,[72]]]],[168,70],[220,70],[[]],[[]],[[]],[[],15],[[],15],[[],15],[[],15],[[],15],[[],15],0,[[],111],[[],111],[[],111],[168,70],[220,70],0,[[168,201,[170,[[95,[94]]]],83],[[15,[164]]]],0,[[]],[[]],[[]],0,[[],16],[[],16],[[]],[[]],[222,222],[[]],[[203,70,70,50],[[15,[70,164]]]],[70],[70],[70],[[222,75],[[15,[76]]]],[[]],[[70,70,70,50],222],[[],70],[[]],[[[7,[6]]],[[7,[16,6]]]],[98,[[98,[16]]]],0,0,[[]],[[],15],[[],15],0,[[],111],0,0,[[]],0,0,0,0,0,0,0,[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],0,[[]],[[]],[[]],[[]],[[]],[[]],[[178,185],[[15,[164]]]],[[179,198],[[15,[164]]]],[[180,200,83,[23,[50,6]]],[[15,[164]]]],[179,179],[178,178],[[]],[[]],[70],[70],[70],[70],[70],[70],[70],[70],[70],0,0,0,0,0,[[179,75],[[15,[76]]]],[[178,75],[[15,[76]]]],[[]],[[]],[[]],[[],70],[[],70],[[],70],0,0,0,0,0,[[]],[[]],[[]],[[[7,[6]]],[[7,[16,6]]]],[[[7,[6]]],[[7,[16,6]]]],[[[7,[6]]],[[7,[16,6]]]],[97,[[97,[16]]]],[97,[[97,[16]]]],[97,[[97,[16]]]],[98,[[98,[16]]]],[98,[[98,[16]]]],[98,[[98,[16]]]],0,0,0,[[50,85,85,85,9,9,11],179],[[50,85,85,9,[23,[3,6]]],178],[[70,70,[28,[50]],[23,[9,6]]],180],0,0,0,0,0,0,[[180,85],180],[[180,83],180],[[180,85],180],[[]],[[]],0,0,0,0,[[],15],[[],15],[[],15],[[],15],[[],15],[[],15],0,[[],111],[[],111],[[],111],0,0,0,[[]],[[]],[[]],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],17],[88,[[28,[27]]]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[223,88],[88,[[28,[17]]]],[223,223],[224,224],[[]],[[]],[225],[226,[[15,[88]]]],[[],225],[226,[[15,[88]]]],[70],[70],[70],[70],[70],[70],[70],[70],[70],[70],[70],[70],[88,71],[70],[70],[70],[70],[70],[70],[223,[[15,[88]]]],[[223,75],[[15,[76]]]],[[224,75],[[15,[76]]]],[[88,75],[[15,[76]]]],[[88,75],[[15,[76]]]],[[]],[[]],[[]],[[]],[87,88],[[]],[[]],[[],91],[[]],[225],0,[[],70],[[],70],[[],70],[[],70],[[],70],[[],70],[[],28],[225],[[]],[[]],[[]],[[]],[[]],[[]],[[[7,[6]]],[[7,[16,6]]]],[[[7,[6]]],[[7,[16,6]]]],[[[7,[6]]],[[7,[16,6]]]],[[[7,[6]]],[[7,[16,6]]]],[[[7,[6]]],[[7,[16,6]]]],[[[7,[6]]],[[7,[16,6]]]],[97,[[97,[16]]]],[97,[[97,[16]]]],[97,[[97,[16]]]],[97,[[97,[16]]]],[97,[[97,[16]]]],[97,[[97,[16]]]],[98,[[98,[16]]]],[98,[[98,[16]]]],[98,[[98,[16]]]],[98,[[98,[16]]]],[98,[[98,[16]]]],[98,[[98,[16]]]],[223,88],[224,88],[226,99],[226,[[15,[88]]]],[[[227,[64]]],[[15,[226,88]]]],[[],225],0,0,[[],28],[225],[4],[225],[226,[[15,[88]]]],[88,[[28,[17]]]],[226,[[15,[88]]]],0,[[]],[[]],[[],4],[[],15],[[],15],[[],15],[[],15],[[],15],[[],15],[[],15],[[],15],[[],15],[[],15],[[],15],[[],15],[[],111],[[],111],[[],111],[[],111],[[],111],[[],111],[[]],[[]],[[]],[[]],[[]],[[]],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[12,[[15,[26,14]]]],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],17],0,0,0,0,0,0,0,[89,[[28,[27]]]],[[228,18,99,19,207],48],[[228,18,25,19,207],48],[228,83],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],0,[229,89],[230,89],[231,89],[232,89],[233,89],[234,89],[235,89],[89,[[28,[17]]]],[236,236],[229,229],[230,230],[231,231],[232,232],[233,233],[237,237],[234,234],[235,235],[238,238],[26,26],[228,228],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[239,[[15,[21]]]],[70],[70],[70],[70],[70],[70],[70],[70],[70],[70],[70],[70],[70],[70],[70],[70],[70],[70],[70],[70],[70],[70],[70],[70],[70],[70],[70],[70],[70],[70],[89,71],[[],[[15,[238]]]],[[],[[15,[26,72]]]],[[],[[15,[26]]]],[[],[[15,[228]]]],[[],[[15,[26,72]]]],[[],[[15,[26,72]]]],[70],[70],[70],[70],[70],[70],[70],[70],[70],[70],[70],[70],[70],[70],[70],0,[[238,238],73],[[26,26],73],[[228,228],73],[229,[[15,[89]]]],[230,[[15,[89]]]],[231,[[15,[89]]]],[232,[[15,[89]]]],[233,[[15,[89]]]],[234,[[15,[89]]]],[235,[[15,[89]]]],0,[[236,75],[[15,[76]]]],[[229,75],[[15,[76]]]],[[230,75],[[15,[76]]]],[[231,75],[[15,[76]]]],[[232,75],[[15,[76]]]],[[233,75],[[15,[76]]]],[[237,75],[[15,[76]]]],[[234,75],[[15,[76]]]],[[235,75],[[15,[76]]]],[[89,75],[[15,[76]]]],[[89,75],[[15,[76]]]],[[238,75],[[15,[76]]]],[[238,75],[[15,[76]]]],[[26,75],[[15,[76]]]],[[26,75],[[15,[76]]]],[[228,75],[[15,[76]]]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[71,[[15,[26]]]],[[],83],[26],[[],91],[[],91],[[],91],[[]],[[],70],[[],70],[[],70],[[],70],[[],70],[[],70],[[],70],[[],70],[[],70],[[],70],[[],70],[[],70],[[],70],[[],70],[[],70],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[[7,[6]]],[[7,[16,6]]]],[[[7,[6]]],[[7,[16,6]]]],[[[7,[6]]],[[7,[16,6]]]],[[[7,[6]]],[[7,[16,6]]]],[[[7,[6]]],[[7,[16,6]]]],[[[7,[6]]],[[7,[16,6]]]],[[[7,[6]]],[[7,[16,6]]]],[[[7,[6]]],[[7,[16,6]]]],[[[7,[6]]],[[7,[16,6]]]],[[[7,[6]]],[[7,[16,6]]]],[[[7,[6]]],[[7,[16,6]]]],[[[7,[6]]],[[7,[16,6]]]],[[[7,[6]]],[[7,[16,6]]]],[[[7,[6]]],[[7,[16,6]]]],[[[7,[6]]],[[7,[16,6]]]],[97,[[97,[16]]]],[97,[[97,[16]]]],[97,[[97,[16]]]],[97,[[97,[16]]]],[97,[[97,[16]]]],[97,[[97,[16]]]],[97,[[97,[16]]]],[97,[[97,[16]]]],[97,[[97,[16]]]],[97,[[97,[16]]]],[97,[[97,[16]]]],[97,[[97,[16]]]],[97,[[97,[16]]]],[97,[[97,[16]]]],[97,[[97,[16]]]],[98,[[98,[16]]]],[98,[[98,[16]]]],[98,[[98,[16]]]],[98,[[98,[16]]]],[98,[[98,[16]]]],[98,[[98,[16]]]],[98,[[98,[16]]]],[98,[[98,[16]]]],[98,[[98,[16]]]],[98,[[98,[16]]]],[98,[[98,[16]]]],[98,[[98,[16]]]],[98,[[98,[16]]]],[98,[[98,[16]]]],[98,[[98,[16]]]],[229,89],[230,89],[231,89],[232,89],[233,89],[237,89],[234,89],[235,89],[238,73],[239,[[15,[228,21]]]],0,0,0,0,[[[97,[[241,[240]]]],10,242],228],[228,10],0,0,0,0,0,0,0,0,0,0,[[2,71],[[8,[[7,[22,6]]]]]],[228,[[97,[[241,[240]]]]]],0,0,0,[4],[4],[4],0,[239,[[15,[21]]]],0,[238,15],[26,15],[26,[[15,[72]]]],[228,15],[26,[[15,[72]]]],[26,[[15,[72]]]],[26,70],[89,[[28,[17]]]],0,[[228,243,108,107],22],[238,73],0,[[],4],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],4],[[],4],[[],4],[[],15],[[],15],[[],15],[[],15],[[],15],[[],15],[[],15],[[],15],[[],15],[[],15],[[],15],[[],15],[[],15],[[[109,[26]]],[[15,[26]]]],[[],15],[[],15],[[],15],[[],15],[[],15],[[],15],[[],15],[[],15],[[],15],[[],15],[[],15],[[],15],[[],15],[[],15],[[],15],[[],15],[[],15],[[],111],[[],111],[[],111],[[],111],[[],111],[[],111],[[],111],[[],111],[[],111],[[],111],[[],111],[[],111],[[],111],[[],111],[[],111],[26,70],[[239,228],[[15,[21]]]],[[239,228],[[15,[21]]]],0,[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[244,149],73],[244,73],[244,244],[[]],0,[[],[[8,[[7,[22,6]]]]]],[245,[[8,[[7,[22,6]]]]]],[246,[[8,[[7,[22,6]]]]]],[247,[[8,[[7,[22,6]]]]]],[248,[[8,[[7,[22,6]]]]]],[244,[[28,[149]]]],[[],244],[70],[70],[70],[70],[70],[70],[70],[70],[70],[70],[[],[[15,[244]]]],0,0,0,0,[70],[70],[70],[70],[70],0,0,[[244,244],73],[[249,126,149,4],245],0,[[244,75],[[15,[76]]]],[[]],[[]],[[]],[[]],[[]],[[],70],[[],70],[[],70],[[],70],[[],70],0,0,[[]],[[]],[[]],[[]],[[]],[[[7,[6]]],[[7,[16,6]]]],[[[7,[6]]],[[7,[16,6]]]],[[[7,[6]]],[[7,[16,6]]]],[[[7,[6]]],[[7,[16,6]]]],[[[7,[6]]],[[7,[16,6]]]],[97,[[97,[16]]]],[97,[[97,[16]]]],[97,[[97,[16]]]],[97,[[97,[16]]]],[97,[[97,[16]]]],[98,[[98,[16]]]],[98,[[98,[16]]]],[98,[[98,[16]]]],[98,[[98,[16]]]],[98,[[98,[16]]]],[246,127],[[],[[8,[[7,[22,6]]]]]],[245,[[8,[[7,[22,6]]]]]],[246,[[8,[[7,[22,6]]]]]],[247,[[8,[[7,[22,6]]]]]],[248,[[8,[[7,[22,6]]]]]],[[],126],[245,126],[246,126],[247,126],[248,126],0,0,0,[[244,244],73],[[249,126,149,4],245],[[126,127],246],[[126,4],247],[[249,126,149,4],248],[[249,149],[[15,[244,21]]]],0,0,0,[246,137],0,0,0,0,0,[244,15],[[244,249,149],[[15,[21]]]],[[]],[[],15],[[],15],[[],15],[[],15],[[],15],[[],15],[[],15],[[],15],[[],15],[[],15],[[],111],[[],111],[[],111],[[],111],[[],111],0,[[]],[[]],[[]],[[]],[[]],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[[242,83],[[251,[[95,[94]],[250,[[95,[94]]]]]]]],[12,[[15,[242,14]]]],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[]],[[]],[[]],[[]],[[]],[[]],[252,253],[252,253],0,[251,251],[242,242],[[]],[[]],[242,[[254,[[95,[94]]]]]],[70],[70],[70],[70],[70],[70],[[],[[15,[242]]]],[70],[70],[70],[[251,251],73],[[242,242],73],[251,[[15,[255]]]],[242],[242],0,[[251,75],[[15,[76]]]],[[242,75],[[15,[76]]]],[[242,83],[[251,[[256,[[95,[94]]]]]]]],0,[[]],[[]],[[[253,[[95,[94]]]]],242],[[]],[253,[[28,[252]]]],[[254,257],[[28,[252]]]],[242,[[257,[[95,[94]]]]]],[[],83],[[242,83],[[251,[[256,[[95,[94]]]]]]]],[251],[242,50],0,[[],70],[[],70],[[],70],[[]],[[]],[[]],[[[7,[6]]],[[7,[16,6]]]],[[[7,[6]]],[[7,[16,6]]]],[[[7,[6]]],[[7,[16,6]]]],[97,[[97,[16]]]],[97,[[97,[16]]]],[97,[[97,[16]]]],[98,[[98,[16]]]],[98,[[98,[16]]]],[98,[[98,[16]]]],[252],[251,251],[[251,251],73],[[242,242],73],[50,[[28,[252]]]],[50,[[28,[242]]]],[242,83],0,0,[252],[[242,[95,[94]]]],[[242,83,256],[[15,[28]]]],[[[254,[[95,[94]]]],257],[[28,[242]]]],[242,15],[[[253,[[95,[94]]]]],242],[[]],[[]],0,[[],15],[[],15],[[],15],[[],15],[[],15],[[],15],[[],111],[[],111],[[],111],[[]],[[]],[[]],0,0,0,[[],16],[[],16],[[]],[[]],[104,[[15,[21]]]],[104,22],[70],[70],[70],[104,64],[104,73],[[]],[[],70],[[]],[[[7,[6]]],[[7,[16,6]]]],[97,[[97,[16]]]],[98,[[98,[16]]]],[104,143],[104],0,0,[105,22],0,[104,[[15,[21]]]],0,[[],15],[[],15],[[],111],[[]],0,0,[[],16],[[],16],[[]],[[]],[258,[[8,[[7,[22]]]]]],[70],[70],[70],[[258,[74,[259]],28],[[8,[[7,[22]]]]]],[[]],[[258,[130,[71]]],22],[[258,10],[[8,[[7,[22]]]]]],[[258,83,260,90],[[8,[[7,[22]]]]]],[[258,25],[[8,[[7,[22]]]]]],[[],70],[[]],[[[7,[6]]],[[7,[16,6]]]],[97,[[97,[16]]]],[98,[[98,[16]]]],[[261,129,129,129],22],[[262,[130,[71]]],22],0,[[258,9],[[8,[[7,[22]]]]]],[[258,263,[74,[259]]],[[8,[[7,[22]]]]]],[[258,10,[28,[10]]],[[8,[[7,[22]]]]]],[[],15],[[],15],[[],111],0,0,[[]],[258,22],0,0,0,[[],16],[[],16],[123,127],[[]],[[]],[127,127],[[]],[70],[70],[70],[[]],[[],70],[[],127],[[]],[[[7,[6]]],[[7,[16,6]]]],[97,[[97,[16]]]],[98,[[98,[16]]]],[127,22],[[127,71],22],[[]],[[],15],[[],15],[[],111],[[]],0,0,0,0,0,[264,1],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[264,19],[264,66],0,[[]],[[]],[[]],[[]],[[]],[[]],[264,264],[[]],[265,[[15,[21]]]],[[265,83,197,90],[[15,[266,21]]]],[264,[[68,[67]]]],0,[[265,83],[[15,[264,21]]]],[[265,90],[[15,[264,21]]]],[70],[266,264],[70],[70],[266,264],[70],[70],[70],[[],[[15,[264]]]],[70],[70],[70],[[264,75],[[15,[76]]]],[264,207],[[]],[[]],[[]],[[265,83],[[15,[264,21]]]],[[265,83],[[15,[266,21]]]],[[265,19,25,207],[[28,[99]]]],[[265,19,25,207,1,83],[[15,[[28,[264]],21]]]],0,[[],70],[[],70],[[],70],[[]],[[]],[[]],[[[7,[6]]],[[7,[16,6]]]],[[[7,[6]]],[[7,[16,6]]]],[[[7,[6]]],[[7,[16,6]]]],[97,[[97,[16]]]],[97,[[97,[16]]]],[97,[[97,[16]]]],[98,[[98,[16]]]],[98,[[98,[16]]]],[98,[[98,[16]]]],[265,99],[264,[[68,[67]]]],0,[[105,64,83],[[15,[265,21]]]],[264,90],0,0,[[264,83],73],[264,49],0,[264,197],[265,[[15,[21]]]],0,[266,[[15,[264,21]]]],[264,15],0,0,[[]],[[],15],[[],15],[[],15],[[],15],[[],15],[[],15],[[],111],[[],111],[[],111],[264,83],0,[[]],[[]],[[]],[[265,90],[[15,[264,21]]]],[[265,90],[[15,[266,21]]]],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[[],16],[[],16],[[],16],[[],16],0,[[]],[[]],[[]],[[]],0,[172,172],[173,173],[[]],[[]],[70],[70],[70],[70],[70],[70],[[172,172],73],[[173,173],73],[[172,75],[[15,[76]]]],[[173,75],[[15,[76]]]],[[]],[[]],[[],70],[[],70],0,[[]],[[]],[[[7,[6]]],[[7,[16,6]]]],[[[7,[6]]],[[7,[16,6]]]],[97,[[97,[16]]]],[97,[[97,[16]]]],[98,[[98,[16]]]],[98,[[98,[16]]]],[[],50],[[],4],[[172,172],73],0,[[],70],[[],125],[[]],[[]],0,[[],15],[[],15],[[],15],[[],15],[[],111],[[],111],0,[[]],[[]],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[[267,108],15],[12,[[15,[268,14]]]],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],17],[269,[[28,[27]]]],[268,83],0,[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[269,[[28,[17]]]],[270,270],[269,269],[267,267],[268,268],[271,271],[[]],[[]],[[]],[[]],[[]],[268],[[],268],[70],[70],[70],[70],[70],[70],[70],[70],[70],[70],[269,71],[[],[[15,[270]]]],[[],[[15,[269]]]],[[],[[15,[267]]]],[[],[[15,[268]]]],[70],[70],[70],[70],[70],[[270,270],73],[[267,267],73],[[268,268],73],[[270,75],[[15,[76]]]],[[270,75],[[15,[76]]]],[[269,75],[[15,[76]]]],[[269,75],[[15,[76]]]],[[267,75],[[15,[76]]]],[[268,75],[[15,[76]]]],[[271,75],[[15,[76]]]],[[],270],[[]],[[]],[[]],[[]],[[]],[[],83],[[],83],[270],[267],[[],91],[[],91],[[]],[267,83],[[267,70],108],0,[[],70],[[],70],[[],70],[[],70],[[],70],[[]],[[]],[[]],[[]],[[]],[[[7,[6]]],[[7,[16,6]]]],[[[7,[6]]],[[7,[16,6]]]],[[[7,[6]]],[[7,[16,6]]]],[[[7,[6]]],[[7,[16,6]]]],[[[7,[6]]],[[7,[16,6]]]],[97,[[97,[16]]]],[97,[[97,[16]]]],[97,[[97,[16]]]],[97,[[97,[16]]]],[97,[[97,[16]]]],[98,[[98,[16]]]],[98,[[98,[16]]]],[98,[[98,[16]]]],[98,[[98,[16]]]],[98,[[98,[16]]]],[267],[267],[269,73],[267,73],[267,99],[267,70],[[],50],[[],270],[[],4],[[267,267],73],[[268,268],73],[136,269],[268],[[171,169],[[15,[172,173]]]],[[171,171,168],[[15,[172,173]]]],[[],270],[[],70],0,0,[4],[4],[[],270],[270,15],[269,15],[267,15],[268,15],[269,[[28,[17]]]],[[],125],[[]],[[]],[[]],[[]],[[]],[[],4],[[],4],0,[[],15],[[],15],[[],15],[[],15],[[],15],[[],15],[[],15],[[],15],[[],15],[[],15],[267,[[23,[108,6]]]],[[],111],[[],111],[[],111],[[],111],[[],111],[[],270],[[],270],[268,[[15,[269]]]],[[]],[[]],[[]],[[]],[[]],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[[],15],[[],83],[[108,[23,[6]]]],[[]],[[]],[[]],[[],[[23,[90,6]]]],[[],73],[[],73],[[]],[[],70],[[],50],[[]],[[],15],[[],4],[136],[[]],[[171,171],[[15,[172,173]]]],[[],[[23,[93,6]]]],[[],70],[[],[[28,[[23,[197,6]]]]]],[[],[[23,[6]]]],[[]],[[],70],[[]],[[[23,[6]]]],[[],125],[[],[[23,[6]]]],[[]],[[]],[[],15],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[272,272],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[74,19],0,0,[74,28],0,0,[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[272,272],[273,273],[74,74],[107,107],[[]],[[]],[[]],[274,[[15,[21]]]],[[274,26,107],[[15,[272,21]]]],[74,68],0,[[274,26],[[15,[74,21]]]],[272,74],[70],[70],[70],[70],[70],[272,74],[70],[70],[70],[70],[70],[[],[[15,[273]]]],[[],[[15,[74]]]],[[],[[15,[107]]]],[70],[70],[70],[70],[70],[[273,273],73],[[74,74],73],[[107,107],73],0,[74,28],0,0,[[273,75],[[15,[76]]]],[[74,75],[[15,[76]]]],[[107,75],[[15,[76]]]],[[]],[[]],[[]],[[]],[[]],[[274,26],[[15,[74,21]]]],[[274,26],[[15,[272,21]]]],[[],70],[[],70],[[],70],[[],70],[[],70],[74,23],0,0,[[]],[[]],[[]],[[]],[[]],[[[7,[6]]],[[7,[16,6]]]],[[[7,[6]]],[[7,[16,6]]]],[[[7,[6]]],[[7,[16,6]]]],[[[7,[6]]],[[7,[16,6]]]],[[[7,[6]]],[[7,[16,6]]]],[97,[[97,[16]]]],[97,[[97,[16]]]],[97,[[97,[16]]]],[97,[[97,[16]]]],[97,[[97,[16]]]],[98,[[98,[16]]]],[98,[[98,[16]]]],[98,[[98,[16]]]],[98,[[98,[16]]]],[98,[[98,[16]]]],[274,99],[74],0,0,[74,[[28,[273]]]],0,[74,[[68,[67]]]],0,[[105,64,83],[[15,[274,21]]]],[74,23],0,0,[74,275],0,[74,23],0,0,[[274,83],[[15,[[23,[74,6]],21]]]],[[272,83],272],[274,[[15,[21]]]],[272,[[15,[74,21]]]],[74,23],0,0,[273,15],[74,15],[107,15],[[272,238],272],0,0,0,[74,238],0,0,0,0,0,[74,[[28,[83]]]],0,0,[[]],[[]],[[]],0,[[],15],[[],15],[[],15],[[],15],[[],15],[[],15],[[],15],[[],15],[[],15],[[],15],[[],111],[[],111],[[],111],[[],111],[[],111],[74,26],0,0,[[]],[[]],[[]],[[]],[[]],[[272,1],272],[[272,1],272],[[274,83],[[15,[74,21]]]],[[274,83],[[15,[272,21]]]],[[274,83],[[15,[99,21]]]]],"p":[[3,"RecordAmount"],[3,"Keystore"],[3,"FreezerKeyPair"],[3,"String"],[8,"SendFuture"],[3,"Global"],[3,"Box"],[3,"Pin"],[3,"UserKeyPair"],[3,"EventIndex"],[3,"ViewerKeyPair"],[3,"Unstructured"],[3,"Icon"],[4,"Error"],[4,"Result"],[8,"Any"],[8,"Error"],[3,"KeystoreStores"],[3,"AssetCode"],[3,"Asset"],[4,"KeystoreError"],[8,"Future"],[3,"Vec"],[3,"Assets"],[3,"UserAddress"],[3,"TransactionUID"],[3,"Backtrace"],[4,"Option"],[3,"UndefinedAssetSnafu"],[3,"NullifierAlreadyPublishedSnafu"],[3,"BadMerkleProofSnafu"],[3,"TimedOutSnafu"],[3,"CancelledSnafu"],[3,"InvalidAddressSnafu"],[3,"InconsistentAssetSnafu"],[3,"AssetNotViewableSnafu"],[3,"AssetNotFreezableSnafu"],[3,"AssetNotMintableSnafu"],[3,"NoSuchAccountSnafu"],[3,"CannotDecryptMemoSnafu"],[3,"UserKeyExistsSnafu"],[3,"AssetVerificationSnafu"],[3,"FailedSnafu"],[3,"InvalidFreezerKeySnafu"],[3,"InvalidViewerKeySnafu"],[3,"ScanNotFoundSnafu"],[8,"Into"],[3,"U256"],[3,"UserPubKey"],[15,"u8"],[3,"AssetEditor"],[3,"MintInfo"],[3,"InvalidBlockSnafu"],[3,"CryptoSnafu"],[3,"ClientConfigSnafu"],[3,"PersistenceSnafu"],[3,"IoSnafu"],[3,"BincodeSnafu"],[3,"EncryptionSnafu"],[3,"MnemonicSnafu"],[3,"KeySnafu"],[3,"KeyValueStoreSnafu"],[3,"TransactionSnafu"],[3,"EncryptingResourceAdapter"],[4,"Ordering"],[3,"AssetDefinition"],[3,"Local"],[3,"DateTime"],[3,"AssetPolicy"],[15,"usize"],[15,"str"],[4,"SerializationError"],[15,"bool"],[3,"Transaction"],[3,"Formatter"],[3,"Error"],[3,"FreezerPubKey"],[3,"Accounts"],[3,"Rgba"],[3,"ImageBuffer"],[15,"u32"],[15,"i32"],[15,"u64"],[15,"u128"],[3,"Amount"],[4,"ErrorKind"],[4,"PersistenceError"],[4,"KeyValueStoreError"],[4,"TransactionError"],[3,"Nullifier"],[3,"IndentedSection"],[3,"ReceiverMemo"],[3,"RecordCommitment"],[3,"FrParameters"],[3,"Fp256"],[3,"MerklePath"],[3,"Arc"],[3,"Rc"],[8,"Iterator"],[8,"BufRead"],[8,"Seek"],[4,"ImageFormat"],[4,"ImageError"],[3,"MetaStore"],[3,"AtomicStoreLoader"],[3,"AssetCodeSeed"],[3,"TransactionParams"],[4,"TransactionNote"],[3,"TaggedBlob"],[3,"BigInt"],[3,"TypeId"],[3,"VerKey"],[3,"VerifiedAssetLibrary"],[3,"ViewerPubKey"],[8,"Write"],[3,"Account"],[3,"AccountEditor"],[3,"BackgroundKeyScan"],[3,"EdwardsParameters"],[3,"KeyPair"],[3,"CLIMerklePath"],[3,"Command"],[3,"SharedIO"],[3,"ListItem"],[3,"UniversalSrs"],[3,"PathBuf"],[4,"Reader"],[3,"Keystore"],[3,"Url"],[8,"AsRef"],[3,"Command"],[8,"Fn"],[3,"CliClient"],[3,"Validator"],[3,"Cdn"],[8,"Display"],[3,"Path"],[15,"u16"],[4,"Error"],[3,"Cipher"],[3,"Decrypter"],[3,"CipherText"],[3,"KeyTree"],[3,"CanonicalBytes"],[4,"EventSource"],[4,"LedgerEvent"],[3,"Key"],[3,"Secret"],[3,"Mnemonic"],[4,"Error"],[4,"Language"],[4,"Error"],[4,"Count"],[3,"Tee"],[3,"Error"],[8,"Read"],[8,"Send"],[15,"i16"],[15,"f64"],[15,"i128"],[15,"i64"],[15,"i8"],[15,"f32"],[4,"TxnApiError"],[4,"TransactionVerifyingKey"],[3,"Commitment"],[3,"FreezeNote"],[3,"TransferNote"],[3,"MintNote"],[3,"NodeValue"],[3,"HashMap"],[3,"ViewingMemoOpening"],[4,"ViewingError"],[3,"Signature"],[3,"Parameters"],[3,"Bn"],[3,"Proof"],[3,"FreezeParamsBuilder"],[3,"MintParamsBuilder"],[3,"TransferParamsBuilder"],[4,"DeserializationError"],[3,"FreezeAuxInfo"],[3,"FreezeNoteInput"],[3,"TxnFeeInfo"],[3,"FreezeProvingKey"],[3,"FreezeVerifyingKey"],[3,"CredIssuerPubKey"],[3,"CredIssuerKeyPair"],[3,"EncKey"],[3,"Ciphertext"],[3,"ArbitraryUserAddress"],[3,"ArbitraryUserKeyPair"],[3,"ArbitraryViewerKeyPair"],[3,"ArbitraryFreezerKeyPair"],[3,"ViewableData"],[3,"MintAuxInfo"],[3,"RecordOpening"],[3,"MintProvingKey"],[3,"MintVerifyingKey"],[3,"TransferProvingKey"],[3,"TransferVerifyingKey"],[3,"VerifyingKey"],[4,"NoteType"],[3,"InternalAssetCode"],[3,"RevealMap"],[3,"BlindFactor"],[4,"FreezeFlag"],[3,"IdentityAttribute"],[3,"ExpirableCredential"],[3,"ViewableMemo"],[3,"FeeInput"],[3,"CommittableAmount"],[3,"ArbitraryNullifier"],[3,"ArbitraryRecordOpening"],[3,"ArbitraryReceiverMemo"],[3,"Ciphertext"],[3,"U256"],[3,"TransferPublicInput"],[3,"TransferPublicInput"],[3,"AuxInfo"],[3,"TransferNoteInput"],[3,"TxnsParams"],[3,"KeyNotFoundSnafu"],[3,"PersistenceSnafu"],[3,"PersistableMap"],[3,"KeyValueStore"],[3,"AppendLog"],[3,"LedgerState"],[3,"InsufficientBalanceSnafu"],[3,"FragmentationSnafu"],[3,"TooManyOutputsSnafu"],[3,"InvalidSizeSnafu"],[3,"NoFitKeySnafu"],[3,"InvalidViewerKeySnafu"],[3,"InvalidFreezerKeySnafu"],[4,"ConvertRecordAmountError"],[3,"CryptoSnafu"],[4,"TransactionStatus"],[3,"LedgerStates"],[3,"OrderByOutputs"],[3,"ProverKeySet"],[3,"LWMerkleTree"],[3,"KeystoreModel"],[3,"MnemonicPasswordLogin"],[3,"CreateLoader"],[3,"InteractiveLoader"],[3,"LoginLoader"],[3,"RecoveryLoader"],[3,"ChaCha20Rng"],[3,"AccMemberWitness"],[4,"LookupResult"],[3,"FilledMTBuilder"],[3,"MerkleTree"],[3,"MerkleCommitment"],[4,"PrimitivesError"],[3,"MerkleLeafProof"],[4,"MerkleFrontier"],[3,"NetworkBackend"],[3,"EspressoLedger"],[4,"SetMerkleTree"],[6,"UniversalParam"],[3,"Client"],[3,"ElaboratedTransaction"],[3,"Record"],[3,"Records"],[3,"RecordEditor"],[3,"Block"],[3,"Validator"],[4,"ValidationError"],[4,"TransactionKind"],[3,"LedgerWithHeight"],[3,"TransactionEditor"],[3,"SignedMemos"],[3,"Transactions"],[3,"HashSet"],[8,"KeystoreBackend"],[13,"InvalidAddress"],[13,"NoSuchAccount"],[13,"UndefinedAsset"],[13,"AssetNotViewable"],[13,"AssetNotFreezable"],[13,"AssetNotMintable"],[13,"BadMerkleProof"],[13,"InconsistentAsset"],[13,"InvalidFreezerKey"],[13,"InvalidViewerKey"],[13,"Failed"],[13,"NullifierAlreadyPublished"],[13,"UserKeyExists"],[13,"InvalidBlock"],[13,"CryptoError"],[13,"ClientConfigError"],[13,"PersistenceError"],[13,"IoError"],[13,"BincodeError"],[13,"EncryptionError"],[13,"MnemonicError"],[13,"KeyError"],[13,"KeyValueStoreError"],[13,"TransactionError"],[8,"KeyPair"],[8,"CLI"],[4,"KeyType"],[8,"CLIArgs"],[8,"Listable"],[8,"CLIInput"],[3,"OpenKeystore"],[13,"DataTooLong"],[13,"ArgonError"],[13,"InvalidHmac"],[13,"Commit"],[13,"Reject"],[13,"Memos"],[13,"Transfer"],[13,"Mint"],[13,"Freeze"],[13,"Transfer"],[13,"Mint"],[13,"Freeze"],[13,"ArkSerializationError"],[13,"SerdeError"],[13,"FailedPrimitives"],[13,"FailedSnark"],[13,"FailedAssetCodeVerification"],[13,"FailedCredentialCreation"],[13,"FailedCredentialVerification"],[13,"FailedTransactionVerification"],[13,"FailedSerialization"],[13,"FailedReceiverMemoSignature"],[13,"FailedTxMemoSignature"],[13,"FailedViewableMemoDecryption"],[13,"IoError"],[13,"InvalidParameter"],[13,"DeserializationError"],[13,"IncorrectFee"],[13,"ParametersGenerationError"],[13,"InternalError"],[4,"IndexChange"],[8,"Index"],[13,"Add"],[13,"Remove"],[13,"Update"],[13,"PersistenceError"],[3,"TransferSpec"],[13,"InsufficientBalance"],[13,"Fragmentation"],[13,"TooManyOutputs"],[13,"InvalidSize"],[13,"InvalidViewerKey"],[13,"InvalidFreezerKey"],[13,"NoFitKey"],[13,"CryptoError"],[8,"KeystoreLoader"],[13,"Ok"],[13,"Interactive"],[13,"Automated"],[8,"Ledger"],[13,"Failed"],[8,"Validator"],[8,"Block"],[8,"Transaction"],[8,"NullifierSet"],[8,"TransactionKind"],[8,"ValidationError"]]},\
"espresso_core":{"doc":"","t":[2,2,0,0,0,0,0,0,0,0,0,0,0,0,0,0,13,13,13,3,13,13,4,13,13,11,11,11,11,12,12,11,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,11,12,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,3,11,11,11,11,11,12,11,11,11,11,11,11,11,11,11,11,11,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,11,11,11,11,11,11,13,13,13,13,3,4,4,13,13,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,5,11,11,11,11,11,11,12,11,11,11,11,11,11,11,11,11,11,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,12,12,12,12,12,12,12,12,12,13,3,4,13,13,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,17,3,11,11,12,11,11,11,11,11,11,11,11,11,11,11,11,11,12,11,11,11,11,11,11,11,11,12,12,13,17,17,13,13,13,3,13,13,13,4,3,4,3,3,4,3,3,3,13,17,4,3,13,13,13,13,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,5,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,12,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,11,11,12,12,12,12,12,12,11,11,11,11,11,11,11,11,12,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,12,12,12,12,12,12,12,12,12,3,3,3,6,6,3,6,6,6,3,3,13,3,13,3,13,3,13,3,13,3,4,3,13,3,13,3,13,3,6,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,0,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,5,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,0,11,11,11,11,11,11,12,11,11,11,11,11,12,11,11,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,11,12,12,11,12,12,12,11,11,12,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,11,11,11,11,11,11,11,11,11,11,12,12,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,12,12,12,12,3,5,14,5,5,5,5,5,13,13,13,13,13,13,3,4,4,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,11,11,11,11,11,11,11,11,11,11,0,5,11,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,12,12,12,12,12,12,12,12,12,12,13,3,3,13,3,13,4,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,5,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,5,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,5,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,12,12,12,12,12,12,12,12,3,3,6,3,6,6,6,6,3,6,3,3,3,6,3,6,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,12,12,12,12,12,12,12,12,3,13,3,13,3,13,3,13,3,13,3,13,3,13,3,13,3,13,3,13,3,3,13,13,3,13,3,3,13,3,3,3,3,4,4,13,3,2,13,13,18,13,3,13,3,13,3,2,2,13,3,13,3,3,6,3,3,3,13,13,13,3,13,3,3,13,3,13,3,13,3,4,3,3,6,3,11,11,11,11,5,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,11,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,0,11,11,12,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,11,11,11,11,11,11,11,11,11,11,11,11,12,11,11,12,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,12,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,12,11,11,12,12,12,11,11,11,11,11,11,11,11,11,12,11,11,12,12,12,12,12,12,12,12,12,11,11,12,12,12,12,0,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,0,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,12,12,12,12,12,12,12,12,12,12,12,3,5,14,5,5,5,5,5,12,12,3,3,3,11,11,11,11,11,11,11,11,11,11,11,11,12,11,11,11,11,11,11,12,11,11,11,11,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,12,12,12,12,12,11,12,12,11,11,11,11,11,11,11,11,11,11,11,12,11,11,11,11,12,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,18,3,3,3,13,4,13,3,11,11,11,11,11,11,11,11,11,11,11,11,12,12,12,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,5,5,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,11,11,11,11,11,11,11,11,11,11,11,11,12,11,11,11,11,11,11,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,12,12,12,11,11,11,12,12,12,12,12,12,12,12,12,11,12,12,11,11,11,11,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,11,11,11,12,12,11,11,11,11,11,12,12,12,12,12,12,12,16,16,8,16,16,16,0,10,10,10,10,10,10,0,13,3,4,8,13,13,13,12,11,11,11,11,11,11,11,11,11,11,11,11,11,10,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,12,12,12,12,12,12,12,5,5,5,5,5,5,5,17,3,17,17,3,3,12,12,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,0,12,3,11,11,11,11,11,11,5,11,14,5,11,11,11,11,11,11,11,11,5,11,5,11,11,11,11],"n":["StakingKey","StakingPrivKey","full_persistence","genesis","kv_merkle_tree","ledger","lw_persistence","merkle_tree","reward","set_merkle_tree","stake_table","state","testing","tree_hash","universal_params","util","BlockHistory","BlockUids","Events","FullPersistence","Memos","NullifierSnapshots","Resource","RmtLeavesFull","StateHistory","as_any","as_any","as_any_mut","as_any_mut","atomic_store","block_history","block_iter","block_uids","block_uids_iter","borrow","borrow","borrow_mut","borrow_mut","clone","clone_into","commit","commit_accepted","commit_events","deref","deref","deref_mut","deref_mut","drop","drop","eq","events","events_iter","fmt","fmt","from","from","get_latest_nullifier_set","init","init","into","into","into_any","into_any","into_any_arc","into_any_arc","into_any_rc","into_any_rc","new","nullifier_set_iter","nullifier_snapshots","rmt_leaf_iter","rmt_leaves_full","state_history","state_iter","store_block_uids","store_event","store_for_commit","store_initial","store_nullifier_set","to_owned","try_from","try_from","try_into","try_into","type_id","type_id","vzip","vzip","GenesisNote","arbitrary","as_any","as_any_mut","borrow","borrow_mut","chain","clone","clone_into","commit","deref","deref_mut","deserialize","deserialize","deserialize_unchecked","deserialize_uncompressed","drop","eq","faucet_records","fmt","from","get_hash","hash","init","into","into_any","into_any_arc","into_any_rc","ne","new","output_commitments","output_len","output_openings","record_merkle_tree","serialize","serialize","serialize_unchecked","serialize_uncompressed","serialized_size","stake_table","to_owned","try_from","try_into","type_id","uncompressed_size","vzip","Branch","EmptySubtree","EmptySubtree","ForgottenSubtree","KVMerkleProof","KVMerkleTerminalNode","KVMerkleTree","Leaf","Leaf","as_any","as_any","as_any","as_any_mut","as_any_mut","as_any_mut","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","check","clone","clone","clone","clone_into","clone_into","clone_into","default","deref","deref","deref","deref_mut","deref_mut","deref_mut","deserialize","deserialize","deserialize","deserialize","deserialize","drop","drop","drop","eq","eq","eq","fmt","fmt","fmt","fmt","forget","from","from","from","from_str","get_hash","get_hash","get_leaf","hash","hash","hash","header","init","init","init","insert","into","into","into","into_any","into_any","into_any","into_any_arc","into_any_arc","into_any_arc","into_any_rc","into_any_rc","into_any_rc","kv_merkle_lw_multi_insert","lookup","multi_insert","ne","ne","new_branch","new_leaf","path","remember","serialize","serialize","serialize","serialize","serialize","serialized_size","serialized_size","sparse","tag","terminal_node","to_owned","to_owned","to_owned","to_string","try_from","try_from","try_from","try_from","try_into","try_into","try_into","type_id","type_id","type_id","value","vzip","vzip","vzip","height","key","value","children","digest","digest","digest","height","key","value","CAP","EspressoLedger","EspressoTransactionKind","GENESIS","REWARD","as_any","as_any","as_any_mut","as_any_mut","borrow","borrow","borrow_mut","borrow_mut","clone","clone","clone_into","clone_into","default","deref","deref","deref_mut","deref_mut","deserialize","drop","drop","eq","fmt","fmt","fmt","freeze","from","from","get_hash","hash","header","init","init","into","into","into_any","into_any","into_any_arc","into_any_arc","into_any_rc","into_any_rc","merkle_height","mint","name","ne","receive","record_root_history","send","serialize","srs","to_owned","to_owned","to_string","try_from","try_from","try_into","try_into","type_id","type_id","unfreeze","unknown","vzip","vzip","0","LEAF_STORAGE_COUNT","LWPersistence","as_any","as_any_mut","atomic_store","borrow","borrow_mut","deref","deref_mut","drop","fmt","from","init","into","into_any","into_any_arc","into_any_rc","launch","leaf_snapshot","load","load_latest_leaf","new","store_latest_leaf","try_from","try_into","type_id","vzip","0","0","Branch","DOM_SEP_INT_NODE","DOM_SEP_LEAF_NODE","Empty","EmptyLeaf","EmptySubtree","FilledMTBuilder","ForgottenSubtree","Leaf","Left","LookupResult","MerkleCommitment","MerkleFrontier","MerkleLeaf","MerkleLeafProof","MerkleNode","MerklePath","MerklePathNode","MerkleTree","Middle","NODE_VALUE_LEN","NodePos","NodeValue","NotInMemory","Ok","Proof","Right","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","build","build_pruned","build_up","capacity","capacity","check_proof","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","commitment","default","default","default","default","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize_unchecked","deserialize_unchecked","deserialize_unchecked","deserialize_unchecked","deserialize_unchecked","deserialize_uncompressed","deserialize_uncompressed","deserialize_uncompressed","deserialize_uncompressed","deserialize_uncompressed","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","empty_node_value","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","expect_ok","filled_root","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","forget","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from_existing","from_frontier","from_str","from_str","frontier","get_hash","get_hash","get_hash","get_hash","get_hash","get_hash","get_hash","get_hash","get_hash","get_hash","get_hash","get_leaf","get_leaf","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","header","header","height","height","height","height","init","init","init","init","init","init","init","init","init","init","init","init","insert_at_right","internal_forget","internal_remember","into","into","into","into","into","into","into","into","into","into","into","into","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_frontier_and_commitment","is_empty_subtree","leaf","map","ne","ne","ne","ne","ne","ne","ne","ne","ne","ne","new","new","new","new","new","new_branch","new_leaf","nodes","non_empty","num_leaves","num_leaves","num_leaves","num_leaves","path","peaks","pos","prune_node","push","push","rand","rebuild_to_root","remember","restore_from_frontier","roll_up","root","root_value","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize_unchecked","serialize_unchecked","serialize_unchecked","serialize_unchecked","serialize_unchecked","serialize_uncompressed","serialize_uncompressed","serialize_uncompressed","serialize_uncompressed","serialize_uncompressed","serialized_size","serialized_size","serialized_size","serialized_size","serialized_size","serialized_size","serialized_size","sibling1","sibling2","tag","tag","take_frontiers","to_bytes","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_string","to_string","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","uncompressed_size","uncompressed_size","uncompressed_size","uncompressed_size","uncompressed_size","value","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","0","1","0","height","children","elem","uid","value","value","value","CollectRewardBody","CollectRewardNote","CollectedRewards","CollectedRewardsDigest","CollectedRewardsHash","CollectedRewardsHistory","CollectedRewardsProof","CollectedRewardsProofs","CollectedRewardsSet","CollectedRewardsTag","EligibilityWitness","EmptyStakeTableCommitmentSet","EmptyStakeTableCommitmentSetSnafu","InvalidViewNumber","InvalidViewNumberSnafu","KeyNotEligible","KeyNotEligibleSnafu","ProofNotInMemory","ProofNotInMemorySnafu","RewardAlreadyCollected","RewardAlreadyCollectedSnafu","RewardError","RewardNoteProofs","SerializationError","SerializationSnafu","SignatureError","SignatureSnafu","StakingKeyNotFound","StakingKeyNotFoundSnafu","VrfProof","append_block","apply_block","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_error_source","backtrace","blind_factor","body","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","build","build","build","build","build","build","build","build","canonical","cap_address","cause","check_uncollected_rewards","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","commit","commitment_diversifier","compute_reward_amount","current","current_root","default","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","description","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize_unchecked","deserialize_unchecked","deserialize_unchecked","deserialize_unchecked","deserialize_unchecked","deserialize_uncompressed","deserialize_uncompressed","deserialize_uncompressed","deserialize_uncompressed","deserialize_uncompressed","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","eligibility_witness","eq","eq","eq","eq","eq","eq","eq","fail","fail","fail","fail","fail","fail","fail","fail","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from_str","generate","generate","get_hash","get_hash","get_hash","get_hash","get_hash","get_hash","get_uncollected_reward_proof","hash","hash","hash","hash","hash","hash","header","header","history","in_current_span","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_error","into_error","into_error","into_error","into_error","into_error","into_error","into_error","leaf_proof_pos","mock_eligibility","ne","ne","ne","ne","ne","ne","num_seats","num_votes","output_commitment","output_commitment","output_opening","output_opening","reason","recent_collected_rewards","reward_amount","reward_amount","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize_unchecked","serialize_unchecked","serialize_unchecked","serialize_unchecked","serialize_unchecked","serialize_uncompressed","serialize_uncompressed","serialize_uncompressed","serialize_uncompressed","serialize_uncompressed","serialized_size","serialized_size","serialized_size","serialized_size","serialized_size","signature","source","stake_amount_proof","stake_tables_set_leaf_proof","staking_key","staking_key","staking_key","staking_key","tag","time","time","time","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_string","to_string","total_stake","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","uncollected_reward_proof","uncompressed_size","uncompressed_size","uncompressed_size","uncompressed_size","uncompressed_size","update_proofs","verify","verify","verify","verify","view","view_number","vrf_proof","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","reason","staking_key","view","view_number","0","CanonicalBytes","deserialize","deserialize_canonical_bytes","deserialize_unchecked","serialize","serialize_unchecked","check_eligibility","prove_eligibility","Branch","EmptySubtree","EmptySubtree","ForgottenSubtree","Leaf","Leaf","SetMerkleProof","SetMerkleTerminalNode","SetMerkleTree","arbitrary","as_any","as_any","as_any","as_any_mut","as_any_mut","as_any_mut","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","check","clone","clone","clone","clone_into","clone_into","clone_into","contains","default","deref","deref","deref","deref_mut","deref_mut","deref_mut","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize_unchecked","deserialize_uncompressed","drop","drop","drop","eq","eq","eq","fmt","fmt","fmt","forget","from","from","from","get_hash","get_hash","hash","hash","hash","init","init","init","insert","into","into","into","into_any","into_any","into_any","into_any_arc","into_any_arc","into_any_arc","into_any_rc","into_any_rc","into_any_rc","multi_insert","multi_insert","ne","ne","new_branch","new_leaf","path","remember","serialize","serialize","serialize","serialize","serialize","serialize_unchecked","serialize_uncompressed","serialized_size","serialized_size","set_hash","set_merkle_lw_multi_insert","sparse","terminal_node","to_owned","to_owned","to_owned","try_from","try_from","try_from","try_into","try_into","try_into","type_id","type_id","type_id","uncompressed_size","value","vzip","vzip","vzip","elem","height","elem","height","l","r","value","value","value","0","0","Branch","EMPTY_HASH","Elem","EmptySubtree","Hash","Leaf","SetMerkleTreeNode","__private_field","as_any","as_any","as_any","as_any","as_any_mut","as_any_mut","as_any_mut","as_any_mut","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","branch_hash","clone","clone","clone_into","clone_into","commit","commit","deref","deref","deref","deref","deref","deref_mut","deref_mut","deref_mut","deref_mut","deserialize","deserialize","deserialize","deserialize_unchecked","deserialize_unchecked","deserialize_uncompressed","deserialize_uncompressed","drop","drop","drop","drop","elem_bits","eq","eq","fmt","fmt","fmt","from","from","from","from","from_str","get_hash","get_hash","hash","hash","hash","header","init","init","init","init","into","into","into","into","into_any","into_any","into_any","into_any","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","leaf_hash","ne","ne","serialize","serialize","serialize","serialize_unchecked","serialize_unchecked","serialize_uncompressed","serialize_uncompressed","serialized_size","serialized_size","tag","to_owned","to_owned","to_string","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","uncompressed_size","uncompressed_size","vzip","vzip","vzip","vzip","elem","l","r","0","0","0","0","0","0","CommittableStakeTableSetCommitment","CommittableStakeTableSetFrontier","SignatureScheme","StakeTableCommitment","StakeTableHash","StakeTableMap","StakeTableSetCommitment","StakeTableSetFrontier","StakeTableSetHistory","StakeTableSetMT","StakeTableTag","StakingKey","StakingKeySignature","StakingPrivKey","VrfParam","VrfPubKey","arbitrary","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_ref","as_ref","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","clone","clone","clone","clone","clone","clone","clone","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","cmp","commit","commit","commit","commit","commit","commitment_diversifier","deref","deref","deref","deref","deref","deref","deref","deref","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize_unchecked","deserialize_unchecked","deserialize_uncompressed","deserialize_uncompressed","drop","drop","drop","drop","drop","drop","drop","drop","eq","eq","eq","eq","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","from","from","from","from","from","from","from","from","from","from","from","from_bytes","from_private","from_str","from_str","from_str","generate","generated_from_seed_indexed","get_hash","get_hash","get_hash","get_hash","hash","hash","hash","hash","header","header","header","init","init","init","init","init","init","init","init","into","into","into","into","into","into","into","into","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","ne","ne","ne","partial_cmp","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize_unchecked","serialize_unchecked","serialize_uncompressed","serialize_uncompressed","serialized_size","serialized_size","serialized_size","serialized_size","sign","tag","tag","tag","to_bytes","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_string","to_string","to_string","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","uncompressed_size","uncompressed_size","validate","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","0","0","0","0","0","0","0","0","0","ArcSer","BadCollectRewardNote","BadCollectRewardNoteSnafu","BadCollectedRewardProof","BadCollectedRewardProofSnafu","BadFeeCalculation","BadFeeCalculationSnafu","BadMerkleLeaf","BadMerkleLeafSnafu","BadMerkleLength","BadMerkleLengthSnafu","BadMerklePath","BadMerklePathSnafu","BadMerkleRoot","BadMerkleRootSnafu","BadNullifierProof","BadNullifierProofSnafu","BadStakeTableCommitmentsProof","BadStakeTableCommitmentsProofSnafu","BadStakeTableProof","BadStakeTableProofSnafu","Block","CAP","CAP","ChainVariables","ConflictingNullifiers","ConflictingNullifiersSnafu","ConsensusTime","CryptoError","CryptoSnafu","ElaboratedBlock","ElaboratedBlockCommitment","ElaboratedTransaction","EspressoTransaction","EspressoTxnHelperProofs","Failed","FailedSnafu","FullPersistence","Genesis","Genesis","HISTORY_SIZE","InconsistentHelperProofs","InconsistentHelperProofsSnafu","IncorrectParent","IncorrectParentSnafu","InvalidTime","InvalidTimeSnafu","LWPersistence","LedgerStateCommitment","MissingNullifierProof","MissingNullifierProofSnafu","NullifierAlreadyExists","NullifierAlreadyExistsSnafu","NullifierHistory","NullifierProofs","RecordMerkleCommitment","RecordMerkleFrontier","RecordMerkleHistory","Reward","Reward","RewardAlreadyCollected","RewardAlreadyCollectedSnafu","RewardAmountTooLarge","RewardAmountTooLargeSnafu","TransactionCommitment","UnexpectedGenesis","UnexpectedGenesisSnafu","UnsupportedFreezeSize","UnsupportedFreezeSizeSnafu","UnsupportedTransferSize","UnsupportedTransferSizeSnafu","ValidationError","ValidationOutputs","ValidatorState","VerifiedRewards","VrfSeed","add","add_assign","add_transaction","add_transaction_raw","amount_to_nonzerou64","append","append_block","apply_block","arbitrary","arbitrary","arbitrary","arbitrary","arbitrary","arbitrary","arbitrary_take_rest","arbitrary_take_rest","arbitrary_take_rest","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_error_source","as_ref","backtrace","block","block_height","block_height","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","build","build","build","build","build","build","build","build","build","build","build","build","build","build","build","build","build","build","build","build","build","build","build","build_commitment","canonical","cap","cause","chain","chain_id","check_unspent","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","cmp","cmp","collected_rewards","commit","commit","commit","commit","commit","commit","commit","commit","commit","commit","commit","commit","committee_size","contained_transactions","count","count","current","current_root","default","default","default","default","default","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","description","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize_unchecked","deserialize_unchecked","deserialize_unchecked","deserialize_unchecked","deserialize_unchecked","deserialize_unchecked","deserialize_unchecked","deserialize_uncompressed","deserialize_uncompressed","deserialize_uncompressed","deserialize_uncompressed","deserialize_uncompressed","deserialize_uncompressed","deserialize_uncompressed","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","err","fail","fail","fail","fail","fail","fail","fail","fail","fail","fail","fail","fail","fail","fail","fail","fail","fail","fail","fail","fail","fail","fail","fail","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from_str","from_str","from_str","from_str","genesis","genesis","genesis","get_hash","get_hash","get_hash","get_hash","get_hash","get_hash","get_hash","get_hash","get_hash","get_hash","get_hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","header","header","header","header","header","historical_stake_tables","historical_stake_tables_commitment","history","in_current_span","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","input_len","input_nullifiers","input_nullifiers","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_error","into_error","into_error","into_error","into_error","into_error","into_error","into_error","into_error","into_error","into_error","into_error","into_error","into_error","into_error","into_error","into_error","into_error","into_error","into_error","into_error","into_error","into_error","is_bad_nullifier_proof","is_empty","is_genesis","is_genesis","kind","kind","len","memos","memos","ne","ne","ne","ne","ne","ne","ne","ne","ne","ne","ne","new","new","new","new","new","new","next_block","next_block","nullifier","nullifier_proofs","nullifiers_count","nullifiers_root","num_inputs","num_inputs","num_outputs","on_commit","open_viewing_memo","open_viewing_memo","output_commitments","output_commitments","output_len","output_len","output_openings","output_openings","parent_state","partial_cmp","partial_cmp","past_historial_stake_table_merkle_roots","past_nullifiers","past_record_merkle_roots","prev_block","prev_commit_time","prev_state","proofs","proofs","protocol_version","proven_nullifiers","recent_nullifiers","record_merkle_commitment","record_merkle_frontier","record_proofs","reward","ser_display","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize_unchecked","serialize_unchecked","serialize_unchecked","serialize_unchecked","serialize_unchecked","serialize_unchecked","serialize_unchecked","serialize_uncompressed","serialize_uncompressed","serialize_uncompressed","serialize_uncompressed","serialize_uncompressed","serialize_uncompressed","serialize_uncompressed","serialized_size","serialized_size","serialized_size","serialized_size","serialized_size","serialized_size","serialized_size","serialized_size","serialized_size","serialized_size","serialized_size","set_proofs","size_hint","size_hint","size_hint","source","stake_table_root","state_comm","tag","tag","tag","tag","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_string","to_string","to_string","to_string","to_string","total_stake","transaction_count","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","txn","txns","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","uids","uncompressed_size","uncompressed_size","uncompressed_size","uncompressed_size","uncompressed_size","uncompressed_size","uncompressed_size","update_nullifier_proofs","update_proofs","update_records_frontier","validate_and_apply","validate_and_apply","validate_block","validate_block_check","verif_crs","vrf_seed","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","0","0","0","0","0","err","nullifier","num_inputs","num_inputs","num_outputs","reward","0","CanonicalBytes","deserialize","deserialize_canonical_bytes","deserialize_unchecked","serialize","serialize_unchecked","deserialize","serialize","0","0","CommittableAmount","LedgerCommitmentOpening","LedgerStateCommitment","arbitrary","arbitrary_take_rest","as_any","as_any","as_any","as_any_mut","as_any_mut","as_any_mut","as_bits","as_byte_slice","as_ref","as_slice_of","block_height","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","chain","clone","clone","clone_into","clone_into","collected_rewards","commit","commit","default","deref","deref","deref","deref_mut","deref_mut","deref_mut","deserialize","deserialize","deserialize","deserialize","deserialize_unchecked","deserialize_unchecked","deserialize_uncompressed","deserialize_uncompressed","drop","drop","drop","encode_hex","encode_hex_upper","eq","eq","fmt","fmt","fmt","fmt","from","from","from","from","from","from_str","get_hash","get_hash","hash","hash","header","historial_stake_tables_commitment","historical_stake_tables","init","init","init","into","into","into","into_any","into_any","into_any","into_any_arc","into_any_arc","into_any_arc","into_any_rc","into_any_rc","into_any_rc","ne","ne","past_nullifiers","past_record_merkle_roots","past_stc_merkle_roots","prev_block","prev_commit_time","prev_state","protocol_name","record_merkle_commitment","record_merkle_frontier","serialize","serialize","serialize","serialize","serialize_unchecked","serialize_unchecked","serialize_uncompressed","serialize_uncompressed","serialized_size","serialized_size","size_hint","stake_table_root","tag","to_owned","to_owned","to_string","total_stake","transaction_count","try_as_bits","try_from","try_from","try_from","try_from","try_into","try_into","try_into","type_id","type_id","type_id","uncompressed_size","uncompressed_size","vzip","vzip","vzip","MAX_AMOUNT","MultiXfrRecordSpec","MultiXfrRecordSpecTransaction","MultiXfrTestState","OneInput","TestTxSpec","TwoInput","TxnPrintInfo","arbitrary","arbitrary_take_rest","as_any","as_any","as_any","as_any","as_any","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","asset_amount","asset_def_ix","asset_defs","asset_seeds","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","clone","clone","clone","clone_into","clone_into","clone_into","crypto_rng","crypto_rng_from_seed","deref","deref","deref","deref","deref","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","drop","drop","drop","drop","drop","fee_records","fmt","fmt","fmt","fmt","from","from","from","from","from","generate_single_record_transfer","generate_transactions","get_now","index","init","init","init","init","init","initialize","inner_timer","into","into","into","into","into","into_any","into_any","into_any","into_any","into_any","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_tuple","keys","keys_and_memos","memos","native_token","new","new_no_time","next_view","now","nullifiers","num_txs","outer_timer","owner_key_ix","owners","prng","prove_keys","record_merkle_tree","records","round","signature","size_hint","to_owned","to_owned","to_owned","transaction","try_add_transaction","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","univ_setup","unspent_memos","update_timer","validate_and_apply","validator","verif_keys","vzip","vzip","vzip","vzip","vzip","diff","key","key0","key1","rec","rec0","rec1","BranchArityMinus1","Digest","KVTreeHash","Key","MaxDepth","Value","committable_hash","digest_of_traversal","empty_digest","hash_branch","hash_key","hash_leaf","traversal_of_digest","treehash_tests","Branch","CommitableHash","CommitableHashNode","CommitableHashTag","Empty","KeyDigest","Leaf","_data","as_any","as_any","as_any_mut","as_any_mut","borrow","borrow","borrow_mut","borrow_mut","clone","clone","clone_into","clone_into","commit","commitment_diversifier","deref","deref","deref_mut","deref_mut","deserialize","digest_of_traversal","drop","drop","empty_digest","eq","eq","fmt","fmt","from","from","get_hash","get_hash","hash","hash","hash_branch","hash_key","hash_leaf","init","init","into","into","into_any","into_any","into_any_arc","into_any_arc","into_any_rc","into_any_rc","ne","ne","serialize","to_owned","to_owned","traversal_of_digest","try_from","try_from","try_into","try_into","type_id","type_id","vzip","vzip","_t","_t","_t","key","key","l","r","val","treehash_basic_checks","treehash_check_digest_of_traversal","treehash_check_leaf_key_domain_separation","treehash_check_traversal_of_digest","treehash_collision_sanity_checks1","treehash_collision_sanity_checks2","treehash_collision_sanity_checks3","MERKLE_HEIGHT","PROVER_CRS","SUPPORTED_FREEZE_SIZES","SUPPORTED_TRANSFER_SIZES","UNIVERSAL_PARAM","VERIF_CRS","__private_field","__private_field","__private_field","as_any","as_any","as_any","as_any_mut","as_any_mut","as_any_mut","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","deref","deref","deref","deref","deref","deref","deref_mut","deref_mut","deref_mut","drop","drop","drop","from","from","from","init","init","init","into","into","into","into_any","into_any","into_any","into_any_arc","into_any_arc","into_any_arc","into_any_rc","into_any_rc","into_any_rc","try_from","try_from","try_from","try_into","try_into","try_into","type_id","type_id","type_id","vzip","vzip","vzip","canonical","0","CanonicalBytes","as_any","as_any_mut","borrow","borrow_mut","deref","deref_mut","deserialize","deserialize","deserialize_canonical_bytes","deserialize_unchecked","drop","from","from","init","into","into_any","into_any_arc","into_any_rc","serialize","serialize","serialize_unchecked","try_from","try_into","type_id","vzip"],"q":["espresso_core","","","","","","","","","","","","","","","","espresso_core::full_persistence","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","espresso_core::genesis","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","espresso_core::kv_merkle_tree","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","espresso_core::kv_merkle_tree::KVMerkleTerminalNode","","","espresso_core::kv_merkle_tree::KVMerkleTree","","","","","","","espresso_core::ledger","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","espresso_core::ledger::EspressoTransactionKind","espresso_core::lw_persistence","","","","","","","","","","","","","","","","","","","","","","","","","","","espresso_core::merkle_treeespresso_core::merkle_tree::LookupResult","","espresso_core::merkle_tree::MerkleFrontier","","espresso_core::merkle_tree::MerkleNode","","","","","","espresso_core::rewardespresso_core::reward::RewardError","","","","espresso_core::reward::canonical","","","","","","","espresso_core::reward::mock_eligibility","","espresso_core::set_merkle_tree","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","espresso_core::set_merkle_tree::SetMerkleTerminalNode","","espresso_core::set_merkle_tree::SetMerkleTree","","","","","","","espresso_core::set_merkle_tree::set_hash","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","espresso_core::set_merkle_tree::set_hash::SetMerkleTreeNode","","","espresso_core::stake_tableespresso_core::stateespresso_core::state::EspressoTransaction","","","espresso_core::state::EspressoTxnHelperProofs","","espresso_core::state::ValidationError","","","","","","espresso_core::state::canonical","","","","","","","espresso_core::state::ser_display","","espresso_core::state::state_comm","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","espresso_core::testing","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","espresso_core::testing::TestTxSpec","","","","","","","espresso_core::tree_hash","","","","","","","","","","","","","","espresso_core::tree_hash::committable_hash","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","espresso_core::tree_hash::committable_hash::CommitableHashNode","","","","","","","","espresso_core::tree_hash::treehash_tests","","","","","","","espresso_core::universal_params","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","espresso_core::util","espresso_core::util::canonical","","","","","","","","","","","","","","","","","","","","","","","","","",""],"d":["","","","","","","","Implementation of the Merkle tree data structure.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","Genesis transaction","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","","","","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","Structure for proofs in the KVMT","Terminal nodes in a KVMT are either a leaf or an empty …","The core enum of the key-value Merkle tree. Making use of …","","","","","","","","","","","","","","","Checks correctness of a proof by recreating the proof path …","","","","","","","The default tree is an empty subtree","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","","","Get leaf key, value pair. Return None if terminal node is …","Returns the digest for a node in a KVMT","","","","","","","Inserts a (key, value) pair into the KVMT. If a (key, …","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","Returns the value and proof for a queried key. If the path …","","","","Create a new branch in the tree","Create a new leaf in the tree","","","","","","","","","","Representation for a sparse Merkle tree","","","","","","","","","","","","","","","","","","","","","How far above the “true” leaf level this leaf is. This …","","","","","","","how far above the “true” leaf level this leaf is","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","Without proof.","The index is outside the occupied range in the tree","","","A forgotten subtree fully occupied in the merkle tree, but …","","Left.","The result of querying at an index in the tree","A wrapper of the merkle root, together with the tree …","A wrapper of the merkle membership proof.","Data struct for a merkle leaf.","Inclusive proof of a merkle leaf.","Data structure storing the information of a node in the …","An authentication path of a ternary Merkle tree. While …","A 3-ary Merkle tree node.","Data struct of a merkle tree.","Middle.","","Enum for identifying a position of a node (left, middle or …","Represents the value for a node in the merkle tree.","The index is valid but we do not have the leaf in memory","The value at the given index, and a proof of validity","With proof.","Right.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Verify an element is a leaf of a Merkle tree given the …","","","","","","","","","","","","","","","","","","","","","","","get the collected commitment","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Empty node.","","","","","","","","","","","","Assert the lookup result is Ok.","","","","","","","","","","","","","","","Trim the leaf at position <code>i</code> from memory, if present. Will …","Returns the argument unchanged.","Returns the argument unchanged.","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","Returns the argument unchanged.","","","","","get the frontier","","","","","","","","","","","","","Returns the leaf value given a position","Hash function used to compute an internal node value","","","","","","","","","","","","","","get the height","","Height of the tree.","","","","","","","","","","","","","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","The leaf node.","","","","","","","","","","","","","Creates a new node on some Merkle path given the position …","Create a Merkle path from the list of nodes","Input a leaf and the path, build a proof.","Create a new Merkle with a specific height","","","Nodes along the path.","If the merkle frontier is empty or not.","Get the number of leaves","","#leaves of the tree.","","The path.","","Position.","","","Insert a new value at the leftmost available slot","","","“Re-insert” a leaf into the tree using its proof. …","Recreates a pruned Merkle from the rightmost leaf and …","","","Root of the tree.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","First sibling.","Second sibling.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Height of the tree.","","","","","","","Reward Collection Transaction Note","Reward Collection Transaction Note","Previously collected rewards are recorded in (StakingKey, …","","Hash for set Merkle tree for all of the …","Sliding window for reward collection","","CollectedRewards proofs, organized by the root hash for …","","Identifying tag for CollectedReward","","No Stake table commitment","SNAFU context selector for the …","An invalid view number","SNAFU context selector for the …","Staking key not eligible for reward","SNAFU context selector for the <code>RewardError::KeyNotEligible</code> …","Proof not in memory","SNAFU context selector for the …","Reward has been already collected","SNAFU context selector for the …","Reward Transaction Errors.","Auxiliary info and proof for CollectRewardNote","Serialization error","SNAFU context selector for the …","RewardNote failed signature","SNAFU context selector for the <code>RewardError::SignatureError</code> …","StakingKeyNotFound","SNAFU context selector for the …","Proof for Vrf output","Append a block with new collected rewards to the set.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Blinding factor for reward record commitment on CAP native …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Consume the selector and return the associated error","Consume the selector and return the associated error","Consume the selector and return the associated error","Consume the selector and return the associated error","Consume the selector and return the associated error","Consume the selector and return the associated error","Consume the selector and return the associated error","Consume the selector and return the associated error","","Address that owns the reward","","Check if a claimed reward has been collected.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Compute the allowed stake amount given committee size, …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Staking <code>pub_key</code>, <code>view</code> number and a proof that staking key …","","","","","","","","Consume the selector and return a <code>Result</code> with the …","Consume the selector and return a <code>Result</code> with the …","Consume the selector and return a <code>Result</code> with the …","Consume the selector and return a <code>Result</code> with the …","Consume the selector and return a <code>Result</code> with the …","Consume the selector and return a <code>Result</code> with the …","Consume the selector and return a <code>Result</code> with the …","Consume the selector and return a <code>Result</code> with the …","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","Returns the argument unchanged.","","Generate collect reward transaction note and helper proofs …","Generate collect reward transaction body and helper proofs …","","","","","","","retrieves proof that reward hasn’t been collected","","","","","","","","","","","","","","","","","","","","","","","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Index of relevant stake table commitment in MerkleTree","","","","","","","","Number of committee seats","returns number of votes validator had for reward being …","","","","","","","returns amount claimed for reward","Reward amount","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Proof for stake_amount for staking key under above stake …","Proof for stake table commitment and total stake for view …","returns staking for which reward is being claimed","Staking key eligible for reward","Staking public key","","","returns time for which reward is being claimed","Time at which <code>staking key</code> was eligible for reward","View number for which the key was elected for reward","","","","","","","","","","","","","","","","","","returns total staked amount from stake table commitment …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Proof that reward hasn’t been collected","","","","","","Update a set of historical collected rewards …","verifies a reward collect note","","","Checks proofs in RewardNoteProofs against ValidatorState …","","","Cryptographic proof","","","","","","","","","","","","","","","","","","","","","","A helper for converting CanonicalSerde bytes to standard …","","","","","","check whether a staking key is eligible for rewards","Prove that staking key is eligible for reward on view …","","","","","","","","","Note: this type implements PartialEq so that containing …","","","","","","","","","","","","","","","","","","","","","Returns <code>None</code> if the element is in a forgotten subtree","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","","","","","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","how far above the “true” leaf level this leaf is","","how far above the “true” leaf level this leaf is","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","","","","","","","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Committable Wrapper around commitment to historical stable …","Committable Wrapper around stake table set frontier","","Stake table commitment type","Hash function for the Stake Table","KeyValue Merkle tree alias for Stake Table","Alias for commitment to historical stake tables set","Alias Merkle Frontier for historical stake tables","Sliding window Stake Table checks","Alias for Merkle Tree of set of historical Stake tables, …","Identifying tag for a StakeTable","","PubKey used for stake table key","Staking Private Key","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","","","Returns the argument unchanged.","Returns the argument unchanged.","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","","","","","","","","","","","","","","","","","","","","","","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Serializable Arc","Bad CollectRewardNote","SNAFU context selector for the …","An invalid Collected Reward proof.","SNAFU context selector for the …","Error when calculating block fees","SNAFU context selector for the …","An invalid Merkle leaf.","SNAFU context selector for the …","An incorrect Merkle path length.","SNAFU context selector for the …","An invalid Merkle path.","SNAFU context selector for the …","An incorrect Merkle root.","SNAFU context selector for the …","An invalid nullifier proof.","SNAFU context selector for the …","verification error for stake table commitments proof","SNAFU context selector for the …","verification error for stake table proof","SNAFU context selector for the …","A collection of transactions","","","Global variables for an Espresso blockchain.","The transaction being added to a block contains a nullifier","SNAFU context selector for the …","Type-safe wrapper around <code>u64</code> so we know the thing we’re …","An error from the Jellyfish library","SNAFU context selector for the <code>ValidationError::CryptoError</code>…","A block of transactions with proofs","A cryptographic commitment to a block","A transaction with nullifier non-inclusion proofs","A transaction tht can be either a CAP transaction or a …","","A generic failure.","SNAFU context selector for the <code>ValidationError::Failed</code> …","","","","The number of recent record Merkle tree root hashes the …","Block transaction order doesn’t match helper proofs","SNAFU context selector for the …","Attempted to apply a block to a state which was not its …","SNAFU context selector for the …","Attempted to apply a block with a time in the past","SNAFU context selector for the <code>ValidationError::InvalidTime</code>…","","","","SNAFU context selector for the …","A record was already spent.","SNAFU context selector for the …","Sliding window for transaction freshness","Nullifier proofs, organized by the root hash for which …","A type wrapper for MerkleCommitment","Jellyfish MerkleFrontier enables efficient batch updates","Sliding window for transaction freshness","","","A record was already spent.","SNAFU context selector for the …","Stake amount in transaction does not match amount in stake …","SNAFU context selector for the …","A cryptographic commitment to a transaction","A genesis transaction was included in a non-genesis block","SNAFU context selector for the …","The freeze transaction has an unsupported number of inputs …","SNAFU context selector for the …","The transfer transaction has an unsupported number of …","SNAFU context selector for the …","Validation errors.","","The working state of the ledger","Information to mint CAP records for reward collectors","","","","","Add an elaborated transaction to a block.","converts Amount to NonZeroU64","Append a new block on successful validation","Append a block of new nullifiers to the set.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","The number of blocks in the chain which led to this state.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Consume the selector and return the associated error","Consume the selector and return the associated error","Consume the selector and return the associated error","Consume the selector and return the associated error","Consume the selector and return the associated error","Consume the selector and return the associated error","Consume the selector and return the associated error","Consume the selector and return the associated error","Consume the selector and return the associated error","Consume the selector and return the associated error","Consume the selector and return the associated error","Consume the selector and return the associated error","Consume the selector and return the associated error","Consume the selector and return the associated error","Consume the selector and return the associated error","Consume the selector and return the associated error","Consume the selector and return the associated error","Consume the selector and return the associated error","Consume the selector and return the associated error","Consume the selector and return the associated error","Consume the selector and return the associated error","Consume the selector and return the associated error","Consume the selector and return the associated error","","","","","","A unique identifier for this chain, to prevent cross-chain …","Check if a nullifier has been spent.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Clone all errors except CryptoError which gets mapped to a …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","CollectedRewards form recent blocks, allows validating …","","Get a commitment to an elaborated transaction.","","Get a commitment to an elaborated block.","","","","","","","","Cryptographic commitment to the validator state","Committee sizeonsume the selector and return a <code>Result</code> with the …","Consume the selector and return a <code>Result</code> with the …","Consume the selector and return a <code>Result</code> with the …","Consume the selector and return a <code>Result</code> with the …","Consume the selector and return a <code>Result</code> with the …","Consume the selector and return a <code>Result</code> with the …","Consume the selector and return a <code>Result</code> with the …","Consume the selector and return a <code>Result</code> with the …","Consume the selector and return a <code>Result</code> with the …","Consume the selector and return a <code>Result</code> with the …","Consume the selector and return a <code>Result</code> with the …","Consume the selector and return a <code>Result</code> with the …","Consume the selector and return a <code>Result</code> with the …","Consume the selector and return a <code>Result</code> with the …","Consume the selector and return a <code>Result</code> with the …","Consume the selector and return a <code>Result</code> with the …","Consume the selector and return a <code>Result</code> with the …","Consume the selector and return a <code>Result</code> with the …","Consume the selector and return a <code>Result</code> with the …","Consume the selector and return a <code>Result</code> with the …","Consume the selector and return a <code>Result</code> with the …","Consume the selector and return a <code>Result</code> with the …","Consume the selector and return a <code>Result</code> with the …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","Returns the argument unchanged.","Returns the argument unchanged.","","","Returns the argument unchanged.","Returns the argument unchanged.","","","","","Create a genesis view number (0)","","","","","","","","","","","","","","","","A committing hash of this transaction.","","","","","","","","","","","","","","","","Keeps track of previous stake tables and their total stake","Commitment to historical stake tables","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Get the number of inputs to the transaction.","Retrieve transaction input nullifiers.","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Retrieve kind of transaction.","","","","","","","","","","","","","","","","Create a new <code>ViewNumber</code> with the given value.","","","","","","","","","Sparse SetMerkleTree containing up-to-date non-membership …","","","","","","","","","Retrieve transaction output record commitments.","","Retrieve number of transaction outputs.","","Retrieve transaction output openings","","Commitment to the state this block is intended to be …","","","A list of recent historial stake table merkle root hashes …","Nullifiers from recent blocks, which allows validating …","A list of recent record Merkle root hashes for validating …","","The consensus time at which this state was created.","","","","The version of the protocol this chain is currently using.","","","The current record Merkle commitment","The current frontier of the record Merkle tree","Sparse MerkleTree containing membership proofs for each …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Staking table root hash. For fixed-stake, this will be the …","The ledger state commitment","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Total amount staked for the current table","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","UID for each new record created by this block.","","","","","","","","","Update a set of historical nullifier non-membership proofs.","","","Performs validation for a block, updating the …","Validate a block for consensus","Validate a block of elaborated transactions","Plonk verifier keys.","VRF seed for checking rewards","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","A helper for converting CanonicalSerde bytes to standard …","","","","","","","","","","Wrapper around amount to make it committable","The essential state of the ledger","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","","Returns the argument unchanged.","Returns the argument unchanged.","","","","","","","","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","We need to include all the cached past record Merkle roots …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Transaction Information for println! only","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","Generates transactions with the specified block …","","","","","","","","Creates test state with initial records.","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","Constructs all transaction information for println! only.","Constructs println! information with round number and the …","","Time measurement, optional.","","Number of transactions.","","","","","","","","Round number.","","","","","","","Tries to add a transaction to a block.","","","","","","","","","","","","","","","","","","","Validates and applys a block.","","","","","","","","","","","","","","","The number of children each branch has minus one. This is …","The output of the hash function","A hash function usable for sparse merkle tree …","A data type for keys A data type for values","How many base-BranchArityMinus1 place values are in a …","","","Convert a traversal back to a digest. Primarily relevant …","A unique digest for empty subtrees","Hash a branch’s children: the number of siblings in a …","Hash a key’s contents","Hash a leaf’s contents","Convert a digest to a traversal","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","","","","","","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Height of the records Merkle tree","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","","A helper for converting CanonicalSerde bytes to standard …","","","","","","","","","","","","","Returns the argument unchanged.","","Calls <code>U::from(self)</code>.","","","","","","","","","",""],"i":[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,8,8,8,0,8,8,0,8,8,2,8,2,8,2,2,2,2,2,2,8,2,8,8,8,2,2,2,2,8,2,8,2,8,8,2,2,2,8,2,8,2,2,8,2,8,2,8,2,8,2,8,2,2,2,2,2,2,2,2,2,2,2,2,8,2,8,2,8,2,8,2,8,0,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,44,44,45,44,0,0,0,44,45,44,45,41,44,45,41,44,45,41,44,45,41,41,44,45,41,44,45,41,44,44,45,41,44,45,41,44,45,45,41,41,44,45,41,44,45,41,44,45,41,41,44,44,45,41,41,45,41,41,44,45,41,41,44,45,41,44,44,45,41,44,45,41,44,45,41,44,45,41,0,44,44,45,41,44,44,41,44,44,45,45,41,41,45,41,44,41,41,44,45,41,41,44,45,41,41,44,45,41,44,45,41,45,44,45,41,202,202,202,203,204,205,203,205,205,205,54,0,0,54,54,54,11,54,11,54,11,54,11,54,11,54,11,11,54,11,54,11,54,54,11,54,54,54,11,54,54,11,54,54,54,54,11,54,11,54,11,54,11,54,11,11,54,11,54,54,11,54,54,11,54,11,54,54,11,54,11,54,11,54,54,54,11,206,0,0,58,58,58,58,58,58,58,58,58,58,58,58,58,58,58,58,58,58,58,58,58,58,58,58,58,67,77,66,0,0,78,72,66,0,66,66,69,0,0,0,0,0,0,0,0,0,69,0,0,0,72,72,78,69,64,69,70,71,67,72,66,73,77,68,78,65,64,69,70,71,67,72,66,73,77,68,78,65,64,69,70,71,67,72,66,73,77,68,78,65,64,69,70,71,67,72,66,73,77,68,78,65,64,64,64,64,65,65,69,70,71,67,72,66,73,77,68,78,65,69,70,71,67,72,66,73,77,68,78,65,65,69,70,71,67,64,69,70,71,67,72,66,73,77,68,78,65,64,69,70,71,67,72,66,73,77,68,78,65,69,69,70,70,71,71,67,67,66,73,73,77,77,68,68,78,65,70,71,73,77,68,70,71,73,77,68,64,69,70,71,67,72,66,73,77,68,78,65,67,69,70,71,67,72,66,73,77,68,78,65,72,64,69,70,71,67,67,72,66,73,77,77,68,78,65,65,64,69,69,70,71,67,72,66,73,77,68,78,65,65,64,64,67,77,65,69,70,71,67,72,66,73,77,68,78,65,66,65,0,69,70,71,67,72,66,73,77,68,78,65,67,77,65,64,73,65,64,69,70,71,67,72,66,73,77,68,78,65,66,66,66,64,69,70,71,67,72,66,73,77,68,78,65,64,69,70,71,67,72,66,73,77,68,78,65,64,69,70,71,67,72,66,73,77,68,78,65,64,69,70,71,67,72,66,73,77,68,78,65,64,66,68,72,70,71,67,72,66,73,77,68,78,65,64,70,71,68,65,66,66,71,78,65,64,73,65,68,64,70,64,64,65,67,66,65,65,64,65,73,69,69,70,70,71,71,67,67,66,73,73,77,77,68,68,78,65,70,71,73,77,68,70,71,73,77,68,69,70,71,67,73,77,68,70,70,67,77,64,67,69,70,71,67,72,66,73,77,68,78,65,67,77,64,69,69,70,71,67,67,72,66,73,77,77,68,78,65,64,69,70,71,67,72,66,73,77,68,78,65,64,69,70,71,67,72,66,73,77,68,78,65,70,71,73,77,68,66,64,69,70,71,67,72,66,73,77,68,78,65,207,207,208,209,210,211,211,210,212,211,0,0,0,0,0,0,0,0,0,0,0,86,0,86,0,86,0,86,0,86,0,0,0,86,0,86,0,86,0,0,81,81,98,100,101,102,103,104,88,89,90,91,92,93,94,95,86,81,98,100,101,102,103,104,88,89,90,91,92,93,94,95,86,81,86,86,102,101,98,100,101,102,103,104,88,89,90,91,92,93,94,95,86,81,98,100,101,102,103,104,88,89,90,91,92,93,94,95,86,81,88,89,90,91,92,93,94,95,0,102,86,81,98,100,101,102,103,104,88,89,90,91,92,93,94,95,81,98,100,101,102,103,104,88,89,90,91,92,93,94,95,81,81,100,0,81,81,81,98,100,101,102,103,104,88,89,90,91,92,93,94,95,86,81,98,100,101,102,103,104,88,89,90,91,92,93,94,95,86,81,86,98,98,100,101,101,102,102,103,103,104,104,86,81,98,101,102,103,104,98,101,102,103,104,98,100,101,102,103,104,88,89,90,91,92,93,94,95,86,81,102,98,100,101,102,103,104,81,88,89,90,91,92,93,94,95,98,98,100,101,102,103,104,88,89,90,91,92,93,94,95,86,86,81,98,100,101,102,103,104,88,89,90,91,92,93,94,95,86,86,81,98,101,102,98,100,101,102,103,104,104,98,100,101,102,103,104,98,86,81,86,98,100,101,102,103,104,88,89,90,91,92,93,94,95,86,81,98,100,101,102,103,104,88,89,90,91,92,93,94,95,86,81,98,100,101,102,103,104,88,89,90,91,92,93,94,95,86,81,98,100,101,102,103,104,88,89,90,91,92,93,94,95,86,81,98,100,101,102,103,104,88,89,90,91,92,93,94,95,86,81,88,89,90,91,92,93,94,95,104,0,98,101,102,103,104,81,103,101,101,102,101,102,89,81,101,102,98,98,100,101,101,102,102,103,103,104,104,86,81,98,101,102,103,104,98,101,102,103,104,98,101,102,103,104,101,86,104,104,101,98,103,94,98,101,98,103,98,100,101,102,103,104,88,89,90,91,92,93,94,95,81,98,86,104,98,98,100,101,102,103,104,88,89,90,91,92,93,94,95,86,81,98,100,101,102,103,104,88,89,90,91,92,93,94,95,86,81,98,100,101,102,103,104,88,89,90,91,92,93,94,95,86,81,104,98,101,102,103,104,81,101,102,103,104,94,88,103,98,100,101,102,103,104,88,89,90,91,92,93,94,95,86,81,213,214,214,215,172,0,0,0,0,0,0,0,0,15,15,116,15,15,116,0,0,0,15,15,116,113,15,116,113,15,116,113,15,116,113,113,15,116,113,15,116,113,15,15,15,116,113,15,116,113,15,116,116,113,113,113,113,15,116,113,15,116,113,15,116,113,15,15,116,113,116,113,15,116,113,15,116,113,15,15,116,113,15,116,113,15,116,113,15,116,113,15,15,116,113,15,15,113,15,15,116,116,113,113,113,113,116,113,0,0,15,113,15,116,113,15,116,113,15,116,113,15,116,113,113,116,15,116,113,216,216,217,217,218,218,219,217,218,117,115,118,0,0,118,0,118,0,119,118,117,115,119,118,117,115,119,118,117,115,119,118,117,115,119,0,117,115,117,115,118,117,118,117,115,119,119,118,117,115,119,117,115,115,117,115,117,115,118,117,115,119,0,117,115,117,115,115,118,117,115,119,115,117,115,118,117,115,115,118,117,115,119,118,117,115,119,118,117,115,119,118,117,115,119,118,117,115,119,0,117,115,117,115,115,117,115,117,115,117,115,115,117,115,115,118,117,115,115,119,118,117,115,119,118,117,115,119,117,115,118,117,115,119,220,221,221,36,123,126,127,128,129,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,36,131,36,123,125,126,127,128,129,131,36,123,125,126,127,128,129,36,123,131,36,123,125,126,127,128,129,131,36,123,125,126,127,128,129,36,123,125,126,127,128,129,36,123,125,126,127,128,129,36,36,126,127,128,129,125,131,36,123,125,126,127,128,129,131,36,123,125,126,127,128,129,36,36,123,123,126,126,127,127,128,129,126,127,126,127,131,36,123,125,126,127,128,129,36,123,125,126,36,36,123,123,125,126,126,127,128,129,131,36,36,36,123,123,125,126,127,128,129,36,36,36,123,126,36,36,36,123,125,126,36,123,125,126,36,123,126,131,36,123,125,126,127,128,129,131,36,123,125,126,127,128,129,131,36,123,125,126,127,128,129,131,36,123,125,126,127,128,129,131,36,123,125,126,127,128,129,36,123,126,36,36,36,123,123,126,126,127,127,128,129,126,127,126,127,36,123,126,127,36,36,123,126,36,36,123,125,126,127,128,129,36,123,126,131,36,36,123,123,125,126,126,127,128,129,131,36,123,125,126,127,128,129,131,36,123,125,126,127,128,129,126,127,36,131,36,123,125,126,127,128,129,109,165,137,138,166,167,168,170,110,0,84,0,84,0,84,0,84,0,84,0,84,0,84,0,84,0,84,0,84,0,0,162,163,0,84,0,0,84,0,0,0,0,0,0,84,0,0,162,163,25,84,0,84,0,84,0,0,0,84,0,84,0,0,0,0,0,0,162,163,84,0,84,0,0,84,0,84,0,84,0,0,0,0,0,0,109,109,3,3,0,25,135,135,3,137,138,34,110,25,137,138,110,109,162,163,134,165,3,137,139,140,141,142,143,144,145,146,147,148,149,150,151,152,153,154,155,156,157,158,159,160,161,84,138,166,167,168,135,169,170,34,110,25,109,162,163,134,165,3,137,139,140,141,142,143,144,145,146,147,148,149,150,151,152,153,154,155,156,157,158,159,160,161,84,138,166,167,168,135,169,170,34,110,25,84,110,84,3,25,25,109,162,163,134,165,3,137,139,140,141,142,143,144,145,146,147,148,149,150,151,152,153,154,155,156,157,158,159,160,161,84,138,166,167,168,135,169,170,34,110,25,109,162,163,134,165,3,137,139,140,141,142,143,144,145,146,147,148,149,150,151,152,153,154,155,156,157,158,159,160,161,84,138,166,167,168,135,169,170,34,110,25,139,140,141,142,143,144,145,146,147,148,149,150,151,152,153,154,155,156,157,158,159,160,161,134,0,134,84,25,34,135,109,162,163,134,165,3,137,139,140,141,142,143,144,145,146,147,148,149,150,151,152,153,154,155,156,157,158,159,160,161,84,138,166,167,168,135,169,170,34,110,25,109,162,163,134,165,3,137,139,140,141,142,143,144,145,146,147,148,149,150,151,152,153,154,155,156,157,158,159,160,161,84,138,166,167,168,135,169,170,34,110,25,109,110,25,162,134,165,3,166,167,168,135,34,25,25,25,34,3,135,135,135,135,165,135,34,110,25,109,109,162,163,134,165,3,137,139,140,141,142,143,144,145,146,147,148,149,150,151,152,153,154,155,156,157,158,159,160,161,84,138,166,167,168,135,169,170,170,34,110,25,109,162,163,134,165,3,137,139,140,141,142,143,144,145,146,147,148,149,150,151,152,153,154,155,156,157,158,159,160,161,84,138,166,167,168,135,169,170,34,110,25,84,109,109,162,162,163,163,134,134,165,165,3,3,137,137,84,138,138,166,167,168,135,169,170,170,34,34,110,110,25,109,134,165,3,137,138,34,109,134,165,3,137,138,34,109,162,163,134,165,3,137,139,140,141,142,143,144,145,146,147,148,149,150,151,152,153,154,155,156,157,158,159,160,161,84,138,166,167,168,135,169,170,34,110,25,109,162,163,134,165,3,137,138,135,170,34,110,25,148,139,140,141,142,143,144,145,146,147,148,149,150,151,152,153,154,155,156,157,158,159,160,161,109,162,163,163,134,165,3,137,137,139,140,141,142,143,144,145,146,147,148,149,150,151,152,153,154,155,156,157,158,159,160,161,84,84,138,138,166,167,168,135,169,170,34,110,110,25,109,162,163,134,165,3,137,137,137,139,140,141,142,143,144,145,146,147,148,149,150,151,152,153,154,155,156,157,158,159,160,161,84,138,138,166,167,168,135,169,170,170,34,110,110,110,25,163,137,138,110,109,3,25,109,162,163,134,165,3,137,138,170,34,25,109,162,162,163,134,134,165,3,137,138,170,34,25,163,137,84,138,110,25,25,135,84,109,162,163,134,165,3,137,139,140,141,142,143,144,145,146,147,148,149,150,151,152,153,154,155,156,157,158,159,160,161,84,138,166,167,168,135,169,170,34,110,25,162,162,134,109,162,163,134,165,3,137,139,140,141,142,143,144,145,146,147,148,149,150,151,152,153,154,155,156,157,158,159,160,161,84,138,166,167,168,135,169,170,34,110,25,109,162,163,134,165,3,137,139,140,141,142,143,144,145,146,147,148,149,150,151,152,153,154,155,156,157,158,159,160,161,84,138,166,167,168,135,169,170,34,110,25,109,162,163,134,165,3,137,139,140,141,142,143,144,145,146,147,148,149,150,151,152,153,154,155,156,157,158,159,160,161,84,138,166,167,168,135,169,170,34,110,25,109,162,163,134,165,3,137,139,140,141,142,143,144,145,146,147,148,149,150,151,152,153,154,155,156,157,158,159,160,161,84,138,166,167,168,135,169,170,34,110,25,139,140,141,142,143,144,145,146,147,148,149,150,151,152,153,154,155,156,157,158,159,160,161,84,3,162,134,162,134,3,134,3,109,162,163,134,165,3,137,138,135,170,110,109,3,84,170,34,25,25,25,139,169,25,25,149,150,149,25,162,134,162,134,162,134,162,134,3,109,110,25,25,25,25,25,25,134,3,34,134,135,25,25,169,156,0,109,109,162,162,163,163,134,134,165,165,3,3,137,137,84,138,138,166,167,168,135,169,170,170,34,34,110,110,25,109,134,165,3,137,138,34,109,134,165,3,137,138,34,109,162,163,134,165,3,137,138,170,34,110,134,137,138,110,84,25,0,163,137,138,110,109,162,163,134,165,3,137,139,140,141,142,143,144,145,146,147,148,149,150,151,152,153,154,155,156,157,158,159,160,161,84,138,166,167,168,135,169,170,34,110,25,163,137,84,138,110,25,25,109,162,163,163,134,165,3,137,137,139,140,141,142,143,144,145,146,147,148,149,150,151,152,153,154,155,156,157,158,159,160,161,84,138,138,166,167,168,135,169,170,34,110,110,25,109,162,163,134,165,3,137,139,140,141,142,143,144,145,146,147,148,149,150,151,152,153,154,155,156,157,158,159,160,161,84,138,166,167,168,135,169,170,34,110,25,134,3,109,162,163,134,165,3,137,139,140,141,142,143,144,145,146,147,148,149,150,151,152,153,154,155,156,157,158,159,160,161,84,138,166,167,168,135,169,170,34,110,25,169,109,134,165,3,137,138,34,25,135,25,25,25,25,25,34,34,109,162,163,134,165,3,137,139,140,141,142,143,144,145,146,147,148,149,150,151,152,153,154,155,156,157,158,159,160,161,84,138,166,167,168,135,169,170,34,110,25,222,223,224,225,226,227,228,229,230,229,231,172,0,0,0,0,0,0,0,0,171,185,0,0,0,171,171,171,185,186,171,185,186,171,171,171,171,186,171,185,186,171,185,186,186,171,185,171,185,186,185,186,185,171,185,186,171,185,186,171,171,185,185,171,185,171,185,171,185,186,171,171,171,185,171,171,185,186,171,171,185,185,186,171,171,185,171,185,171,186,186,171,185,186,171,185,186,171,185,186,171,185,186,171,185,186,171,185,186,186,186,186,186,186,171,186,186,171,171,185,185,171,185,171,185,171,185,171,186,171,171,185,171,186,186,171,171,171,185,186,171,185,186,171,185,186,171,185,171,185,186,192,0,0,0,189,0,189,0,188,188,193,192,189,188,190,193,192,189,188,190,188,188,192,192,193,192,189,188,190,193,192,189,188,190,189,188,190,189,188,190,0,0,193,192,189,188,190,193,192,189,188,190,193,192,189,188,190,192,192,189,188,190,193,192,189,188,190,192,192,193,190,193,192,189,188,190,192,192,193,192,189,188,190,193,192,189,188,190,193,192,189,188,190,193,192,189,188,190,189,192,190,192,192,193,193,192,193,192,193,192,188,192,192,192,192,192,193,190,188,189,188,190,190,192,193,192,189,188,190,193,192,189,188,190,193,192,189,188,190,192,192,192,192,192,192,193,192,189,188,190,232,233,232,232,233,232,232,234,234,0,234,234,234,0,234,234,234,234,234,234,0,198,0,0,0,198,198,198,197,197,198,197,198,197,198,197,198,197,198,197,198,198,235,197,198,197,198,197,197,197,198,197,197,198,197,198,197,198,197,198,197,198,197,197,197,197,198,197,198,197,198,197,198,197,198,197,198,197,197,198,197,197,198,197,198,197,198,197,198,236,237,238,236,237,238,238,237,0,0,0,0,0,0,0,0,0,0,0,0,0,199,200,201,199,200,201,199,200,201,199,200,201,199,200,201,199,199,200,200,201,201,199,200,201,199,200,201,199,200,201,199,200,201,199,200,201,199,200,201,199,200,201,199,200,201,199,200,201,199,200,201,199,200,201,199,200,201,0,172,0,172,172,172,172,172,172,0,172,0,0,172,172,172,172,172,172,172,172,0,172,0,172,172,172,172],"f":[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[[],1],[[],1],[[],1],[[],1],0,0,[2,[[5,[[4,[3]]]]]],0,[2,[[5,[[4,[[7,[[7,[6]]]]]]]]]],[[]],[[]],[[]],[[]],[8,8],[[]],[2],[2],[2],[9],[9],[9],[9],[9],[9],[[8,8],10],0,[2,[[5,[[4,[[12,[11]]]]]]]],[[2,13],14],[[8,13],14],[[]],[[]],[2,[[17,[15,16]]]],[[],9],[[],9],[[]],[[]],[[[19,[18]]],[[19,[1,18]]]],[[[19,[18]]],[[19,[1,18]]]],[20,[[20,[1]]]],[20,[[20,[1]]]],[21,[[21,[1]]]],[21,[[21,[1]]]],[[22,23],[[17,[2,16]]]],[2,[[5,[[4,[15]]]]]],0,[2,[[5,[[4,[24]]]]]],0,0,[2,[[5,[[4,[25]]]]]],[2],[[2,12]],[[2,3,25]],[[2,25,26,15]],[[2,15]],[[]],[[],17],[[],17],[[],17],[[],17],[[],27],[[],27],[[]],[[]],0,[28,[[30,[29]]]],[[],1],[[],1],[[]],[[]],0,[29,29],[[]],[29,[[31,[29]]]],[9],[9],[[],[[17,[29]]]],[32,[[17,[29,33]]]],[32,[[17,[29,33]]]],[32,[[17,[29,33]]]],[9],[[29,29],10],0,[[29,13],14],[[]],[[],6],[29],[[],9],[[]],[[[19,[18]]],[[19,[1,18]]]],[20,[[20,[1]]]],[21,[[21,[1]]]],[[29,29],10],[[34,[20,[[7,[35]]]],[38,[36,37]]],29],[29,[[7,[39]]]],[29,9],[29,[[7,[35]]]],[29,26],[29,17],[[29,40],[[17,[33]]]],[[29,40],[[17,[33]]]],[[29,40],[[17,[33]]]],[29,9],0,[[]],[[],17],[[],17],[[],27],[29,9],[[]],0,0,0,0,0,0,0,0,0,[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[]],[[]],[[]],[[]],[[]],[[]],[41,42],[[[44,[43]]],[[44,[43]]]],[[[45,[43]]],[[45,[43]]]],[[[41,[43]]],[[41,[43]]]],[[]],[[]],[[]],[[],44],[9],[9],[9],[9],[9],[9],[[],[[17,[44]]]],[[],[[17,[45]]]],[32,[[17,[45,33]]]],[[],[[17,[41]]]],[32,[[17,[41,33]]]],[9],[9],[9],[[44,44],10],[[[45,[46]],45],10],[[[41,[46]],41],10],[[[44,[47]],13],14],[[[45,[47]],13],14],[[[41,[47]],13],14],[[41,13],14],[44,[[42,[41]]]],[[]],[[]],[[]],[23,[[17,[41]]]],[[],6],[[],6],[41,42],[44],[[[45,[48]]]],[[[41,[48]]]],[[],49],[[],9],[[],9],[[],9],[44,42],[[]],[[]],[[]],[[[19,[18]]],[[19,[1,18]]]],[[[19,[18]]],[[19,[1,18]]]],[[[19,[18]]],[[19,[1,18]]]],[20,[[20,[1]]]],[20,[[20,[1]]]],[20,[[20,[1]]]],[21,[[21,[1]]]],[21,[[21,[1]]]],[21,[[21,[1]]]],[7,17],[44,42],[[44,50],[[17,[[7,[41]]]]]],[[[45,[46]],45],10],[[[41,[46]],41],10],[[[51,[44]]],44],[9,44],0,[[44,41],17],[44,17],[[45,40],[[17,[33]]]],[45,17],[41,17],[[41,40],[[17,[33]]]],[45,9],[41,9],[[],44],[[],52],0,[[]],[[]],[[]],[[],52],[[],17],[[],17],[[],17],[[[53,[41]]],[[17,[41]]]],[[],17],[[],17],[[],17],[[],27],[[],27],[[],27],[45],[[]],[[]],[[]],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[[],1],[[],1],[[],1],[[],1],[[]],[[]],[[]],[[]],[54,54],[11,11],[[]],[[]],[[],11],[9],[9],[9],[9],[[],[[17,[54]]]],[9],[9],[[54,54],10],[[54,13],14],[[54,13],[[17,[55]]]],[[11,13],14],[[],54],[[]],[[]],[[],6],[54],[[],49],[[],9],[[],9],[[]],[[]],[[[19,[18]]],[[19,[1,18]]]],[[[19,[18]]],[[19,[1,18]]]],[20,[[20,[1]]]],[20,[[20,[1]]]],[21,[[21,[1]]]],[21,[[21,[1]]]],[[],56],[[],54],[[],52],[[54,54],10],[[],54],[[],9],[[],54],[54,17],[[],57],[[]],[[]],[[],52],[[],17],[[],17],[[],17],[[],17],[[],27],[[],27],[[],54],[[],54],[[]],[[]],0,0,0,[[],1],[[],1],0,[[]],[[]],[9],[9],[9],[[58,13],14],[[]],[[],9],[[]],[[[19,[18]]],[[19,[1,18]]]],[20,[[20,[1]]]],[21,[[21,[1]]]],[[58,[0,[59,60,61]]],62],0,[[22,23],[[17,[58,16]]]],[58,[[17,[[63,[25]],16]]]],[[22,23],[[17,[58,16]]]],[[58,63],[[17,[16]]]],[[],17],[[],17],[[],27],[[]],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[64,65],[64,65],[[6,6,10],66],0,0,[[67,6,68],[[17,[[42,[67]]]]]],[69,69],[70,70],[71,71],[67,67],[[[72,[43,43]]],[[72,[43,43]]]],[[[66,[43]]],[[66,[43]]]],[73,73],[[[77,[[0,[43,43,47,46,74,48,75,76]]]]],[[77,[[0,[43,43,47,46,74,48,75,76]]]]]],[[[68,[43]]],[[68,[43]]]],[[[78,[43]]],[[78,[43]]]],[[[65,[43]]],[[65,[43]]]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[65,73],[[],69],[[],70],[[],71],[[],67],[9],[9],[9],[9],[9],[9],[9],[9],[9],[9],[9],[9],[9],[9],[9],[9],[9],[9],[9],[9],[9],[9],[9],[9],[[],[[17,[69,33]]]],[[],[[17,[69]]]],[32,[[17,[70,33]]]],[[],[[17,[70]]]],[[],[[17,[71]]]],[32,[[17,[71,33]]]],[32,[[17,[67,33]]]],[[],[[17,[67]]]],[[],[[17,[66]]]],[[],[[17,[73]]]],[32,[[17,[73,33]]]],[32,[[17,[[77,[[0,[43,47,46,74,48,75,76]]]],33]]]],[[],[[17,[[77,[[0,[43,47,46,74,48,75,76]]]]]]]],[32,[[17,[68,33]]]],[[],[[17,[68]]]],[[],[[17,[78]]]],[[],[[17,[65]]]],[32,[[17,[70,33]]]],[32,[[17,[71,33]]]],[32,[[17,[73,33]]]],[32,[[17,[[77,[[0,[43,47,46,74,48,75,76]]]],33]]]],[32,[[17,[68,33]]]],[32,[[17,[70,33]]]],[32,[[17,[71,33]]]],[32,[[17,[73,33]]]],[32,[[17,[[77,[[0,[43,47,46,74,48,75,76]]]],33]]]],[32,[[17,[68,33]]]],[9],[9],[9],[9],[9],[9],[9],[9],[9],[9],[9],[9],[[],67],[[69,69],10],[[70,70],10],[[71,71],10],[[67,67],10],[[[72,[46,46]],72],10],[[[66,[46]],66],10],[[73,73],10],[[[77,[[0,[46,43,47,46,74,48,75,76]]]],77],10],[[[68,[46]],68],10],[[[78,[46]],78],10],[[[65,[46]],65],10],[72,[[17,[79]]]],0,[[69,13],14],[[70,13],14],[[71,13],14],[[67,13],14],[[67,13],14],[[[72,[47,47]],13],14],[[[66,[47]],13],14],[[73,13],14],[[[77,[[0,[43,47,46,74,48,75,76]]]],13],14],[[[77,[[0,[47,43,47,46,74,48,75,76]]]],13],14],[[[68,[47]],13],14],[[[78,[47]],13],14],[[[65,[47]],13],14],[[65,6],[[72,[68]]]],[[]],[[]],[56,69],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[[64,[[0,[43,75,47,46,74,48,80,76]]]]],[[65,[[0,[43,75,47,46,74,48,80,76]]]]]],[[]],[65,[[42,[64]]]],[[73,78],[[42,[64]]]],[23,[[17,[67]]]],[23,[[17,[[77,[[0,[43,47,46,74,48,75,76]]]]]]]],[65,78],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[66,6,6],[[72,[[7,[70]]]]]],[[65,6],[[72,[68]]]],[[67,67,67],67],[69],[70],[71],[67],[[[72,[48,48]]]],[[[66,[48]]]],[73],[[[77,[[0,[48,43,47,46,74,48,75,76]]]]]],[[[68,[48]]]],[[[78,[48]]]],[[[65,[48]]]],[[],49],[[],49],[65,56],0,0,0,[[],9],[[],9],[[],9],[[],9],[[],9],[[],9],[[],9],[[],9],[[],9],[[],9],[[],9],[[],9],[[66,6,6],66],[[66,6,6]],[[66,6]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[[19,[18]]],[[19,[1,18]]]],[[[19,[18]]],[[19,[1,18]]]],[[[19,[18]]],[[19,[1,18]]]],[[[19,[18]]],[[19,[1,18]]]],[[[19,[18]]],[[19,[1,18]]]],[[[19,[18]]],[[19,[1,18]]]],[[[19,[18]]],[[19,[1,18]]]],[[[19,[18]]],[[19,[1,18]]]],[[[19,[18]]],[[19,[1,18]]]],[[[19,[18]]],[[19,[1,18]]]],[[[19,[18]]],[[19,[1,18]]]],[[[19,[18]]],[[19,[1,18]]]],[20,[[20,[1]]]],[20,[[20,[1]]]],[20,[[20,[1]]]],[20,[[20,[1]]]],[20,[[20,[1]]]],[20,[[20,[1]]]],[20,[[20,[1]]]],[20,[[20,[1]]]],[20,[[20,[1]]]],[20,[[20,[1]]]],[20,[[20,[1]]]],[20,[[20,[1]]]],[21,[[21,[1]]]],[21,[[21,[1]]]],[21,[[21,[1]]]],[21,[[21,[1]]]],[21,[[21,[1]]]],[21,[[21,[1]]]],[21,[[21,[1]]]],[21,[[21,[1]]]],[21,[[21,[1]]]],[21,[[21,[1]]]],[21,[[21,[1]]]],[21,[[21,[1]]]],[64],[66,10],0,[72,72],[[70,70],10],[[71,71],10],[[67,67],10],[[[72,[46,46]],72],10],[[[66,[46]],66],10],[[73,73],10],[[[77,[[0,[46,43,47,46,74,48,75,76]]]],77],10],[[[68,[46]],68],10],[[[78,[46]],78],10],[[[65,[46]],65],10],[56,[[42,[64]]]],[[69,67,67],70],[[[7,[70]]],71],[71,68],[56,[[42,[65]]]],[[[19,[66]],[19,[66]],[19,[66]]],[[42,[66]]]],[6,66],0,[78,[[42,[68]]]],[65,6],0,0,0,0,0,0,[66,66],[64],[65],[[]],[[6,6,6],[[42,[66]]]],[[65,6,68],[[17,[42]]]],[[73,78],[[42,[65]]]],[[42,66,6]],0,0,[69,17],[69,[[17,[33]]]],[[70,40],[[17,[33]]]],[70,17],[[71,40],[[17,[33]]]],[71,17],[67,17],[[67,40],[[17,[33]]]],[66,17],[73,17],[[73,40],[[17,[33]]]],[[[77,[[0,[43,47,46,74,48,75,76]]]],40],[[17,[33]]]],[[[77,[[0,[43,47,46,74,48,75,76]]]]],17],[68,17],[[68,40],[[17,[33]]]],[78,17],[65,17],[[70,40],[[17,[33]]]],[[71,40],[[17,[33]]]],[[73,40],[[17,[33]]]],[[[77,[[0,[43,47,46,74,48,75,76]]]],40],[[17,[33]]]],[[68,40],[[17,[33]]]],[[70,40],[[17,[33]]]],[[71,40],[[17,[33]]]],[[73,40],[[17,[33]]]],[[[77,[[0,[43,47,46,74,48,75,76]]]],40],[[17,[33]]]],[[68,40],[[17,[33]]]],[69,9],[70,9],[71,9],[67,9],[73,9],[[[77,[[0,[43,47,46,74,48,75,76]]]]],9],[68,9],0,0,[[],52],[[],52],[[6,6],10],[67,[[7,[56]]]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],52],[[],52],[[],17],[9,[[17,[69]]]],[[],17],[[],17],[[],17],[[],17],[[[53,[67]]],[[17,[67]]]],[[],17],[[],17],[[],17],[[[53,[[77,[[0,[43,47,46,74,48,75,76]]]]]]],[[17,[[77,[[0,[43,47,46,74,48,75,76]]]]]]]],[[],17],[[],17],[[],17],[[],17],[[],17],[[],17],[[],17],[[],17],[[],17],[[],17],[[],17],[[],17],[[],17],[[],17],[[],17],[[],17],[[],27],[[],27],[[],27],[[],27],[[],27],[[],27],[[],27],[[],27],[[],27],[[],27],[[],27],[[],27],[70,9],[71,9],[73,9],[[[77,[[0,[43,47,46,74,48,75,76]]]]],9],[68,9],[66,67],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[[81,82],[[17,[83,84]]]],[[81,82],[[17,[84]]]],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],85],[86,[[42,[87]]]],0,0,[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[88,86],[89,86],[90,86],[91,86],[92,86],[93,86],[94,86],[95,86],0,0,[86,[[42,[85]]]],[[81,96,97,98],[[17,[99,84]]]],[98,98],[100,100],[101,101],[102,102],[103,103],[104,104],[[[88,[43]]],[[88,[43]]]],[[[89,[43]]],[[89,[43]]]],[90,90],[91,91],[92,92],[93,93],[[[94,[43,43]]],[[94,[43,43]]]],[95,95],[81,81],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[81,[[31,[81]]]],[[],23],[[6,6,6],37],0,[81,99],[[],81],[9],[9],[9],[9],[9],[9],[9],[9],[9],[9],[9],[9],[9],[9],[9],[9],[9],[9],[9],[9],[9],[9],[9],[9],[9],[9],[9],[9],[9],[9],[9],[9],[86,23],[[],[[17,[98]]]],[32,[[17,[98,33]]]],[[],[[17,[100]]]],[[],[[17,[101]]]],[32,[[17,[101,33]]]],[32,[[17,[102,33]]]],[[],[[17,[102]]]],[[],[[17,[103]]]],[32,[[17,[103,33]]]],[32,[[17,[104,33]]]],[[],[[17,[104]]]],[[],[[17,[86]]]],[[],[[17,[81]]]],[32,[[17,[98,33]]]],[32,[[17,[101,33]]]],[32,[[17,[102,33]]]],[32,[[17,[103,33]]]],[32,[[17,[104,33]]]],[32,[[17,[98,33]]]],[32,[[17,[101,33]]]],[32,[[17,[102,33]]]],[32,[[17,[103,33]]]],[32,[[17,[104,33]]]],[9],[9],[9],[9],[9],[9],[9],[9],[9],[9],[9],[9],[9],[9],[9],[9],0,[[98,98],10],[[100,100],10],[[101,101],10],[[102,102],10],[[103,103],10],[[104,104],10],[[81,81],10],[88,[[17,[86]]]],[89,[[17,[86]]]],[90,[[17,[86]]]],[91,[[17,[86]]]],[92,[[17,[86]]]],[93,[[17,[86]]]],[94,[[17,[86]]]],[95,[[17,[86]]]],[[98,13],14],[[98,13],14],[[100,13],14],[[101,13],14],[[102,13],14],[[103,13],14],[[104,13],14],[[[88,[47]],13],14],[[[89,[47]],13],14],[[90,13],14],[[91,13],14],[[92,13],14],[[93,13],14],[[[94,[47,47]],13],14],[[95,13],14],[[86,13],14],[[86,13],14],[[81,13],14],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[33,86],[[]],[23,[[17,[98]]]],[[105,6,6,6,106,107,[41,[108]],97,103],[[17,[86]]]],[[105,6,6,6,107,[41,[108]],97,103],[[17,[86]]]],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[104,97],[98],[100],[101],[102],[103],[104],[[],49],[[],49],0,[[]],[[],9],[[],9],[[],9],[[],9],[[],9],[[],9],[[],9],[[],9],[[],9],[[],9],[[],9],[[],9],[[],9],[[],9],[[],9],[[],9],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[[19,[18]]],[[19,[1,18]]]],[[[19,[18]]],[[19,[1,18]]]],[[[19,[18]]],[[19,[1,18]]]],[[[19,[18]]],[[19,[1,18]]]],[[[19,[18]]],[[19,[1,18]]]],[[[19,[18]]],[[19,[1,18]]]],[[[19,[18]]],[[19,[1,18]]]],[[[19,[18]]],[[19,[1,18]]]],[[[19,[18]]],[[19,[1,18]]]],[[[19,[18]]],[[19,[1,18]]]],[[[19,[18]]],[[19,[1,18]]]],[[[19,[18]]],[[19,[1,18]]]],[[[19,[18]]],[[19,[1,18]]]],[[[19,[18]]],[[19,[1,18]]]],[[[19,[18]]],[[19,[1,18]]]],[[[19,[18]]],[[19,[1,18]]]],[20,[[20,[1]]]],[20,[[20,[1]]]],[20,[[20,[1]]]],[20,[[20,[1]]]],[20,[[20,[1]]]],[20,[[20,[1]]]],[20,[[20,[1]]]],[20,[[20,[1]]]],[20,[[20,[1]]]],[20,[[20,[1]]]],[20,[[20,[1]]]],[20,[[20,[1]]]],[20,[[20,[1]]]],[20,[[20,[1]]]],[20,[[20,[1]]]],[20,[[20,[1]]]],[21,[[21,[1]]]],[21,[[21,[1]]]],[21,[[21,[1]]]],[21,[[21,[1]]]],[21,[[21,[1]]]],[21,[[21,[1]]]],[21,[[21,[1]]]],[21,[[21,[1]]]],[21,[[21,[1]]]],[21,[[21,[1]]]],[21,[[21,[1]]]],[21,[[21,[1]]]],[21,[[21,[1]]]],[21,[[21,[1]]]],[21,[[21,[1]]]],[21,[[21,[1]]]],[88,86],[89,86],[90,86],[91,86],[92,86],[93,86],[94,86],[95,86],0,0,[[98,98],10],[[101,101],10],[[102,102],10],[[103,103],10],[[104,104],10],[[81,81],10],0,[101,6],[101,39],[102,39],[101,35],[102,35],0,[81,[[96,[98]]]],[101,37],0,[[98,40],[[17,[33]]]],[98,17],[100,17],[[101,40],[[17,[33]]]],[101,17],[102,17],[[102,40],[[17,[33]]]],[103,17],[[103,40],[[17,[33]]]],[[104,40],[[17,[33]]]],[104,17],[86,17],[81,17],[[98,40],[[17,[33]]]],[[101,40],[[17,[33]]]],[[102,40],[[17,[33]]]],[[103,40],[[17,[33]]]],[[104,40],[[17,[33]]]],[[98,40],[[17,[33]]]],[[101,40],[[17,[33]]]],[[102,40],[[17,[33]]]],[[103,40],[[17,[33]]]],[[104,40],[[17,[33]]]],[98,9],[101,9],[102,9],[103,9],[104,9],0,[86,[[42,[85]]]],0,0,[101,36],0,0,0,[[],52],[101,109],0,0,[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],52],[[],52],[104,37],[[],17],[[[53,[98]]],[[17,[98]]]],[[],17],[[],17],[[],17],[[],17],[[],17],[[],17],[[],17],[[],17],[[],17],[[],17],[[],17],[[],17],[[],17],[[],17],[[],17],[[],17],[[],17],[[],17],[[],17],[[],17],[[],17],[[],17],[[],17],[[],17],[[],17],[[],17],[[],17],[[],17],[[],17],[[],17],[[],17],[[],27],[[],27],[[],27],[[],27],[[],27],[[],27],[[],27],[[],27],[[],27],[[],27],[[],27],[[],27],[[],27],[[],27],[[],27],[[],27],0,[98,9],[101,9],[102,9],[103,9],[104,9],[[81,82],[[17,[83,84]]]],[[101,6,110,111],[[17,[86]]]],[[102,6,110,111],[[17,[86]]]],[[103,6,110,111],[[17,[86]]]],[[104,25,98],[[17,[99,84]]]],0,0,0,[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],0,0,0,0,0,0,[[],[[17,[76,33]]]],0,[[],[[17,[76,33]]]],[[],[[17,[[7,[56]],33]]]],[[],[[17,[[7,[56]],33]]]],[[6,110,109,111,111,103],10],[[112,6,110,109,106,111,111],[[42,[103]]]],0,0,0,0,0,0,0,0,0,[28,[[30,[15]]]],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[]],[[]],[[]],[[]],[[]],[[]],[[113,114,115],[[17,[10,115]]]],[15,15],[116,116],[113,113],[[]],[[]],[[]],[[15,114],42],[[],15],[9],[9],[9],[9],[9],[9],[[],[[17,[15]]]],[32,[[17,[116,33]]]],[[],[[17,[116]]]],[[],[[17,[113]]]],[32,[[17,[113,33]]]],[32,[[17,[113,33]]]],[32,[[17,[113,33]]]],[9],[9],[9],[[15,15],10],[[116,116],10],[[113,113],10],[[15,13],14],[[116,13],14],[[113,13],14],[[15,114],[[42,[113]]]],[[]],[[]],[[]],[[],6],[[],6],[15,115],[116],[113],[[],9],[[],9],[[],9],[[15,114],42],[[]],[[]],[[]],[[[19,[18]]],[[19,[1,18]]]],[[[19,[18]]],[[19,[1,18]]]],[[[19,[18]]],[[19,[1,18]]]],[20,[[20,[1]]]],[20,[[20,[1]]]],[20,[[20,[1]]]],[21,[[21,[1]]]],[21,[[21,[1]]]],[21,[[21,[1]]]],[15,17],[[15,50],[[17,[[7,[113]],115]]]],[[116,116],10],[[113,113],10],[[[19,[15]],[19,[15]]],15],[[9,114],15],0,[[15,114,113],[[17,[115]]]],[15,17],[[116,40],[[17,[33]]]],[116,17],[[113,40],[[17,[33]]]],[113,17],[[113,40],[[17,[33]]]],[[113,40],[[17,[33]]]],[116,9],[113,9],0,[[7,115],[[17,[115]]]],[115,15],0,[[]],[[]],[[]],[[],17],[[],17],[[],17],[[],17],[[],17],[[],17],[[],27],[[],27],[[],27],[113,9],[116,115],[[]],[[]],[[]],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[115,115],115],[117,117],[115,115],[[]],[[]],[118,[[31,[118]]]],[117,[[31,[117]]]],[9],[9],[9],[119,115],[9],[9],[9],[9],[9],[32,[[17,[117,33]]]],[32,[[17,[115,33]]]],[[],[[17,[115]]]],[32,[[17,[117,33]]]],[32,[[17,[115,33]]]],[32,[[17,[117,33]]]],[32,[[17,[115,33]]]],[9],[9],[9],[9],[114,[[121,[56,120]]]],[[117,117],10],[[115,115],10],[[117,13],14],[[115,13],14],[[115,13],14],[[]],[[]],[[]],[[]],[23,[[17,[115]]]],[[],6],[[],6],[118,115],[117],[115],[[],49],[[],9],[[],9],[[],9],[[],9],[[]],[[]],[[]],[[]],[[[19,[18]]],[[19,[1,18]]]],[[[19,[18]]],[[19,[1,18]]]],[[[19,[18]]],[[19,[1,18]]]],[[[19,[18]]],[[19,[1,18]]]],[20,[[20,[1]]]],[20,[[20,[1]]]],[20,[[20,[1]]]],[20,[[20,[1]]]],[21,[[21,[1]]]],[21,[[21,[1]]]],[21,[[21,[1]]]],[21,[[21,[1]]]],[114,115],[[117,117],10],[[115,115],10],[[117,40],[[17,[33]]]],[115,17],[[115,40],[[17,[33]]]],[[117,40],[[17,[33]]]],[[115,40],[[17,[33]]]],[[117,40],[[17,[33]]]],[[115,40],[[17,[33]]]],[117,9],[115,9],[[],52],[[]],[[]],[[],52],[[],17],[[],17],[[],17],[[[53,[115]]],[[17,[115]]]],[[],17],[[],17],[[],17],[[],17],[[],17],[[],27],[[],27],[[],27],[[],27],[117,9],[115,9],[[]],[[]],[[]],[[]],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[28,[[30,[36]]]],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[36,122],[123,124],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[36,36],[123,123],[125,125],[126,126],[127,127],[128,128],[129,129],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[36,36],130],[36,[[31,[36]]]],[126,[[31,[126]]]],[127,[[31,[127]]]],[128,[[31,[128]]]],[129,[[31,[129]]]],[[],23],[9],[9],[9],[9],[9],[9],[9],[9],[9],[9],[9],[9],[9],[9],[9],[9],[[],[[17,[36]]]],[[],[[17,[36,33]]]],[[],[[17,[123,33]]]],[[],[[17,[123]]]],[32,[[17,[126,33]]]],[[],[[17,[126]]]],[[],[[17,[127]]]],[32,[[17,[127,33]]]],[[],[[17,[128]]]],[[],[[17,[129]]]],[32,[[17,[126,33]]]],[32,[[17,[127,33]]]],[32,[[17,[126,33]]]],[32,[[17,[127,33]]]],[9],[9],[9],[9],[9],[9],[9],[9],[[36,36],10],[[123,123],10],[[125,125],10],[[126,126],10],[[36,13],14],[[36,13],14],[[123,13],14],[[123,13],14],[[125,13],14],[[126,13],14],[[126,13],14],[[127,13],14],[[128,13],14],[[129,13],14],[[]],[106,36],[[[122,[[132,[131]]]]],36],[[]],[[]],[124,123],[[]],[[]],[[]],[[]],[[]],[133,[[42,[36]]]],[[],36],[23,[[17,[36]]]],[23,[[17,[123]]]],[23,[[17,[126]]]],[[]],[6],[[],6],[[],6],[[],6],[[],6],[36],[123],[125],[126],[[],49],[[],49],[[],49],[[],9],[[],9],[[],9],[[],9],[[],9],[[],9],[[],9],[[],9],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[[19,[18]]],[[19,[1,18]]]],[[[19,[18]]],[[19,[1,18]]]],[[[19,[18]]],[[19,[1,18]]]],[[[19,[18]]],[[19,[1,18]]]],[[[19,[18]]],[[19,[1,18]]]],[[[19,[18]]],[[19,[1,18]]]],[[[19,[18]]],[[19,[1,18]]]],[[[19,[18]]],[[19,[1,18]]]],[20,[[20,[1]]]],[20,[[20,[1]]]],[20,[[20,[1]]]],[20,[[20,[1]]]],[20,[[20,[1]]]],[20,[[20,[1]]]],[20,[[20,[1]]]],[20,[[20,[1]]]],[21,[[21,[1]]]],[21,[[21,[1]]]],[21,[[21,[1]]]],[21,[[21,[1]]]],[21,[[21,[1]]]],[21,[[21,[1]]]],[21,[[21,[1]]]],[21,[[21,[1]]]],[[36,36],10],[[123,123],10],[[126,126],10],[[36,36],[[42,[130]]]],[36,17],[[36,40],[[17,[33]]]],[[123,40],[[17,[33]]]],[123,17],[[126,40],[[17,[33]]]],[126,17],[127,17],[[127,40],[[17,[33]]]],[128,17],[129,17],[[126,40],[[17,[33]]]],[[127,40],[[17,[33]]]],[[126,40],[[17,[33]]]],[[127,40],[[17,[33]]]],[36,9],[123,9],[126,9],[127,9],[[],124],[[],52],[[],52],[[],52],[36,133],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],52],[[],52],[[],52],[[],17],[[[53,[36]]],[[17,[36]]]],[[],17],[[[53,[123]]],[[17,[123]]]],[[],17],[[],17],[[[53,[126]]],[[17,[126]]]],[[],17],[[],17],[[],17],[[],17],[[],17],[[],17],[[],17],[[],17],[[],17],[[],17],[[],17],[[],17],[[],27],[[],27],[[],27],[[],27],[[],27],[[],27],[[],27],[[],27],[126,9],[127,9],[[36,124],10],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[[109,6]],[[109,6]],[3,[[17,[84]]]],[[3,134],[[17,[3,84]]]],[37,111],[25,[[17,[25]]]],[[135,136],[[17,[15,84]]]],[[135,136],[[17,[84]]]],[28,[[30,[3]]]],[28,[[30,[137]]]],[28,[[30,[138]]]],[28,[[30,[34]]]],[28,[[30,[110]]]],[28,[[30,[25]]]],[28,[[30,[137]]]],[28,[[30,[138]]]],[28,[[30,[110]]]],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],85],[110],[84,[[42,[87]]]],0,[25,6],0,[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[139,84],[140,84],[141,84],[142,84],[143,84],[144,84],[145,84],[146,84],[147,84],[148,84],[149,84],[150,84],[151,84],[152,84],[153,84],[154,84],[155,84],[156,84],[157,84],[158,84],[159,84],[160,84],[161,84],[[162,163,42],[[31,[134]]]],0,[[164,[7,[113]]],134],[84,[[42,[85]]]],0,0,[[135,96,113,114],[[17,[115,84]]]],[109,109],[162,162],[163,163],[134,134],[165,165],[3,3],[137,137],[[[139,[43]]],[[139,[43]]]],[140,140],[141,141],[142,142],[143,143],[144,144],[145,145],[146,146],[147,147],[[[148,[43]]],[[148,[43]]]],[[[149,[43,43]]],[[149,[43,43]]]],[[[150,[43]]],[[150,[43]]]],[151,151],[152,152],[153,153],[154,154],[155,155],[[[156,[43]]],[[156,[43]]]],[157,157],[158,158],[159,159],[160,160],[161,161],[84,84],[138,138],[166,166],[167,167],[168,168],[135,135],[169,169],[[[170,[43]]],[[170,[43]]]],[34,34],[110,110],[25,25],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[109,109],130],[[110,110],130],0,[162,[[31,[162]]]],[134,[[31,[134]]]],[165,[[31,[165]]]],[3,[[31,[3]]]],[166,[[31,[166]]]],[167,[[31,[167]]]],[168,[[31,[168]]]],[135,[[31,[135]]]],[34,[[31,[34]]]],[25,[[31,[25]]]],[25],[25,171],0,[3,[[96,[31]]]],[135,9],0,0,[135,115],[[],165],[[],135],[[],34],[[],110],[[],25],[9],[109],[9],[9],[9],[9],[9],[9],[9],[9],[9],[9],[9],[9],[9],[9],[9],[9],[9],[9],[9],[9],[9],[9],[9],[9],[9],[9],[9],[9],[9],[9],[9],[9],[9],[9],[9],[9],[9],[170],[9],[9],[9],[9],[9],[9],[9],[9],[9],[9],[9],[9],[9],[9],[9],[9],[9],[9],[9],[9],[9],[9],[9],[9],[9],[9],[9],[9],[9],[9],[9],[9],[9],[9],[9],[9],[9],[9],[9],[9],[9],[9],[9],[9],[84,23],[[],[[17,[109,33]]]],[[],[[17,[109]]]],[[],[[17,[162,33]]]],[[],[[17,[162]]]],[[],[[17,[163,33]]]],[[],[[17,[163]]]],[32,[[17,[134,33]]]],[[],[[17,[134]]]],[32,[[17,[165,33]]]],[[],[[17,[165]]]],[32,[[17,[3,33]]]],[[],[[17,[3]]]],[32,[[17,[137,33]]]],[[],[[17,[137]]]],[[],[[17,[84]]]],[[],[[17,[138]]]],[32,[[17,[138,33]]]],[[],[[17,[166]]]],[[],[[17,[167]]]],[[],[[17,[168]]]],[[],[[17,[135]]]],[[],[[17,[169]]]],[32,[[17,[[170,[76]],33]]]],[[],[[17,[170]]]],[[],[[17,[34]]]],[32,[[17,[34,33]]]],[32,[[17,[110,33]]]],[[],[[17,[110]]]],[[],[[17,[25]]]],[[],[[17,[109,33]]]],[32,[[17,[134,33]]]],[32,[[17,[165,33]]]],[32,[[17,[3,33]]]],[32,[[17,[137,33]]]],[32,[[17,[138,33]]]],[32,[[17,[34,33]]]],[[],[[17,[109,33]]]],[32,[[17,[134,33]]]],[32,[[17,[165,33]]]],[32,[[17,[3,33]]]],[32,[[17,[137,33]]]],[32,[[17,[138,33]]]],[32,[[17,[34,33]]]],[9],[9],[9],[9],[9],[9],[9],[9],[9],[9],[9],[9],[9],[9],[9],[9],[9],[9],[9],[9],[9],[9],[9],[9],[9],[9],[9],[9],[9],[9],[9],[9],[9],[9],[9],[9],[9],[9],[9],[9],[9],[[109,109],10],[[162,162],10],[[163,163],10],[[134,134],10],[[165,165],10],[[3,3],10],[[137,137],10],[[138,138],10],[[135,135],10],[[[170,[46]],170],10],[[34,34],10],[[110,110],10],[[25,25],10],0,[139,[[17,[84]]]],[140,[[17,[84]]]],[141,[[17,[84]]]],[142,[[17,[84]]]],[143,[[17,[84]]]],[144,[[17,[84]]]],[145,[[17,[84]]]],[146,[[17,[84]]]],[147,[[17,[84]]]],[148,[[17,[84]]]],[149,[[17,[84]]]],[150,[[17,[84]]]],[151,[[17,[84]]]],[152,[[17,[84]]]],[153,[[17,[84]]]],[154,[[17,[84]]]],[155,[[17,[84]]]],[156,[[17,[84]]]],[157,[[17,[84]]]],[158,[[17,[84]]]],[159,[[17,[84]]]],[160,[[17,[84]]]],[161,[[17,[84]]]],[[109,13],[[17,[55]]]],[[162,13],14],[[163,13],14],[[163,13],14],[[134,13],14],[[165,13],14],[[3,13],14],[[137,13],14],[[137,13],14],[[[139,[47]],13],14],[[140,13],14],[[141,13],14],[[142,13],14],[[143,13],14],[[144,13],14],[[145,13],14],[[146,13],14],[[147,13],14],[[[148,[47]],13],14],[[[149,[47,47]],13],14],[[[150,[47]],13],14],[[151,13],14],[[152,13],14],[[153,13],14],[[154,13],14],[[155,13],14],[[[156,[47]],13],14],[[157,13],14],[[158,13],14],[[159,13],14],[[160,13],14],[[161,13],14],[[84,13],14],[[84,13],14],[[138,13],14],[[138,13],14],[[166,13],14],[[167,13],14],[[168,13],14],[[135,13],14],[[169,13],14],[[[170,[47]],13],14],[[34,13],14],[[110,13],14],[[110,13],14],[[25,13],14],[[]],[[]],[[]],[[]],[[]],[[]],[[[31,[3]]],137],[172,137],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[172,138],[[]],[[]],[[]],[[]],[[]],[20,170],[[]],[[]],[[],110],[[[51,[56,173]]],110],[[]],[[]],[23,[[17,[163]]]],[23,[[17,[137]]]],[23,[[17,[138]]]],[23,[[17,[110]]]],[[],109],[29,3],[29,25],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[109],[162],[162,[[31,[162]]]],[163],[134],[134],[165],[3],[137],[138],[[[170,[48]]]],[34],[25],[[],49],[[],49],[[],49],[[],49],[[],49],0,0,0,[[]],[[],9],[[],9],[[],9],[[],9],[[],9],[[],9],[[],9],[[],9],[[],9],[[],9],[[],9],[[],9],[[],9],[[],9],[[],9],[[],9],[[],9],[[],9],[[],9],[[],9],[[],9],[[],9],[[],9],[[],9],[[],9],[[],9],[[],9],[[],9],[[],9],[[],9],[[],9],[[],9],[[],9],[[],9],[[],9],[[],9],[[],9],[[],9],[[],9],[[],9],[[],9],[162,9],[162,[[7,[114]]]],[134,[[7,[114]]]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[[19,[18]]],[[19,[1,18]]]],[[[19,[18]]],[[19,[1,18]]]],[[[19,[18]]],[[19,[1,18]]]],[[[19,[18]]],[[19,[1,18]]]],[[[19,[18]]],[[19,[1,18]]]],[[[19,[18]]],[[19,[1,18]]]],[[[19,[18]]],[[19,[1,18]]]],[[[19,[18]]],[[19,[1,18]]]],[[[19,[18]]],[[19,[1,18]]]],[[[19,[18]]],[[19,[1,18]]]],[[[19,[18]]],[[19,[1,18]]]],[[[19,[18]]],[[19,[1,18]]]],[[[19,[18]]],[[19,[1,18]]]],[[[19,[18]]],[[19,[1,18]]]],[[[19,[18]]],[[19,[1,18]]]],[[[19,[18]]],[[19,[1,18]]]],[[[19,[18]]],[[19,[1,18]]]],[[[19,[18]]],[[19,[1,18]]]],[[[19,[18]]],[[19,[1,18]]]],[[[19,[18]]],[[19,[1,18]]]],[[[19,[18]]],[[19,[1,18]]]],[[[19,[18]]],[[19,[1,18]]]],[[[19,[18]]],[[19,[1,18]]]],[[[19,[18]]],[[19,[1,18]]]],[[[19,[18]]],[[19,[1,18]]]],[[[19,[18]]],[[19,[1,18]]]],[[[19,[18]]],[[19,[1,18]]]],[[[19,[18]]],[[19,[1,18]]]],[[[19,[18]]],[[19,[1,18]]]],[[[19,[18]]],[[19,[1,18]]]],[[[19,[18]]],[[19,[1,18]]]],[[[19,[18]]],[[19,[1,18]]]],[[[19,[18]]],[[19,[1,18]]]],[[[19,[18]]],[[19,[1,18]]]],[[[19,[18]]],[[19,[1,18]]]],[[[19,[18]]],[[19,[1,18]]]],[[[19,[18]]],[[19,[1,18]]]],[[[19,[18]]],[[19,[1,18]]]],[[[19,[18]]],[[19,[1,18]]]],[[[19,[18]]],[[19,[1,18]]]],[[[19,[18]]],[[19,[1,18]]]],[20,[[20,[1]]]],[20,[[20,[1]]]],[20,[[20,[1]]]],[20,[[20,[1]]]],[20,[[20,[1]]]],[20,[[20,[1]]]],[20,[[20,[1]]]],[20,[[20,[1]]]],[20,[[20,[1]]]],[20,[[20,[1]]]],[20,[[20,[1]]]],[20,[[20,[1]]]],[20,[[20,[1]]]],[20,[[20,[1]]]],[20,[[20,[1]]]],[20,[[20,[1]]]],[20,[[20,[1]]]],[20,[[20,[1]]]],[20,[[20,[1]]]],[20,[[20,[1]]]],[20,[[20,[1]]]],[20,[[20,[1]]]],[20,[[20,[1]]]],[20,[[20,[1]]]],[20,[[20,[1]]]],[20,[[20,[1]]]],[20,[[20,[1]]]],[20,[[20,[1]]]],[20,[[20,[1]]]],[20,[[20,[1]]]],[20,[[20,[1]]]],[20,[[20,[1]]]],[20,[[20,[1]]]],[20,[[20,[1]]]],[20,[[20,[1]]]],[20,[[20,[1]]]],[20,[[20,[1]]]],[20,[[20,[1]]]],[20,[[20,[1]]]],[20,[[20,[1]]]],[20,[[20,[1]]]],[21,[[21,[1]]]],[21,[[21,[1]]]],[21,[[21,[1]]]],[21,[[21,[1]]]],[21,[[21,[1]]]],[21,[[21,[1]]]],[21,[[21,[1]]]],[21,[[21,[1]]]],[21,[[21,[1]]]],[21,[[21,[1]]]],[21,[[21,[1]]]],[21,[[21,[1]]]],[21,[[21,[1]]]],[21,[[21,[1]]]],[21,[[21,[1]]]],[21,[[21,[1]]]],[21,[[21,[1]]]],[21,[[21,[1]]]],[21,[[21,[1]]]],[21,[[21,[1]]]],[21,[[21,[1]]]],[21,[[21,[1]]]],[21,[[21,[1]]]],[21,[[21,[1]]]],[21,[[21,[1]]]],[21,[[21,[1]]]],[21,[[21,[1]]]],[21,[[21,[1]]]],[21,[[21,[1]]]],[21,[[21,[1]]]],[21,[[21,[1]]]],[21,[[21,[1]]]],[21,[[21,[1]]]],[21,[[21,[1]]]],[21,[[21,[1]]]],[21,[[21,[1]]]],[21,[[21,[1]]]],[21,[[21,[1]]]],[21,[[21,[1]]]],[21,[[21,[1]]]],[21,[[21,[1]]]],[139,84],[140,84],[141,84],[142,84],[143,84],[144,84],[145,84],[146,84],[147,84],[148,84],[149,84],[150,84],[151,84],[152,84],[153,84],[154,84],[155,84],[156,84],[157,84],[158,84],[159,84],[160,84],[161,84],[84,10],[3,10],[162,10],[134,10],[162,54],[134],[3,9],0,0,[[109,109],10],[[162,162],10],[[163,163],10],[[134,134],10],[[165,165],10],[[3,3],10],[[137,137],10],[[138,138],10],[[135,135],10],[[[170,[46]],170],10],[[110,110],10],[6,109],[171,3],[174,84],[[],170],[[175,[20,[176]],6],34],[[34,26,126,37,177],25],[25],[25],0,0,[25,9],[25,115],0,0,0,[25],[[162,178,178],[[17,[179,180]]]],[[134,178,178],[[17,[179,180]]]],[162,[[7,[39]]]],[134,[[7,[39]]]],[162,9],[134,9],[162,[[42,[[7,[35]]]]]],[134,[[42,[[7,[35]]]]]],0,[[109,109],[[42,[130]]]],[[110,110],[[42,[130]]]],0,0,0,0,0,0,0,0,0,[134,7],[135,[[96,[114]]]],0,0,0,0,0,[109,[[17,[33]]]],[109,17],[162,17],[[162,40],[[17,[33]]]],[163,17],[[163,40],[[17,[33]]]],[134,17],[[134,40],[[17,[33]]]],[165,17],[[165,40],[[17,[33]]]],[[3,40],[[17,[33]]]],[3,17],[137,17],[[137,40],[[17,[33]]]],[84,17],[[138,40],[[17,[33]]]],[138,17],[166,17],[167,17],[168,17],[135,17],[169,17],[170,17],[[[170,[75]],40],[[17,[33]]]],[34,17],[[34,40],[[17,[33]]]],[110,17],[[110,40],[[17,[33]]]],[25,17],[109,[[17,[33]]]],[[134,40],[[17,[33]]]],[[165,40],[[17,[33]]]],[[3,40],[[17,[33]]]],[[137,40],[[17,[33]]]],[[138,40],[[17,[33]]]],[[34,40],[[17,[33]]]],[109,[[17,[33]]]],[[134,40],[[17,[33]]]],[[165,40],[[17,[33]]]],[[3,40],[[17,[33]]]],[[137,40],[[17,[33]]]],[[138,40],[[17,[33]]]],[[34,40],[[17,[33]]]],[109,9],[162,9],[163,9],[134,9],[165,9],[3,9],[137,9],[138,9],[[[170,[75]]],9],[34,9],[110,9],[[134,[7,[113]]]],[9],[9],[9],[84,[[42,[85]]]],0,0,[[],52],[[],52],[[],52],[[],52],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],52],[[],52],[[],52],[[],52],[[],52],0,0,[[],17],[[],17],[[[53,[163]]],[[17,[163]]]],[[],17],[[],17],[[],17],[[],17],[[],17],[[[53,[137]]],[[17,[137]]]],[[],17],[[],17],[[],17],[[],17],[[],17],[[],17],[[],17],[[],17],[[],17],[[],17],[[],17],[[],17],[[],17],[[],17],[[],17],[[],17],[[],17],[[],17],[[],17],[[],17],[[],17],[[],17],[[],17],[[],17],[[[53,[138]]],[[17,[138]]]],[[],17],[[],17],[[],17],[[],17],[[],17],[[],17],[[],17],[[],17],[[],17],[[[53,[110]]],[[17,[110]]]],[[],17],[[],17],[[],17],[[],17],[[],17],[[],17],[[],17],[[],17],[[],17],[[],17],[[],17],[[],17],[[],17],[[],17],[[],17],[[],17],[[],17],[[],17],[[],17],[[],17],[[],17],[[],17],[[],17],[[],17],[[],17],[[],17],[[],17],[[],17],[[],17],[[],17],[[],17],[[],17],[[],17],[[],17],[[],17],[[],17],[[],17],[[],17],[[],17],[[],17],[[],17],[[],17],0,[3,7],[[],27],[[],27],[[],27],[[],27],[[],27],[[],27],[[],27],[[],27],[[],27],[[],27],[[],27],[[],27],[[],27],[[],27],[[],27],[[],27],[[],27],[[],27],[[],27],[[],27],[[],27],[[],27],[[],27],[[],27],[[],27],[[],27],[[],27],[[],27],[[],27],[[],27],[[],27],[[],27],[[],27],[[],27],[[],27],[[],27],[[],27],[[],27],[[],27],[[],27],[[],27],0,[109,9],[134,9],[165,9],[3,9],[137,9],[138,9],[34,9],[[25,[7,[163]]],[[17,[15,84]]]],[[135,136],[[17,[15,84]]]],[25,26],[25,[[17,[84]]]],[[25,109,171,165,[7,[163]]],[[17,[169,84]]]],[25,10],[[25,109,171,165,[7,[163]]],[[17,[84]]]],0,0,[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],0,0,0,0,0,0,0,0,0,0,0,0,0,[[],[[17,[76,33]]]],0,[[],[[17,[76,33]]]],[[],[[17,[[7,[56]],33]]]],[[],[[17,[[7,[56]],33]]]],[181,[[17,[[17,[52]]]]]],[[17,182],17],0,0,0,0,0,[28,[[30,[171]]]],[28,[[30,[171]]]],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],183],[[]],[171],[[],[[17,[184]]]],0,[[]],[[]],[[]],[[]],[[]],[[]],0,[171,171],[185,185],[[]],[[]],0,[185,[[31,[185]]]],[186,171],[[],185],[9],[9],[9],[9],[9],[9],[32,[[17,[171,33]]]],[[],[[17,[171]]]],[32,[[17,[185,33]]]],[[],[[17,[185]]]],[32,[[17,[171,33]]]],[32,[[17,[185,33]]]],[32,[[17,[171,33]]]],[32,[[17,[185,33]]]],[9],[9],[9],[[]],[[]],[[171,171],10],[[185,185],10],[[171,13],14],[[171,13],14],[[185,13],14],[[186,13],14],[[[31,[25]]],171],[[]],[37,185],[[]],[[]],[23,[[17,[171]]]],[[],6],[[],6],[171],[185],[[],49],0,0,[[],9],[[],9],[[],9],[[]],[[]],[[]],[[[19,[18]]],[[19,[1,18]]]],[[[19,[18]]],[[19,[1,18]]]],[[[19,[18]]],[[19,[1,18]]]],[20,[[20,[1]]]],[20,[[20,[1]]]],[20,[[20,[1]]]],[21,[[21,[1]]]],[21,[[21,[1]]]],[21,[[21,[1]]]],[[171,171],10],[[185,185],10],0,0,0,0,0,0,[[]],0,0,[171,17],[[171,40],[[17,[33]]]],[[185,40],[[17,[33]]]],[185,17],[[171,40],[[17,[33]]]],[[185,40],[[17,[33]]]],[[171,40],[[17,[33]]]],[[185,40],[[17,[33]]]],[171,9],[185,9],[9],0,[[],52],[[]],[[]],[[],52],0,0,[[],[[17,[183,187]]]],[[[53,[171]]],[[17,[171]]]],[[],17],[[],17],[[],17],[[],17],[[],17],[[],17],[[],27],[[],27],[[],27],[171,9],[185,9],[[]],[[]],[[]],0,0,0,0,0,0,0,0,[28,[[30,[188]]]],[28,[[30,[188]]]],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],0,0,0,0,[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[189,189],[188,188],[190,190],[[]],[[]],[[]],[[],191],[[],191],[9],[9],[9],[9],[9],[9],[9],[9],[9],[9],[9],[9],[9],[9],[9],0,[[192,13],14],[[189,13],14],[[188,13],14],[[190,13],14],[[]],[[]],[[]],[[]],[[]],[[192,191,9,35,9,42,56,9,10,193],[[42,[190]]]],[[192,7,193],[[17,[[7,[190]],[19,[85]]]]]],[193,[[42,[194]]]],0,[[],9],[[],9],[[],9],[[],9],[[],9],[[56,56],[[17,[192,[19,[85]]]]]],0,[[]],[[]],[[]],[[]],[[]],[[[19,[18]]],[[19,[1,18]]]],[[[19,[18]]],[[19,[1,18]]]],[[[19,[18]]],[[19,[1,18]]]],[[[19,[18]]],[[19,[1,18]]]],[[[19,[18]]],[[19,[1,18]]]],[20,[[20,[1]]]],[20,[[20,[1]]]],[20,[[20,[1]]]],[20,[[20,[1]]]],[20,[[20,[1]]]],[21,[[21,[1]]]],[21,[[21,[1]]]],[21,[[21,[1]]]],[21,[[21,[1]]]],[21,[[21,[1]]]],[189],0,0,0,0,[[9,9,194],193],[[9,9],193],[192,109],0,0,0,0,0,0,0,0,0,[192,195],0,0,[9],[[]],[[]],[[]],0,[[192,3,134,9,[7,[9]],193],[[17,[84]]]],[[],17],[[],17],[[],17],[[],17],[[],17],[[],17],[[],17],[[],17],[[],17],[[],17],[[],27],[[],27],[[],27],[[],27],[[],27],0,[192,7],[194],[[192,3,109,196,193],[[17,[84]]]],0,0,[[]],[[]],[[]],[[]],[[]],0,0,0,0,0,0,0,0,0,0,0,0,0,0,[51,42],[[]],[51],[[]],[[]],[[],[[51,[56]]]],0,0,0,0,0,0,0,0,0,[[],1],[[],1],[[],1],[[],1],[[]],[[]],[[]],[[]],[[[197,[43,43,43]]],[[197,[43,43,43]]]],[[[198,[43,43,43]]],[[198,[43,43,43]]]],[[]],[[]],[198,[[31,[198]]]],[[],23],[9],[9],[9],[9],[[],[[17,[197]]]],[51,42],[9],[9],[[]],[[[197,[46,46,46]],197],10],[[[198,[46,46,46]],198],10],[[[197,[47,47,47]],13],14],[[[198,[47,47,47]],13],14],[[]],[[]],[[],6],[[],6],[[[197,[48,48,48]]]],[[[198,[48,48,48]]]],[51],[[]],[[]],[[],9],[[],9],[[]],[[]],[[[19,[18]]],[[19,[1,18]]]],[[[19,[18]]],[[19,[1,18]]]],[20,[[20,[1]]]],[20,[[20,[1]]]],[21,[[21,[1]]]],[21,[[21,[1]]]],[[[197,[46,46,46]],197],10],[[[198,[46,46,46]],198],10],[197,17],[[]],[[]],[[],[[51,[56]]]],[[],17],[[],17],[[],17],[[],17],[[],27],[[],27],[[]],[[]],0,0,0,0,0,0,0,0,[[]],[[[51,[56]]]],[[]],[[]],[[]],[51],[[51,51]],0,0,0,0,0,0,0,0,0,[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[]],[[]],[[]],[[]],[[]],[[]],[9],[199,57],[200,20],[9],[201,20],[9],[9],[9],[9],[9],[9],[9],[[]],[[]],[[]],[[],9],[[],9],[[],9],[[]],[[]],[[]],[[[19,[18]]],[[19,[1,18]]]],[[[19,[18]]],[[19,[1,18]]]],[[[19,[18]]],[[19,[1,18]]]],[20,[[20,[1]]]],[20,[[20,[1]]]],[20,[[20,[1]]]],[21,[[21,[1]]]],[21,[[21,[1]]]],[21,[[21,[1]]]],[[],17],[[],17],[[],17],[[],17],[[],17],[[],17],[[],27],[[],27],[[],27],[[]],[[]],[[]],0,0,0,[[],1],[[],1],[[]],[[]],[9],[9],[[],[[17,[76,33]]]],[[],[[17,[172]]]],0,[[],[[17,[76,33]]]],[9],[[],172],[[]],[[],9],[[]],[[[19,[18]]],[[19,[1,18]]]],[20,[[20,[1]]]],[21,[[21,[1]]]],[[],[[17,[[7,[56]],33]]]],[172,17],[[],[[17,[[7,[56]],33]]]],[[],17],[[],17],[[],27],[[]]],"p":[[8,"Any"],[3,"FullPersistence"],[3,"ElaboratedBlock"],[3,"BincodeLoadStore"],[3,"Iter"],[15,"u64"],[3,"Vec"],[4,"Resource"],[15,"usize"],[15,"bool"],[3,"EspressoLedger"],[4,"LedgerEvent"],[3,"Formatter"],[6,"Result"],[4,"SetMerkleTree"],[4,"PersistenceError"],[4,"Result"],[3,"Global"],[3,"Box"],[3,"Arc"],[3,"Rc"],[3,"Path"],[15,"str"],[6,"MerkleLeaf"],[3,"ValidatorState"],[6,"MerkleTree"],[3,"TypeId"],[3,"Unstructured"],[3,"GenesisNote"],[6,"Result"],[3,"Commitment"],[8,"Read"],[4,"SerializationError"],[3,"ChainVariables"],[3,"RecordOpening"],[3,"StakingKey"],[3,"Amount"],[3,"BTreeMap"],[3,"RecordCommitment"],[8,"Write"],[3,"KVMerkleProof"],[4,"Option"],[8,"Clone"],[4,"KVMerkleTree"],[4,"KVMerkleTerminalNode"],[8,"PartialEq"],[8,"Debug"],[8,"Hash"],[3,"IndentedSection"],[8,"IntoIterator"],[3,"GenericArray"],[3,"String"],[3,"TaggedBlob"],[4,"EspressoTransactionKind"],[3,"Error"],[15,"u8"],[6,"UniversalParam"],[3,"LWPersistence"],[8,"Stream"],[8,"Unpin"],[8,"Send"],[3,"JoinHandle"],[3,"Leaf"],[3,"FilledMTBuilder"],[3,"MerkleTree"],[4,"MerkleNode"],[3,"NodeValue"],[3,"MerkleLeafProof"],[4,"NodePos"],[3,"MerklePathNode"],[3,"MerklePath"],[4,"LookupResult"],[3,"MerkleCommitment"],[8,"Eq"],[8,"CanonicalSerialize"],[8,"CanonicalDeserialize"],[3,"MerkleLeaf"],[4,"MerkleFrontier"],[4,"PrimitivesError"],[8,"Default"],[3,"CollectedRewardsHistory"],[6,"CollectedRewardsProofs"],[6,"CollectedRewardsSet"],[4,"ValidationError"],[8,"Error"],[4,"RewardError"],[3,"Backtrace"],[3,"InvalidViewNumberSnafu"],[3,"SerializationSnafu"],[3,"StakingKeyNotFoundSnafu"],[3,"RewardAlreadyCollectedSnafu"],[3,"EmptyStakeTableCommitmentSetSnafu"],[3,"ProofNotInMemorySnafu"],[3,"KeyNotEligibleSnafu"],[3,"SignatureSnafu"],[3,"HashSet"],[6,"CollectedRewardsProof"],[3,"CollectedRewards"],[6,"CollectedRewardsDigest"],[3,"CollectedRewardsTag"],[3,"CollectRewardNote"],[3,"CollectRewardBody"],[3,"EligibilityWitness"],[3,"RewardNoteProofs"],[6,"StakeTableSetFrontier"],[6,"StakingPrivKey"],[3,"UserAddress"],[6,"StakeTableHash"],[3,"ConsensusTime"],[3,"VrfSeed"],[3,"NonZeroU64"],[8,"CryptoRng"],[3,"SetMerkleProof"],[3,"Nullifier"],[3,"Hash"],[4,"SetMerkleTerminalNode"],[3,"Elem"],[4,"SetMerkleTreeNode"],[3,"EMPTY_HASH"],[3,"Lsb0"],[3,"BitVec"],[3,"VRFPubKey"],[3,"StakingKeySignature"],[3,"EncodedSignature"],[3,"StakeTableTag"],[3,"StakeTableCommitment"],[3,"CommittableStakeTableSetCommitment"],[3,"CommittableStakeTableSetFrontier"],[3,"StakeTableSetHistory"],[4,"Ordering"],[3,"VrfParam"],[3,"BLSSignatureScheme"],[3,"EncodedPublicKey"],[3,"ElaboratedTransaction"],[3,"NullifierHistory"],[6,"NullifierProofs"],[3,"ElaboratedBlockCommitment"],[3,"TransactionCommitment"],[3,"NullifierAlreadyExistsSnafu"],[3,"BadNullifierProofSnafu"],[3,"MissingNullifierProofSnafu"],[3,"ConflictingNullifiersSnafu"],[3,"FailedSnafu"],[3,"BadMerkleLengthSnafu"],[3,"BadMerkleLeafSnafu"],[3,"BadMerkleRootSnafu"],[3,"BadMerklePathSnafu"],[3,"CryptoSnafu"],[3,"UnsupportedTransferSizeSnafu"],[3,"UnsupportedFreezeSizeSnafu"],[3,"InconsistentHelperProofsSnafu"],[3,"UnexpectedGenesisSnafu"],[3,"IncorrectParentSnafu"],[3,"InvalidTimeSnafu"],[3,"BadCollectRewardNoteSnafu"],[3,"RewardAlreadyCollectedSnafu"],[3,"BadCollectedRewardProofSnafu"],[3,"RewardAmountTooLargeSnafu"],[3,"BadStakeTableProofSnafu"],[3,"BadStakeTableCommitmentsProofSnafu"],[3,"BadFeeCalculationSnafu"],[4,"EspressoTransaction"],[4,"EspressoTxnHelperProofs"],[4,"TransactionNote"],[3,"Block"],[3,"RecordMerkleHistory"],[3,"RecordMerkleCommitment"],[3,"RecordMerkleFrontier"],[3,"ValidationOutputs"],[3,"ArcSer"],[3,"LedgerStateCommitment"],[3,"CanonicalBytes"],[6,"U32"],[8,"Display"],[15,"u16"],[3,"VerifierKeySet"],[6,"StakeTableSetMT"],[3,"HashMap"],[3,"ViewingMemoOpening"],[4,"ViewingError"],[8,"Deserializer"],[8,"Serializer"],[3,"BitSlice"],[4,"Error"],[3,"CommittableAmount"],[3,"LedgerCommitmentOpening"],[4,"BitSpanError"],[3,"MultiXfrRecordSpec"],[4,"TestTxSpec"],[3,"MultiXfrRecordSpecTransaction"],[6,"ChaChaRng"],[3,"MultiXfrTestState"],[3,"TxnPrintInfo"],[3,"Instant"],[8,"Iterator"],[15,"f32"],[3,"CommitableHash"],[4,"CommitableHashNode"],[3,"UNIVERSAL_PARAM"],[3,"VERIF_CRS"],[3,"PROVER_CRS"],[13,"Leaf"],[13,"Branch"],[13,"ForgottenSubtree"],[13,"Leaf"],[13,"CAP"],[13,"Ok"],[13,"Proof"],[13,"Empty"],[13,"Branch"],[13,"Leaf"],[13,"ForgottenSubtree"],[13,"SerializationError"],[13,"KeyNotEligible"],[13,"InvalidViewNumber"],[13,"Leaf"],[13,"Leaf"],[13,"Branch"],[13,"ForgottenSubtree"],[13,"Leaf"],[13,"Branch"],[13,"Genesis"],[13,"CAP"],[13,"Reward"],[13,"CAP"],[13,"Reward"],[13,"CryptoError"],[13,"NullifierAlreadyExists"],[13,"UnsupportedTransferSize"],[13,"UnsupportedFreezeSize"],[13,"RewardAlreadyCollected"],[13,"TwoInput"],[13,"OneInput"],[8,"KVTreeHash"],[8,"CommitableHashTag"],[13,"KeyDigest"],[13,"Leaf"],[13,"Branch"]]},\
"espresso_esqs":{"doc":"","t":[4,13,3,13,3,13,3,13,3,13,3,13,3,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,0,0,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,11,11,11,11,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,0,11,11,11,11,11,11,11,12,12,12,12,12,12,12,4,3,13,3,3,12,12,11,11,11,11,11,11,11,11,11,11,11,11,12,11,11,11,11,11,11,11,11,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,5,11,12,11,12,12,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,11,11,11,11,11,11,12,17,17,6,3,17,8,3,17,11,11,11,11,11,11,11,12,11,11,11,11,12,12,12,12,11,11,12,11,11,11,11,11,11,11,5,11,11,12,12,12,12,10,11,11,12,11,11,11,11,11,11,11,11,11,11,11,11,11,12,12,12,12,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,11,11,11,12,11,11,12,12,11,11,12,12,12,12,11,11,11,11,11,11,11,11,11,11,11,16,16,16,8,6,16,16,3,8,12,11,11,12,11,11,12,11,11,11,12,11,11,11,11,11,11,5,12,11,10,12,11,11,11,11,12,11],"n":["ApiError","Availability","AvailabilitySnafu","CatchUp","CatchUpSnafu","Internal","InternalSnafu","Metastate","MetastateSnafu","Status","StatusSnafu","Validator","ValidatorSnafu","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_error_source","backtrace","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","build","catch_all","cause","clone","clone","clone","clone","clone","clone","clone","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","deref","deref","deref","deref","deref","deref","deref","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","description","deserialize","drop","drop","drop","drop","drop","drop","drop","fail","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","from","from","from","from","from","from","from","from","from","from","from","from","full_node","full_node_data_source","header","in_current_span","init","init","init","init","init","init","init","into","into","into","into","into","into","into","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_error","into_error","into_error","into_error","into_error","into_error","reason","render_to","serialize","source","status","status","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_string","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","type_id","type_id","update_query_data_source","vzip","vzip","vzip","vzip","vzip","vzip","vzip","reason","source","source","source","source","source","status","Command","EsQS","Esqs","Options","UpdateQueryDataSourceTypesBinder","_server","_updater","as_any","as_any","as_any","as_any","as_any_mut","as_any_mut","as_any_mut","as_any_mut","augment_args","augment_args_for_update","augment_subcommands","augment_subcommands_for_update","availability","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","catchup","deref","deref","deref","deref","deref_mut","deref_mut","deref_mut","deref_mut","drop","drop","drop","drop","from","from","from","from","from_arg_matches","from_arg_matches","from_arg_matches_mut","from_arg_matches_mut","group_id","has_subcommand","init","init","init","init","into","into","into","into","into_any","into_any","into_any","into_any","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","io_error","kill","metastate","new","port","port","status","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","update_from_arg_matches","update_from_arg_matches","update_from_arg_matches_mut","update_from_arg_matches_mut","url","validator","vzip","vzip","vzip","vzip","with_port","with_port","0","CACHED_BLOCKS_COUNT","CACHED_EVENTS_COUNT","Consensus","DynamicPersistenceIterator","EVENT_CHANNEL_CAPACITY","Extract","QueryData","STATUS_STORAGE_COUNT","append_block_nullifiers","append_blocks","append_events","as_any","as_any","as_any_mut","as_any_mut","block_storage","borrow","borrow","borrow_mut","borrow_mut","cached_blocks","cached_blocks_start","cached_events_start","cached_nullifier_sets","calculate_sparse_cache","commit_all","consensus","count","deref","deref","deref_mut","deref_mut","drop","drop","dynamic_persistence_iter","edit_status","event_count","event_receiver","event_sender","event_storage","events","extract","from","from","from_fs","get_block_ids_by_proposer_id","get_block_index_by_hash","get_location","get_nth_block_iter","get_nth_event_iter","get_nth_qcert_iter","get_nth_state_iter","get_nullifier_proof_for","get_record_index_by_uid","get_record_merkle_tree_at_block_index","get_txn_index_by_hash","get_validator_status","impl_nth","index","index_by_block_hash","index_by_last_record_id","index_by_proposer_id","index_by_txn_hash","init","init","into","into","into_any","into_any","into_any_arc","into_any_arc","into_any_rc","into_any_rc","into_iter","is_empty","len","load","location","new","next","next_event","node_status","nth","on_event_processing_complete","qcert_storage","query_storage","set_status","size_hint","slice","slice_start","state_storage","status_storage","submit","subscribe","try_from","try_from","try_into","try_into","type_id","type_id","vzip","vzip","with_nullifier_set_at_block","AV","CU","EH","EventProcessedHandler","HotShotEvent","MS","ST","UpdateQueryDataSource","UpdateQueryDataSourceTypes","_event_task","as_any","as_any_mut","availability_store","borrow","borrow_mut","catchup_store","deref","deref_mut","drop","event_handler","from","init","into","into_any","into_any_arc","into_any_rc","launch_updates","meta_state_store","new","on_event_processing_complete","status_store","try_from","try_into","type_id","update","validator_state","vzip"],"q":["espresso_esqsespresso_esqs::ApiError","","","","","","","espresso_esqs::full_node","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","espresso_esqs::full_node::Command","espresso_esqs::full_node_data_source","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","espresso_esqs::update_query_data_source","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","",""],"d":["","","SNAFU context selector for the <code>ApiError::Availability</code> …","","SNAFU context selector for the <code>ApiError::CatchUp</code> variant","","SNAFU context selector for the <code>ApiError::Internal</code> variant","","SNAFU context selector for the <code>ApiError::Metastate</code> variant","","SNAFU context selector for the <code>ApiError::Status</code> variant","","SNAFU context selector for the <code>ApiError::Validator</code> variant","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Consume the selector and return the associated error","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Consume the selector and return a <code>Result</code> with the …","","","","","","","","","","Returns the argument unchanged.","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Full node query service","","","","","","","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","","","","","","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","","","","","","","","","","","","","","","","","","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","",""],"i":[0,3,0,3,0,3,0,3,0,3,0,3,0,3,9,10,11,12,13,6,3,9,10,11,12,13,6,3,3,3,9,10,11,12,13,6,3,9,10,11,12,13,6,6,3,3,3,9,10,11,12,13,6,3,9,10,11,12,13,6,3,9,10,11,12,13,6,3,9,10,11,12,13,6,3,3,3,9,10,11,12,13,6,6,3,3,9,10,11,12,13,6,3,3,3,3,3,3,9,10,11,12,13,6,0,0,3,3,3,9,10,11,12,13,6,3,9,10,11,12,13,6,3,9,10,11,12,13,6,3,9,10,11,12,13,6,3,9,10,11,12,13,6,9,10,11,12,13,6,6,3,3,3,3,6,3,9,10,11,12,13,6,3,3,9,10,11,12,13,6,3,9,10,11,12,13,6,3,9,10,11,12,13,6,0,3,9,10,11,12,13,6,76,77,78,79,80,81,76,0,0,36,0,0,41,41,82,41,34,36,82,41,34,36,34,34,36,36,34,82,41,34,36,82,41,34,36,34,82,41,34,36,82,41,34,36,82,41,34,36,82,41,34,36,34,36,34,36,34,36,82,41,34,36,82,41,34,36,82,41,34,36,82,41,34,36,82,41,34,36,0,41,34,41,41,34,34,82,41,34,36,82,41,34,36,82,41,34,36,34,36,34,36,41,34,82,41,34,36,34,36,83,0,0,0,0,0,0,0,0,43,43,43,43,58,43,58,43,43,58,43,58,43,43,43,43,43,43,43,58,43,58,43,58,43,58,0,43,43,43,43,43,43,84,43,58,58,43,43,43,43,43,43,43,43,43,43,43,43,58,58,43,43,43,43,43,58,43,58,43,58,43,58,43,58,58,43,43,43,43,43,58,43,43,58,43,43,43,43,58,58,58,43,43,43,43,43,58,43,58,43,58,43,58,43,85,85,85,0,0,85,85,0,0,72,72,72,72,72,72,72,72,72,72,72,72,72,72,72,72,72,0,72,72,86,72,72,72,72,72,72,72],"f":[0,0,0,0,0,0,0,0,0,0,0,0,0,[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],2],[3,[[5,[4]]]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[6,3],[[7,8],3],[3,[[5,[2]]]],[3,3],[9,9],[10,10],[11,11],[12,12],[13,13],[[[6,[14,14]]],[[6,[14,14]]]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[15],[15],[15],[15],[15],[15],[15],[15],[15],[15],[15],[15],[15],[15],[3,16],[[],[[17,[3]]]],[15],[15],[15],[15],[15],[15],[15],[6,[[17,[3]]]],[[3,18],19],[[3,18],19],[[9,18],19],[[10,18],19],[[11,18],19],[[12,18],19],[[13,18],19],[[[6,[20,20]],18],19],[21,3],[[]],[22,3],[23,3],[24,3],[25,3],[[]],[[]],[[]],[[]],[[]],[[]],0,0,[[],26],[[]],[[],15],[[],15],[[],15],[[],15],[[],15],[[],15],[[],15],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[[28,[27]]],[[28,[1,27]]]],[[[28,[27]]],[[28,[1,27]]]],[[[28,[27]]],[[28,[1,27]]]],[[[28,[27]]],[[28,[1,27]]]],[[[28,[27]]],[[28,[1,27]]]],[[[28,[27]]],[[28,[1,27]]]],[[[28,[27]]],[[28,[1,27]]]],[29,[[29,[1]]]],[29,[[29,[1]]]],[29,[[29,[1]]]],[29,[[29,[1]]]],[29,[[29,[1]]]],[29,[[29,[1]]]],[29,[[29,[1]]]],[30,[[30,[1]]]],[30,[[30,[1]]]],[30,[[30,[1]]]],[30,[[30,[1]]]],[30,[[30,[1]]]],[30,[[30,[1]]]],[30,[[30,[1]]]],[9,3],[10,3],[11,3],[12,3],[13,3],[6,3],0,[8],[3,17],[3,[[5,[2]]]],[3,7],0,[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],8],[[],17],[[],17],[[],17],[[],17],[[],17],[[],17],[[],17],[[],17],[[],17],[[],17],[[],17],[[],17],[[],17],[[],17],[[],31],[[],31],[[],31],[[],31],[[],31],[[],31],[[],31],0,[[]],[[]],[[]],[[]],[[]],[[]],[[]],0,0,0,0,0,0,0,0,0,0,0,0,0,0,[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[32,32],[32,32],[32,32],[32,32],0,[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],0,[15],[15],[15],[15],[15],[15],[15],[15],[15],[15],[15],[15],[[]],[[]],[[]],[[]],[33,[[17,[34,35]]]],[33,[[17,[36,35]]]],[33,[[17,[34,35]]]],[33,[[17,[36,35]]]],[[],[[5,[37]]]],[16,38],[[],15],[[],15],[[],15],[[],15],[[]],[[]],[[]],[[]],[[[28,[27]]],[[28,[1,27]]]],[[[28,[27]]],[[28,[1,27]]]],[[[28,[27]]],[[28,[1,27]]]],[[[28,[27]]],[[28,[1,27]]]],[29,[[29,[1]]]],[29,[[29,[1]]]],[29,[[29,[1]]]],[29,[[29,[1]]]],[30,[[30,[1]]]],[30,[[30,[1]]]],[30,[[30,[1]]]],[30,[[30,[1]]]],[39,40],[41,42],0,[[36,[29,[[44,[43]]]],[0,[45,46,47]]],[[48,[41]]]],0,0,0,[[],17],[[],17],[[],17],[[],17],[[],17],[[],17],[[],17],[[],17],[[],31],[[],31],[[],31],[[],31],[[34,33],[[17,[35]]]],[[36,33],[[17,[35]]]],[[34,33],[[17,[35]]]],[[36,33],[[17,[35]]]],[41,49],0,[[]],[[]],[[]],[[]],[50,34],[50,36],0,0,0,0,0,0,0,0,0,[[43,51,[53,[52]]],17],[[43,[53,[54]]],17],[[43,[53,[[5,[[56,[55]]]]]]],[[57,[[28,[42]]]]]],[[],1],[[],1],[[],1],[[],1],0,[[]],[[]],[[]],[[]],0,0,0,0,[[51,51],38],[43],0,[58,15],[15],[15],[15],[15],[15],[15],[[15,15],58],[43,17],[43,15],0,0,0,0,[[],5],[[]],[[]],0,[[43,59],[[53,[51]]]],[[43,60],[[5,[51]]]],[43,5],[[43,15]],[[43,15]],[[43,15]],[[43,15]],[[43,51,52],5],[[43,51],5],[[43,15],[[5,[61]]]],[[43,62],5],[43,63],[[58,15],[[5,[5]]]],0,0,0,0,0,[[],15],[[],15],[[]],[[]],[[[28,[27]]],[[28,[1,27]]]],[[[28,[27]]],[[28,[1,27]]]],[29,[[29,[1]]]],[29,[[29,[1]]]],[30,[[30,[1]]]],[30,[[30,[1]]]],[[]],[43,38],[43,15],[[64,65,[5,[8]]],[[17,[43,66]]]],0,[[64,65,[5,[8]]],[[17,[43,66]]]],[58,5],[43,[[57,[[28,[42]]]]]],0,[[58,15],5],[43],0,0,[[43,63],17],[58],0,0,0,0,[[43,67],[[57,[[28,[42]]]]]],[43,68],[[],17],[[],17],[[],17],[[],17],[[],31],[[],31],[[]],[[]],[[43,51,69],[[17,[3]]]],0,0,0,0,0,0,0,0,0,0,[[],1],[[],1],0,[[]],[[]],0,[15],[15],[15],0,[[]],[[],15],[[]],[[[28,[27]]],[[28,[1,27]]]],[29,[[29,[1]]]],[30,[[30,[1]]]],[[[0,[46,70,71]],[29,[[44,[72]]]]],[[17,[73,74]]]],0,[[[0,[46,70,71]],[29,[44]],[29,[44]],[29,[44]],[29,[44]],[29,[44]]],[[29,[[44,[72]]]]]],[[]],0,[[],17],[[],17],[[],31],[[72,75],42],0,[[]]],"p":[[8,"Any"],[8,"Error"],[4,"ApiError"],[3,"Backtrace"],[4,"Option"],[3,"InternalSnafu"],[4,"StatusCode"],[3,"String"],[3,"AvailabilitySnafu"],[3,"CatchUpSnafu"],[3,"MetastateSnafu"],[3,"StatusSnafu"],[3,"ValidatorSnafu"],[8,"Clone"],[15,"usize"],[15,"str"],[4,"Result"],[3,"Formatter"],[6,"Result"],[8,"Debug"],[4,"Error"],[4,"Error"],[4,"Error"],[4,"Error"],[4,"Error"],[3,"IndentedSection"],[3,"Global"],[3,"Box"],[3,"Arc"],[3,"Rc"],[3,"TypeId"],[3,"Command"],[3,"ArgMatches"],[3,"Options"],[6,"Error"],[4,"Command"],[3,"Id"],[15,"bool"],[8,"Display"],[3,"Error"],[3,"EsQS"],[8,"Future"],[3,"QueryData"],[3,"RwLock"],[8,"ValidatorDataSource"],[8,"Send"],[8,"Sync"],[6,"Result"],[3,"Url"],[15,"u16"],[15,"u64"],[3,"Nullifier"],[3,"Vec"],[6,"BlockAndAssociated"],[3,"EspressoLedger"],[4,"LedgerEvent"],[3,"Pin"],[3,"DynamicPersistenceIterator"],[3,"EncodedPublicKey"],[3,"ElaboratedBlockCommitment"],[6,"MerkleTree"],[3,"TransactionCommitment"],[3,"ValidatorStatus"],[3,"Path"],[6,"Consensus"],[4,"PersistenceError"],[3,"ElaboratedTransaction"],[3,"Receiver"],[8,"FnOnce"],[8,"Unpin"],[8,"Stream"],[3,"UpdateQueryDataSource"],[3,"RemoteHandle"],[3,"SpawnError"],[6,"HotShotEvent"],[13,"Internal"],[13,"Availability"],[13,"CatchUp"],[13,"Metastate"],[13,"Status"],[13,"Validator"],[3,"UpdateQueryDataSourceTypesBinder"],[13,"Esqs"],[8,"Extract"],[8,"UpdateQueryDataSourceTypes"],[8,"EventProcessedHandler"]]},\
"espresso_metastate_api":{"doc":"","t":[0,0,2,0,4,13,3,3,3,13,3,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,5,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,11,11,11,11,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,12,16,8,8,10,10],"n":["api","data_source","define_api","query_data","Error","InvalidBlockId","InvalidBlockIdSnafu","NullifierCheck","Options","Request","RequestSnafu","api_path","as_any","as_any","as_any","as_any","as_any","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_error_source","augment_args","augment_args_for_update","backtrace","block_id","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","build","cause","clone","clone","clone","clone","clone_into","clone_into","clone_into","clone_into","default","define_api","deref","deref","deref","deref","deref","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","description","deserialize","deserialize","drop","drop","drop","drop","drop","fail","fmt","fmt","fmt","fmt","fmt","from","from","from","from","from","from","from","from_arg_matches","from_arg_matches_mut","group_id","header","in_current_span","init","init","init","init","init","into","into","into","into","into","into_any","into_any","into_any","into_any","into_any","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_error","into_error","proof","render_to","serialize","serialize","source","spent","status","to_owned","to_owned","to_owned","to_owned","to_string","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","update_from_arg_matches","update_from_arg_matches_mut","vzip","vzip","vzip","vzip","vzip","block_id","source","Error","MetaStateDataSource","UpdateMetaStateData","append_block_nullifiers","get_nullifier_proof_for"],"q":["espresso_metastate_api","","","","espresso_metastate_api::api","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","espresso_metastate_api::api::Error","","espresso_metastate_api::data_source","","","",""],"d":["","","","","","","SNAFU context selector for the <code>Error::InvalidBlockId</code> …","","","","SNAFU context selector for the <code>Error::Request</code> variant","","","","","","","","","","","","","","","","","","","","","","","","","","","Consume the selector and return the associated error","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Consume the selector and return a <code>Result</code> with the …","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","","","","","","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","",""],"i":[0,0,0,0,0,4,0,0,0,4,0,11,11,4,8,7,10,11,4,8,7,10,4,11,11,4,7,11,4,8,7,10,11,4,8,7,10,7,4,4,8,7,10,4,8,7,10,11,0,11,4,8,7,10,11,4,8,7,10,4,4,10,11,4,8,7,10,7,4,4,8,7,10,11,4,4,4,8,7,10,11,11,11,4,4,11,4,8,7,10,11,4,8,7,10,11,4,8,7,10,11,4,8,7,10,11,4,8,7,10,8,7,10,4,4,10,4,10,4,4,8,7,10,4,11,4,8,7,10,11,4,8,7,10,11,4,8,7,10,11,11,11,4,8,7,10,35,36,37,0,0,37,38],"f":[0,0,0,0,0,0,0,0,0,0,0,0,[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],2],[3,3],[3,3],[4,[[6,[5]]]],0,[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[7,4],[4,[[6,[2]]]],[4,4],[8,8],[[[7,[9]]],[[7,[9]]]],[10,10],[[]],[[]],[[]],[[]],[[],11],[11,[[14,[[12,[4]],13]]]],[15],[15],[15],[15],[15],[15],[15],[15],[15],[15],[4,16],[[],[[14,[4]]]],[[],[[14,[10]]]],[15],[15],[15],[15],[15],[7,[[14,[4]]]],[[4,17],18],[[4,17],18],[[8,17],18],[[[7,[19]],17],18],[[10,17],18],[[]],[[]],[20,4],[21,4],[[]],[[]],[[]],[22,[[14,[11,23]]]],[22,[[14,[11,23]]]],[[],[[6,[24]]]],[[],25],[[]],[[],15],[[],15],[[],15],[[],15],[[],15],[[]],[[]],[[]],[[]],[[]],[[[27,[26]]],[[27,[1,26]]]],[[[27,[26]]],[[27,[1,26]]]],[[[27,[26]]],[[27,[1,26]]]],[[[27,[26]]],[[27,[1,26]]]],[[[27,[26]]],[[27,[1,26]]]],[28,[[28,[1]]]],[28,[[28,[1]]]],[28,[[28,[1]]]],[28,[[28,[1]]]],[28,[[28,[1]]]],[29,[[29,[1]]]],[29,[[29,[1]]]],[29,[[29,[1]]]],[29,[[29,[1]]]],[29,[[29,[1]]]],[8,4],[7,4],0,[30],[4,14],[10,14],[4,[[6,[2]]]],0,[4,31],[[]],[[]],[[]],[[]],[[],30],[[],14],[[],14],[[],14],[[],14],[[],14],[[],14],[[],14],[[],14],[[],14],[[],14],[[],32],[[],32],[[],32],[[],32],[[],32],[[11,22],[[14,[23]]]],[[11,22],[[14,[23]]]],[[]],[[]],[[]],[[]],[[]],0,0,0,0,0,[[21,[34,[33]]],14],[[21,33],6]],"p":[[8,"Any"],[8,"Error"],[3,"Command"],[4,"Error"],[3,"Backtrace"],[4,"Option"],[3,"InvalidBlockIdSnafu"],[3,"RequestSnafu"],[8,"Clone"],[3,"NullifierCheck"],[3,"Options"],[3,"Api"],[4,"ApiError"],[4,"Result"],[15,"usize"],[15,"str"],[3,"Formatter"],[6,"Result"],[8,"Debug"],[4,"RequestError"],[15,"u64"],[3,"ArgMatches"],[6,"Error"],[3,"Id"],[3,"IndentedSection"],[3,"Global"],[3,"Box"],[3,"Arc"],[3,"Rc"],[3,"String"],[4,"StatusCode"],[3,"TypeId"],[3,"Nullifier"],[3,"Vec"],[13,"InvalidBlockId"],[13,"Request"],[8,"UpdateMetaStateData"],[8,"MetaStateDataSource"]]},\
"espresso_status_api":{"doc":"","t":[0,0,0,4,3,13,3,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,5,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,16,8,8,10,10,10,10,3,3,3,3,3,12,11,11,11,11,11,11,11,11,11,11,12,11,11,11,11,11,11,11,11,11,11,12,11,11,11,11,11,11,11,11,12,12,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,12,12,12,12,12,12,12,12,12,11,11,11,11,11,12,12,12,11,11,11,11,12,12,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,11,11,11,11,11],"n":["api","data_source","query_data","Error","Options","Request","RequestSnafu","api_path","as_any","as_any","as_any","as_any_mut","as_any_mut","as_any_mut","as_error_source","augment_args","augment_args_for_update","backtrace","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","cause","clone","clone","clone_into","clone_into","default","define_api","deref","deref","deref","deref_mut","deref_mut","deref_mut","description","deserialize","drop","drop","drop","fmt","fmt","fmt","from","from","from","from","from_arg_matches","from_arg_matches_mut","group_id","header","in_current_span","init","init","init","into","into","into","into_any","into_any","into_any","into_any_arc","into_any_arc","into_any_arc","into_any_rc","into_any_rc","into_any_rc","into_error","render_to","serialize","source","status","to_owned","to_owned","to_string","try_from","try_from","try_from","try_into","try_into","try_into","type_id","type_id","type_id","update_from_arg_matches","update_from_arg_matches_mut","vzip","vzip","vzip","source","Error","StatusDataSource","UpdateStatusData","edit_status","get_location","get_validator_status","set_status","MempoolInfo","PeerInfo","RecordSetInfo","Throughput","ValidatorStatus","abandoned_block_count","as_any","as_any","as_any","as_any","as_any","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","blocks_finalized","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","bytes_finalized","clone","clone","clone","clone","clone_into","clone_into","clone_into","clone_into","cumulative_size","cumulative_txn_count","decided_block_count","default","default","default","deref","deref","deref","deref","deref","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deserialize","deserialize","deserialize","deserialize","deserialize","drop","drop","drop","drop","drop","fmt","fmt","fmt","fmt","fmt","from","from","from","from","from","init","init","init","init","init","into","into","into","into","into","into_any","into_any","into_any","into_any","into_any","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","latest_block_id","memory_footprint","mempool_info","nullifier_count","output_count","peer_id","peer_list","pending_blocks","proposed_block_count","record_count","serialize","serialize","serialize","serialize","serialize","spent","time_operational","time_operational","to_owned","to_owned","to_owned","to_owned","total","transaction_count","transactions_finalized","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","unspent","vzip","vzip","vzip","vzip","vzip"],"q":["espresso_status_api","","","espresso_status_api::api","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","espresso_status_api::api::Error","espresso_status_api::data_source","","","","","","","espresso_status_api::query_data","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","",""],"d":["","","","","","","SNAFU context selector for the <code>Error::Request</code> variant","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","","Returns the argument unchanged.","Returns the argument unchanged.","","","","","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","",""],"i":[0,0,0,0,0,4,0,8,8,4,7,8,4,7,4,8,8,4,8,4,7,8,4,7,4,4,7,4,7,8,0,8,4,7,8,4,7,4,4,8,4,7,4,4,7,8,4,4,7,8,8,8,4,4,8,4,7,8,4,7,8,4,7,8,4,7,8,4,7,7,4,4,4,4,4,7,4,8,4,7,8,4,7,8,4,7,8,8,8,4,7,33,34,0,0,34,35,35,34,0,0,0,0,0,28,29,30,31,32,28,29,30,31,32,28,32,29,30,31,32,28,29,30,31,32,28,32,29,30,31,32,29,30,31,32,28,28,28,30,31,28,29,30,31,32,28,29,30,31,32,28,29,30,31,32,28,29,30,31,32,28,29,30,31,32,28,29,30,31,32,28,29,30,31,32,28,29,30,31,32,28,29,30,31,32,28,29,30,31,32,28,29,30,31,32,28,28,30,28,28,30,29,28,28,28,28,29,30,31,32,28,31,32,28,29,30,31,32,31,30,32,29,30,31,32,28,29,30,31,32,28,29,30,31,32,28,31,29,30,31,32,28],"f":[0,0,0,0,0,0,0,0,[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],2],[3,3],[3,3],[4,[[6,[5]]]],[[]],[[]],[[]],[[]],[[]],[[]],[4,[[6,[2]]]],[4,4],[7,7],[[]],[[]],[[],8],[8,[[11,[[9,[4]],10]]]],[12],[12],[12],[12],[12],[12],[4,13],[[],[[11,[4]]]],[12],[12],[12],[[4,14],15],[[4,14],15],[[7,14],15],[[]],[16,4],[[]],[[]],[17,[[11,[8,18]]]],[17,[[11,[8,18]]]],[[],[[6,[19]]]],[[],20],[[]],[[],12],[[],12],[[],12],[[]],[[]],[[]],[[[22,[21]]],[[22,[1,21]]]],[[[22,[21]]],[[22,[1,21]]]],[[[22,[21]]],[[22,[1,21]]]],[23,[[23,[1]]]],[23,[[23,[1]]]],[23,[[23,[1]]]],[24,[[24,[1]]]],[24,[[24,[1]]]],[24,[[24,[1]]]],[7,4],[25],[4,11],[4,[[6,[2]]]],[4,26],[[]],[[]],[[],25],[[],11],[[],11],[[],11],[[],11],[[],11],[[],11],[[],27],[[],27],[[],27],[[8,17],[[11,[18]]]],[[8,17],[[11,[18]]]],[[]],[[]],[[]],0,0,0,0,[[],11],[[],6],[[],28],[28,11],0,0,0,0,0,0,[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],0,[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],0,[29,29],[30,30],[31,31],[32,32],[[]],[[]],[[]],[[]],0,0,0,[[],30],[[],31],[[],28],[12],[12],[12],[12],[12],[12],[12],[12],[12],[12],[[],[[11,[29]]]],[[],[[11,[30]]]],[[],[[11,[31]]]],[[],[[11,[32]]]],[[],[[11,[28]]]],[12],[12],[12],[12],[12],[[29,14],15],[[30,14],15],[[31,14],15],[[32,14],15],[[28,14],15],[[]],[[]],[[]],[[]],[[]],[[],12],[[],12],[[],12],[[],12],[[],12],[[]],[[]],[[]],[[]],[[]],[[[22,[21]]],[[22,[1,21]]]],[[[22,[21]]],[[22,[1,21]]]],[[[22,[21]]],[[22,[1,21]]]],[[[22,[21]]],[[22,[1,21]]]],[[[22,[21]]],[[22,[1,21]]]],[23,[[23,[1]]]],[23,[[23,[1]]]],[23,[[23,[1]]]],[23,[[23,[1]]]],[23,[[23,[1]]]],[24,[[24,[1]]]],[24,[[24,[1]]]],[24,[[24,[1]]]],[24,[[24,[1]]]],[24,[[24,[1]]]],0,0,0,0,0,0,0,0,0,0,[29,11],[30,11],[31,11],[32,11],[28,11],0,0,0,[[]],[[]],[[]],[[]],0,0,0,[[],11],[[],11],[[],11],[[],11],[[],11],[[],11],[[],11],[[],11],[[],11],[[],11],[[],27],[[],27],[[],27],[[],27],[[],27],0,[[]],[[]],[[]],[[]],[[]]],"p":[[8,"Any"],[8,"Error"],[3,"Command"],[4,"Error"],[3,"Backtrace"],[4,"Option"],[3,"RequestSnafu"],[3,"Options"],[3,"Api"],[4,"ApiError"],[4,"Result"],[15,"usize"],[15,"str"],[3,"Formatter"],[6,"Result"],[4,"RequestError"],[3,"ArgMatches"],[6,"Error"],[3,"Id"],[3,"IndentedSection"],[3,"Global"],[3,"Box"],[3,"Arc"],[3,"Rc"],[3,"String"],[4,"StatusCode"],[3,"TypeId"],[3,"ValidatorStatus"],[3,"PeerInfo"],[3,"MempoolInfo"],[3,"RecordSetInfo"],[3,"Throughput"],[13,"Request"],[8,"UpdateStatusData"],[8,"StatusDataSource"]]},\
"espresso_validator":{"doc":"","t":[12,17,6,3,17,17,13,3,13,3,17,17,13,3,6,3,3,3,4,17,3,17,3,6,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,12,12,12,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,5,11,11,5,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,14,11,11,11,11,11,11,11,11,11,11,11,12,12,11,11,11,11,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,5,5,5,5,5,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,5,5,5,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,12,12,12,12,11,0,11,12,0,12,12,12,12,12,12,12,12,5,5,5,5,12,12,11,11,11,11,12,12,12,12,5,12,11,11,11,11,11,12,12,11,0,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,0,11,11,11,11,11,11,11,11,11,11,12,12,13,4,13,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,14,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,12,6,8,8,6,3,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,12,11,11,11,11,11,3,3,3,3,12,12,12,12,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,11,11,11,11,11,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,11,11,11,5,12,12,12,5,0,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,3,11,11,11,11,11,11,12,11,11,12,11,11,11,12,11,11,11,11,12,5,11,11,11,11,11,12,12,11,11,11,11,11,11],"n":["0","COMMITTEE_SIZE","Consensus","ConsensusOpt","DEFAULT_SECRET_KEY_SEED","GENESIS_SEED","InvalidDenominator","InvalidDenominatorSnafu","InvalidNumerator","InvalidNumeratorSnafu","MINIMUM_BOOTSTRAP_NODES","MINIMUM_NODES","MissingDelimiter","MissingDelimiterSnafu","Network","NodeOpt","ParseDurationError","ParseDurationSnafu","ParseRatioError","QUORUM_THRESHOLD","Ratio","STAKE_PER_NODE","SecretKeySeed","Storage","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_error_source","as_error_source","augment_args","augment_args","augment_args_for_update","augment_args_for_update","backtrace","backtrace","bootstrap_mesh_n","bootstrap_mesh_n_high","bootstrap_mesh_n_low","bootstrap_mesh_outbound_min","bootstrap_nodes","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","build","build","build","build","cause","cause","cdn","chain_id","check","clone","clone","clone","clone","clone","clone","clone","clone","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","collect_reward_daemon","command","command_for_update","default_store_path","denominator","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","description","description","deserialize","deserialize","div_ceil","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","eq","err","err","fail","fail","fail","fail","faucet_pub_key","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","from","from","from","from","from","from","from","from","from","from","from","from_arg_matches","from_arg_matches","from_arg_matches_mut","from_arg_matches_mut","from_str","from_str","gen_bootstrap_keys","gen_keys","genesis","get_secret_key_seed","get_store_dir","group_id","group_id","header","header","header","header","in_current_span","in_current_span","init","init","init","init","init","init","init","init","init","init","init_hotshot","init_validator","initialize_stake_table","into","into","into","into","into","into","into","into","into","into","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_error","into_error","into_error","into_error","libp2p","max_propose_time","max_transactions","min_propose_time","min_transactions","ne","network","new","next_view_timeout","node_impl","nonbootstrap_base_port","nonbootstrap_mesh_n","nonbootstrap_mesh_n_high","nonbootstrap_mesh_n_low","nonbootstrap_mesh_outbound_min","nonbootstrap_port","num_nodes","numerator","open_data_source","parse_duration","parse_url","project_path","reason","reason","render_to","render_to","render_to","render_to","replication_factor","reset_store_state","rewards_address","round_start_delay","run_consensus","secret_key_seed","serialize","serialize","serialized_size","source","source","start_delay","store_path","tag","testing","timeout_ratio","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_string","to_string","to_string","to_string","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","update_from_arg_matches","update_from_arg_matches","update_from_arg_matches_mut","update_from_arg_matches_mut","validator","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","err","err","Cdn","HybridNetwork","P2P","as_any","as_any_mut","borrow","borrow_mut","broadcast_message","broadcast_queue","clone","clone_into","deref","deref_mut","direct_queue","drop","fmt","from","get_record","impl_networking","init","into","into_any","into_any_arc","into_any_rc","known_nodes","message_node","network_changes","new_cdn","new_p2p","next_broadcast","next_direct","notify_of_subsequent_leader","put_record","ready","shut_down","to_owned","try_from","try_into","type_id","vzip","0","0","Election","PLNet","PLStore","SignatureKey","ValidatorNodeImpl","as_any","as_any_mut","borrow","borrow_mut","clone","clone_into","deref","deref_mut","drop","fmt","from","init","into","into_any","into_any_arc","into_any_rc","net","store","to_owned","try_from","try_into","type_id","vzip","AddressBook","TestNetwork","TestNode","UnencryptedKeystoreLoader","_store","_store","_wait","address_book","address_book_api","as_any","as_any","as_any","as_any","as_any_mut","as_any_mut","as_any_mut","as_any_mut","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","create","deref","deref","deref","deref","deref_mut","deref_mut","deref_mut","deref_mut","dir","drop","drop","drop","drop","drop","esqs","from","from","from","from","init","init","init","init","init","into","into","into","into","into_any","into_any","into_any","into_any","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","kill","kill","kill","kill","kill_impl","load","location","minimal_test_network","nodes","port","query_api","retry","rewards","submit_api","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","url","vzip","vzip","vzip","vzip","wait","ValidatorOpt","as_any","as_any_mut","augment_args","augment_args_for_update","borrow","borrow_mut","colored_logs","command","command_for_update","consensus_opt","deref","deref_mut","drop","esqs","from","from_arg_matches","from_arg_matches_mut","group_id","id","init","init","into","into_any","into_any_arc","into_any_rc","location","node_opt","try_from","try_into","type_id","update_from_arg_matches","update_from_arg_matches_mut","vzip"],"q":["espresso_validatorespresso_validator::ParseRatioError","","espresso_validator::network","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","espresso_validator::network::HybridNetwork","","espresso_validator::node_impl","","","","","","","","","","","","","","","","","","","","","","","","","","","","espresso_validator::testing","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","espresso_validator::validator","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","",""],"d":["","","","Options for the validator connections during the consensus.","","","","SNAFU context selector for the …","","SNAFU context selector for the …","","","","SNAFU context selector for the …","","","","SNAFU context selector for the <code>ParseDurationError</code> error","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","URLs of the bootstrap nodes, in the format of <code>&lt;host&gt;:&lt;port&gt;</code>…","","","","","","","","","","","","","","","","","","","","","Consume the selector and return the associated error","Consume the selector and return the associated error","Consume the selector and return the associated error","Consume the selector and return the associated error","","","URL for a CDN server to use for optimistic communication.","Unique identifier for this instance of Espresso.","","","","","","","","","","","","","","","","","","","","","Returns the default directory to store persistence files.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Consume the selector and return a <code>Result</code> with the …","Consume the selector and return a <code>Result</code> with the …","Consume the selector and return a <code>Result</code> with the …","Consume the selector and return a <code>Result</code> with the …","Public key which should own a faucet record in the genesis …","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","Returns the argument unchanged.","Returns the argument unchanged.","","","","","","","Generate a list of private and public keys for …","Generate a list of private and public keys for the given …","","","Gets the directory to persistence files.","","","","","","","","","","","","","","","","","","","Creates the initial state and hotshot for simulation.","","Creates a btreemap for stake table","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Use in conjunction with –cdn to use libp2p for consensus …","Maximum time to wait for submitted transactions before …","Maximum number of transactions in a block.","Minimum time to wait for submitted transactions before …","Minimum number of transactions to include in a block, if …","","","","Base duration for next-view timeout.","","The base port for the non-bootstrap nodes.","","","","","Port of the current node if it’s non-bootstrap.","Number of nodes, including a fixed number of bootstrap …","","","Parse a Duration from a string using ClDuration, …","Parse a (url|ip):[0-9]+ into a multiaddr","Returns the project directory.","","","","","","","","Whether to reset the persisted state.","CAP Address to send rewards to","The delay a leader inserts before starting pre-commit.","","Seed number used to generate secret key set for all nodes.","","","","","","Delay after init before starting consensus.","Path to persistence files for all nodes.","","","The exponential backoff ratio for the next-view timeout.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","","","","Calls <code>U::from(self)</code>.","","","","","","","Create a new Cdn-based network.","Create a new libp2p network.","","","","","","","","","","","","","","","A lightweight node that handles validation for consensus, …","","","","","","","","","","","","","","Returns the argument unchanged.","","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","Create a minimal network of validators for testing.","","","","","","","","","","","","","","","","","","","","","","","","","Command line arguments for a validator.","","","","","","","Whether to color log output with ANSI color codes.","","","","","","","","Returns the argument unchanged.","","","","Id of the current node.","Initiate the hotshot","","Calls <code>U::from(self)</code>.","","","","Location of the current node.","","","","","","",""],"i":[17,0,0,0,0,0,4,0,4,0,0,0,4,0,0,0,0,0,0,0,0,0,0,0,15,4,8,9,10,12,7,11,17,18,15,4,8,9,10,12,7,11,17,18,4,7,12,18,12,18,4,7,18,18,18,18,18,15,4,8,9,10,12,7,11,17,18,15,4,8,9,10,12,7,11,17,18,8,9,10,11,4,7,12,12,12,15,8,9,10,7,11,17,18,15,8,9,10,7,11,17,18,0,12,12,0,15,15,4,8,9,10,12,7,11,17,18,15,4,8,9,10,12,7,11,17,18,4,7,17,17,0,15,4,8,9,10,12,7,11,17,18,15,9,10,8,9,10,11,12,15,15,4,4,8,9,10,12,7,7,11,17,17,18,15,4,8,9,10,12,7,11,17,17,18,12,18,12,18,15,17,0,0,0,0,0,12,18,15,4,7,17,4,7,15,4,8,9,10,12,7,11,17,18,0,0,0,15,4,8,9,10,12,7,11,17,18,15,4,8,9,10,12,7,11,17,18,15,4,8,9,10,12,7,11,17,18,15,4,8,9,10,12,7,11,17,18,8,9,10,11,12,12,12,12,12,15,0,12,12,0,12,18,18,18,18,12,12,15,0,0,0,0,7,11,15,4,7,17,18,12,12,12,0,18,17,17,17,4,7,12,12,17,0,12,15,8,9,10,7,11,17,18,15,4,7,17,15,4,8,9,10,12,7,11,17,17,18,15,4,8,9,10,12,7,11,17,18,15,4,8,9,10,12,7,11,17,18,12,18,12,18,0,15,4,8,9,10,12,7,11,17,18,81,82,46,0,46,46,46,46,46,46,46,46,46,46,46,46,46,46,46,46,0,46,46,46,46,46,46,46,46,46,46,46,46,46,46,46,46,46,46,46,46,46,83,84,0,0,0,0,0,72,72,72,72,72,72,72,72,72,72,72,72,72,72,72,72,72,72,72,72,72,72,72,0,0,0,0,76,74,76,74,74,73,75,76,74,73,75,76,74,73,75,76,74,73,75,76,74,73,73,75,76,74,73,75,76,74,73,73,75,76,74,74,75,73,75,76,74,73,75,76,76,74,73,75,76,74,73,75,76,74,73,75,76,74,73,75,76,74,75,76,74,75,74,73,73,0,74,76,74,0,0,74,73,75,76,74,73,75,76,74,73,75,76,74,76,73,75,76,74,75,0,80,80,80,80,80,80,80,80,80,80,80,80,80,80,80,80,80,80,80,0,80,80,80,80,80,80,80,80,80,80,80,80,80],"f":[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],2],[[],2],[3,3],[3,3],[3,3],[3,3],[4,[[6,[5]]]],[7,[[6,[5]]]],0,0,0,0,0,[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[8,4],[9,4],[10,4],[11,7],[4,[[6,[2]]]],[7,[[6,[2]]]],0,0,[12,[[14,[13]]]],[15,15],[8,8],[[[9,[16]]],[[9,[16]]]],[[[10,[16]]],[[10,[16]]]],[7,7],[[[11,[16]]],[[11,[16]]]],[17,17],[18,18],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[[0,[19,20,21]],[23,[22]],24,25,26,27,28],29],[[],3],[[],3],[30,31],0,[30],[30],[30],[30],[30],[30],[30],[30],[30],[30],[30],[30],[30],[30],[30],[30],[30],[30],[30],[30],[4,32],[7,32],[33,[[14,[17,34]]]],[[],[[14,[17]]]],0,[30],[30],[30],[30],[30],[30],[30],[30],[30],[30],[[15,15],35],0,0,[8,[[14,[4]]]],[9,[[14,[4]]]],[10,[[14,[4]]]],[11,[[14,[7]]]],0,[[15,36],37],[[15,36],37],[[4,36],37],[[4,36],37],[[8,36],37],[[[9,[38]],36],37],[[[10,[38]],36],37],[[12,36],37],[[7,36],37],[[7,36],37],[[[11,[38]],36],37],[[17,36],37],[[17,36],37],[[18,36],37],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],17],[[]],[[]],[39,[[14,[12,40]]]],[39,[[14,[18,40]]]],[39,[[14,[12,40]]]],[39,[[14,[18,40]]]],[32,[[14,[15]]]],[32,[[14,[17]]]],[18,[[41,[26]]]],[[18,30],[[41,[26]]]],[[12,18],42],[18],[[12,30],31],[[],[[6,[43]]]],[[],[[6,[43]]]],[[],44],[[],44],[[],44],[[],44],[[]],[[]],[[],30],[[],30],[[],30],[[],30],[[],30],[[],30],[[],30],[[],30],[[],30],[[],30],[[12,[41,[45]],26,30,46,42,30],29],[[[0,[19,20,21]],12,18,26,[41,[45]],42,30],29],[[[41,[45]]],[[47,[45,24]]]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[[49,[48]]],[[49,[1,48]]]],[[[49,[48]]],[[49,[1,48]]]],[[[49,[48]]],[[49,[1,48]]]],[[[49,[48]]],[[49,[1,48]]]],[[[49,[48]]],[[49,[1,48]]]],[[[49,[48]]],[[49,[1,48]]]],[[[49,[48]]],[[49,[1,48]]]],[[[49,[48]]],[[49,[1,48]]]],[[[49,[48]]],[[49,[1,48]]]],[[[49,[48]]],[[49,[1,48]]]],[50,[[50,[1]]]],[50,[[50,[1]]]],[50,[[50,[1]]]],[50,[[50,[1]]]],[50,[[50,[1]]]],[50,[[50,[1]]]],[50,[[50,[1]]]],[50,[[50,[1]]]],[50,[[50,[1]]]],[50,[[50,[1]]]],[51,[[51,[1]]]],[51,[[51,[1]]]],[51,[[51,[1]]]],[51,[[51,[1]]]],[51,[[51,[1]]]],[51,[[51,[1]]]],[51,[[51,[1]]]],[51,[[51,[1]]]],[51,[[51,[1]]]],[51,[[51,[1]]]],[8,4],[9,4],[10,4],[11,7],0,0,0,0,0,[[15,15],35],0,[30,12],0,0,0,0,0,0,0,0,0,0,[[12,30,[6,[13]],28],[[50,[[53,[52]]]]]],[32,[[14,[54,7]]]],[32,[[14,[55,56]]]],[[],31],0,0,[13],[13],[13],[13],0,0,0,0,[[28,[0,[21,29]]],29],0,[[17,57],[[14,[34]]]],[17,14],[17,30],[4,[[6,[2]]]],[7,[[6,[2]]]],0,0,[[],13],0,0,[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],13],[[],13],[[],13],[[],13],[[],14],[[],14],[[],14],[[],14],[[],14],[[],14],[[],14],[[],14],[[],14],[[[58,[17]]],[[14,[17]]]],[[],14],[[],14],[[],14],[[],14],[[],14],[[],14],[[],14],[[],14],[[],14],[[],14],[[],14],[[],59],[[],59],[[],59],[[],59],[[],59],[[],59],[[],59],[[],59],[[],59],[[],59],[[12,39],[[14,[40]]]],[[18,39],[[14,[40]]]],[[12,39],[[14,[40]]]],[[18,39],[[14,[40]]]],0,[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],0,0,0,0,0,[[],1],[[],1],[[]],[[]],[[46,[62,[60,61]]],[[63,[[49,[29]]]]]],[46,[[63,[[49,[29]]]]]],[46,46],[[]],[30],[30],[46,[[63,[[49,[29]]]]]],[30],[[46,36],37],[[]],[[46,[0,[64,21,65]]],[[63,[[49,[29]]]]]],0,[[],30],[[]],[[[49,[48]]],[[49,[1,48]]]],[50,[[50,[1]]]],[51,[[51,[1]]]],[46,[[63,[[49,[29]]]]]],[[46,[62,[60,61]],61],[[63,[[49,[29]]]]]],[46,[[63,[[49,[29]]]]]],[[[41,[45]],66,30],29],[[45,41,30,67,55,[6,[68]],18],29],[46,[[63,[[49,[29]]]]]],[46,[[63,[[49,[29]]]]]],[[46,61,[50,[69]]],[[63,[[49,[29]]]]]],[[46,[0,[64,21,65]],[0,[64,21,65]]],[[63,[[49,[29]]]]]],[46,[[63,[[49,[29]]]]]],[46,[[63,[[49,[29]]]]]],[[]],[[],14],[[],14],[[],59],[[]],0,0,0,0,0,0,0,[[],1],[[],1],[[]],[[]],[[[72,[[0,[16,70]],[0,[16,71]]]]],[[72,[[0,[16,70]],[0,[16,71]]]]]],[[]],[30],[30],[30],[[[72,[70,71]],36],37],[[]],[[],30],[[]],[[[49,[48]]],[[49,[1,48]]]],[50,[[50,[1]]]],[51,[[51,[1]]]],0,0,[[]],[[],14],[[],14],[[],59],[[]],0,0,0,0,0,0,0,0,0,[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[73,[[63,[[49,[29]]]]]],[30],[30],[30],[30],[30],[30],[30],[30],0,[30],[30],[30],[74],[30],0,[[]],[[]],[[]],[[]],[[],30],[[],30],[[],30],[[],29],[[],30],[[]],[[]],[[]],[[]],[[[49,[48]]],[[49,[1,48]]]],[[[49,[48]]],[[49,[1,48]]]],[[[49,[48]]],[[49,[1,48]]]],[[[49,[48]]],[[49,[1,48]]]],[50,[[50,[1]]]],[50,[[50,[1]]]],[50,[[50,[1]]]],[50,[[50,[1]]]],[51,[[51,[1]]]],[51,[[51,[1]]]],[51,[[51,[1]]]],[51,[[51,[1]]]],[75,29],[76,29],[74,29],0,[[[41,[75]],[6,[76]]],29],[73,[[63,[[49,[29]]]]]],[73,31],[[77,78,[6,[27]]],29],0,0,0,[79,29],0,0,[[],14],[[],14],[[],14],[[],14],[[],14],[[],14],[[],14],[[],14],[[],59],[[],59],[[],59],[[],59],[76,66],[[]],[[]],[[]],[[]],0,0,[[],1],[[],1],[3,3],[3,3],[[]],[[]],0,[[],3],[[],3],0,[30],[30],[30],0,[[]],[39,[[14,[80,40]]]],[39,[[14,[80,40]]]],[[],[[6,[43]]]],0,[[[0,[19,20,21]],42,80],29],[[],30],[[]],[[[49,[48]]],[[49,[1,48]]]],[50,[[50,[1]]]],[51,[[51,[1]]]],0,0,[[],14],[[],14],[[],59],[[80,39],[[14,[40]]]],[[80,39],[[14,[40]]]],[[]]],"p":[[8,"Any"],[8,"Error"],[3,"Command"],[4,"ParseRatioError"],[3,"Backtrace"],[4,"Option"],[3,"ParseDurationError"],[3,"MissingDelimiterSnafu"],[3,"InvalidNumeratorSnafu"],[3,"InvalidDenominatorSnafu"],[3,"ParseDurationSnafu"],[3,"NodeOpt"],[3,"String"],[4,"Result"],[3,"Ratio"],[8,"Clone"],[3,"SecretKeySeed"],[3,"ConsensusOpt"],[8,"CryptoRng"],[8,"RngCore"],[8,"Send"],[6,"StakeTableHash"],[3,"KVMerkleProof"],[3,"Amount"],[6,"CollectedRewardsSet"],[6,"StakingPrivKey"],[3,"UserAddress"],[6,"Consensus"],[8,"Future"],[15,"usize"],[3,"PathBuf"],[15,"str"],[8,"Read"],[4,"SerializationError"],[15,"bool"],[3,"Formatter"],[6,"Result"],[8,"Debug"],[3,"ArgMatches"],[6,"Error"],[3,"Vec"],[3,"GenesisNote"],[3,"Id"],[3,"IndentedSection"],[3,"StakingKey"],[4,"HybridNetwork"],[3,"BTreeMap"],[3,"Global"],[3,"Box"],[3,"Arc"],[3,"Rc"],[3,"QueryData"],[3,"RwLock"],[3,"Duration"],[3,"Multiaddr"],[4,"Error"],[8,"Write"],[3,"TaggedBlob"],[3,"TypeId"],[3,"ValidatorState"],[6,"SignatureKey"],[3,"Message"],[3,"Pin"],[8,"Serialize"],[8,"Sync"],[3,"Url"],[4,"NetworkNodeType"],[4,"Keypair"],[3,"AtomicBool"],[8,"PLNet"],[8,"PLStore"],[3,"ValidatorNodeImpl"],[3,"UnencryptedKeystoreLoader"],[3,"TestNetwork"],[3,"TestNode"],[3,"AddressBook"],[6,"ChaChaRng"],[3,"UserPubKey"],[8,"Fn"],[3,"ValidatorOpt"],[13,"InvalidNumerator"],[13,"InvalidDenominator"],[13,"P2P"],[13,"Cdn"]]},\
"espresso_validator_api":{"doc":"","t":[0,0,4,3,13,3,13,3,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,5,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,12,6,16,8,11,10,10],"n":["api","data_source","Error","Options","Request","RequestSnafu","Submission","SubmissionSnafu","api_path","as_any","as_any","as_any","as_any","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_error_source","augment_args","augment_args_for_update","backtrace","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","build","cause","clone","clone","clone","clone_into","clone_into","clone_into","default","define_api","deref","deref","deref","deref","deref_mut","deref_mut","deref_mut","deref_mut","description","deserialize","drop","drop","drop","drop","fail","fmt","fmt","fmt","fmt","from","from","from","from","from","from_arg_matches","from_arg_matches_mut","group_id","header","in_current_span","init","init","init","init","into","into","into","into","into_any","into_any","into_any","into_any","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_error","into_error","reason","render_to","serialize","source","status","to_owned","to_owned","to_owned","to_string","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","update_from_arg_matches","update_from_arg_matches_mut","vzip","vzip","vzip","vzip","reason","source","ConsensusEvent","Error","ValidatorDataSource","into_stream","next_event","submit"],"q":["espresso_validator_api","","espresso_validator_api::api","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","espresso_validator_api::api::Error","","espresso_validator_api::data_source","","","","",""],"d":["","","","","","SNAFU context selector for the <code>Error::Request</code> variant","","SNAFU context selector for the <code>Error::Submission</code> variant","","","","","","","","","","","","","","","","","","","","","","Consume the selector and return the associated error","","","","","","","","","","","","","","","","","","","","","","","","Consume the selector and return a <code>Result</code> with the …","","","","","Returns the argument unchanged.","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","","","","","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","",""],"i":[0,0,0,0,4,0,4,0,10,10,4,8,7,10,4,8,7,4,10,10,4,10,4,8,7,10,4,8,7,7,4,4,8,7,4,8,7,10,0,10,4,8,7,10,4,8,7,4,4,10,4,8,7,7,4,4,8,7,10,4,4,8,7,10,10,10,4,4,10,4,8,7,10,4,8,7,10,4,8,7,10,4,8,7,10,4,8,7,8,7,7,4,4,4,4,4,8,7,4,10,4,8,7,10,4,8,7,10,4,8,7,10,10,10,4,8,7,36,37,0,38,0,38,38,38],"f":[0,0,0,0,0,0,0,0,0,[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],2],[3,3],[3,3],[4,[[6,[5]]]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[7,4],[4,[[6,[2]]]],[4,4],[8,8],[[[7,[9]]],[[7,[9]]]],[[]],[[]],[[]],[[],10],[10,[[13,[[11,[4]],12]]]],[14],[14],[14],[14],[14],[14],[14],[14],[4,15],[[],[[13,[4]]]],[14],[14],[14],[14],[7,[[13,[4]]]],[[4,16],17],[[4,16],17],[[8,16],17],[[[7,[18]],16],17],[[]],[19,4],[[]],[[]],[[]],[20,[[13,[10,21]]]],[20,[[13,[10,21]]]],[[],[[6,[22]]]],[[],23],[[]],[[],14],[[],14],[[],14],[[],14],[[]],[[]],[[]],[[]],[[[25,[24]]],[[25,[1,24]]]],[[[25,[24]]],[[25,[1,24]]]],[[[25,[24]]],[[25,[1,24]]]],[[[25,[24]]],[[25,[1,24]]]],[26,[[26,[1]]]],[26,[[26,[1]]]],[26,[[26,[1]]]],[26,[[26,[1]]]],[27,[[27,[1]]]],[27,[[27,[1]]]],[27,[[27,[1]]]],[27,[[27,[1]]]],[8,4],[7,4],0,[28],[4,13],[4,[[6,[2]]]],[4,29],[[]],[[]],[[]],[[],28],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],30],[[],30],[[],30],[[],30],[[10,20],[[13,[21]]]],[[10,20],[[13,[21]]]],[[]],[[]],[[]],[[]],0,0,0,0,0,[[],[[32,[31]]]],[[],[[34,[[25,[33]]]]]],[35,[[34,[[25,[33]]]]]]],"p":[[8,"Any"],[8,"Error"],[3,"Command"],[4,"Error"],[3,"Backtrace"],[4,"Option"],[3,"SubmissionSnafu"],[3,"RequestSnafu"],[8,"Clone"],[3,"Options"],[3,"Api"],[4,"ApiError"],[4,"Result"],[15,"usize"],[15,"str"],[3,"Formatter"],[6,"Result"],[8,"Debug"],[4,"RequestError"],[3,"ArgMatches"],[6,"Error"],[3,"Id"],[3,"IndentedSection"],[3,"Global"],[3,"Box"],[3,"Arc"],[3,"Rc"],[3,"String"],[4,"StatusCode"],[3,"TypeId"],[6,"ConsensusEvent"],[6,"BoxStream"],[8,"Future"],[3,"Pin"],[3,"ElaboratedTransaction"],[13,"Submission"],[13,"Request"],[8,"ValidatorDataSource"]]},\
"espresso_validator_testing":{"doc":"","t":[3,11,11,11,11,11,11,11,11,11,11,11,11,11,11,5,5,5,11,11,11,11,11,11,5,12,11,11,11,11,11,12,11],"n":["Options","as_any","as_any_mut","augment_args","augment_args_for_update","borrow","borrow_mut","command","command_for_update","deref","deref_mut","drop","from","from_arg_matches","from_arg_matches_mut","generate_transaction","generate_transactions","genesis_for_test","group_id","init","into","into_any","into_any_arc","into_any_rc","main","num_txns","try_from","try_into","type_id","update_from_arg_matches","update_from_arg_matches_mut","validator_opt","vzip"],"q":["espresso_validator_testing","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","",""],"d":["","","","","","","","","","","","","Returns the argument unchanged.","","","","","","","","Calls <code>U::from(self)</code>.","","","","","Number of transactions to generate.","","","","","","",""],"i":[0,5,5,5,5,5,5,5,5,5,5,5,5,5,5,0,0,0,5,5,5,5,5,5,0,5,5,5,5,5,5,5,5],"f":[0,[[],1],[[],1],[2,2],[2,2],[[]],[[]],[[],2],[[],2],[3],[3],[3],[[]],[4,[[7,[5,6]]]],[4,[[7,[5,6]]]],[[8,9],10],[[9,3,11,8],10],[[12,13]],[[],[[15,[14]]]],[[],3],[[]],[[[17,[16]]],[[17,[1,16]]]],[18,[[18,[1]]]],[19,[[19,[1]]]],[[],[[7,[20]]]],0,[[],7],[[],7],[[],21],[[5,4],[[7,[6]]]],[[5,4],[[7,[6]]]],0,[[]]],"p":[[8,"Any"],[3,"Command"],[15,"usize"],[3,"ArgMatches"],[3,"Options"],[6,"Error"],[4,"Result"],[3,"MultiXfrTestState"],[15,"u64"],[8,"Future"],[6,"Consensus"],[3,"NodeOpt"],[3,"ConsensusOpt"],[3,"Id"],[4,"Option"],[3,"Global"],[3,"Box"],[3,"Arc"],[3,"Rc"],[3,"Error"],[3,"TypeId"]]},\
"faucet":{"doc":"Faucet","t":[0,0,13,3,3,3,3,4,3,13,12,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,5,5,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,11,12,12,12,12,12,11,11,11,11,11,11,11,11,11,11,11,11,11,12,12,11,11,5,12,12,11,11,11,11,11,11,5,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,11,11,11,5,5,12,12,12,11,11,12,12,12,12,12,11,11,12,12,12,11,5,12,11,11,12,5,11,12,12,12,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,5,3,11,11,11,11,11,11,11,11,11,11,11,5,11,11,11,11,11,11,11,11,11,11,5,12,11,11,11,11,11,11],"n":["faucet","faucet_keystore_test_setup","Available","FaucetOptions","FaucetQueue","FaucetQueueIndex","FaucetState","FaucetStatus","HealthCheck","Initializing","address_book_url","api_path","as_any","as_any","as_any","as_any","as_any","as_any","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","augment_args","augment_args_for_update","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","break_up_records","check_service_available","clone","clone","clone","clone","clone_into","clone_into","clone_into","clone_into","command","command_for_update","deref","deref","deref","deref","deref","deref","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deserialize","deserialize","drop","drop","drop","drop","drop","drop","eq","eq","esqs_url","fail","faucet_keystore_path","faucet_password","faucet_port","fee_size","fee_size","fmt","fmt","fmt","from","from","from","from","from","from","from_arg_matches","from_arg_matches_mut","grant","grant","grant_size","grant_size","grants","group_id","healthcheck","index","index","init","init","init","init","init","init","init_web_server","insert","into","into","into","into","into","into","into_any","into_any","into_any","into_any","into_any","into_any","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","keystore","keystore_path","len","load","main","maintain_enough_records","max_len","max_queue_len","mnemonic","ne","new","num_grants","num_grants","num_records","num_records","num_workers","pop","push","queue","queue","receiver","remove","request_fee_assets","sender","serialize","serialize","signal_breaker_thread","spendable_records","status","status","status","store","submit_url","to_owned","to_owned","to_owned","to_owned","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","type_id","update_from_arg_matches","update_from_arg_matches_mut","vzip","vzip","vzip","vzip","vzip","vzip","worker","Options","as_any","as_any_mut","augment_args","augment_args_for_update","borrow","borrow_mut","command","command_for_update","deref","deref_mut","drop","field_to_hex","fmt","from","from_arg_matches","from_arg_matches_mut","group_id","init","into","into_any","into_any_arc","into_any_rc","main","mnemonic","try_from","try_into","type_id","update_from_arg_matches","update_from_arg_matches_mut","vzip"],"q":["faucet","","faucet::faucetfaucet::faucet_keystore_test_setup","","","","","","","","","","","","","","","","","","","","","","","","","","","","","",""],"d":["The Espresso Faucet","A script to export environment variables for test …","","","A shared, asynchronous queue of requests.","","","","","","URL for the Espresso address book.","override path to API specification","","","","","","","","","","","","","","","","","","","","","","","","","","","Break records into smaller pieces to create at least …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","URL for the Espresso Query Service.","","path to the faucet keystore","password on the faucet account keyfile","binding port for the faucet service","fee for faucet grant","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","","Increment the number of grants received by an element in …","","size of transfer for faucet grant","","Get the number of grants already given to this key.","","Return a JSON expression with status 200 indicating the …","","","","","","","","","<code>faucet_key_pair</code> - If provided, will be added to the faucet …","Add an element to the persistent index.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","","Worker task to maintain at least <code>state.num_records</code> in the …","","Maximum number of outstanding requests to allow in the …","mnemonic for the faucet keystore","","","number of grants to give out per request","","number of records to maintain simultaneously.","","Number of worker threads.","","","","","","Remove an element from the persistent set.","","","","","","","","","","","URL for a validator to submit transactions to.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","","","","","Calls <code>U::from(self)</code>.","","","","","mnemonic for the faucet keystore (if not provided, a …","","","","","",""],"i":[0,0,5,0,0,0,0,0,0,5,12,12,17,12,5,3,6,7,17,12,5,3,6,7,12,12,17,12,5,3,6,7,17,12,5,3,6,7,0,0,5,3,6,7,5,3,6,7,12,12,17,12,5,3,6,7,17,12,5,3,6,7,5,7,17,12,5,3,6,7,5,7,12,6,12,12,12,12,3,12,5,7,17,12,5,3,6,7,12,12,17,6,12,3,17,12,0,17,6,17,12,5,3,6,7,0,17,17,12,5,3,6,7,17,12,5,3,6,7,17,12,5,3,6,7,17,12,5,3,6,7,3,12,17,6,0,0,6,12,12,7,3,12,3,12,3,12,6,6,17,3,6,17,0,6,5,7,3,0,7,3,7,17,12,5,3,6,7,17,12,5,3,6,7,17,12,5,3,6,7,17,12,5,3,6,7,12,12,17,12,5,3,6,7,0,0,42,42,42,42,42,42,42,42,42,42,42,0,42,42,42,42,42,42,42,42,42,42,0,42,42,42,42,42,42,42],"f":[0,0,0,0,0,0,0,0,0,0,0,0,[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[2,2],[2,2],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[3,4],[3,4],[5,5],[3,3],[6,6],[7,7],[[]],[[]],[[]],[[]],[[],2],[[],2],[8],[8],[8],[8],[8],[8],[8],[8],[8],[8],[8],[8],[[],[[9,[5]]]],[[],[[9,[7]]]],[8],[8],[8],[8],[8],[8],[[5,5],10],[[7,7],10],0,[[6,11],4],0,0,0,0,0,[[12,13],14],[[5,13],14],[[7,13],14],[[]],[[]],[[]],[[]],[[]],[[]],[15,[[9,[12,16]]]],[15,[[9,[12,16]]]],[[17,11,8,8],[[9,[10,18]]]],[[6,11,8,8],4],0,0,[[17,11],8],[[],[[20,[19]]]],[3,4],0,0,[[],8],[[],8],[[],8],[[],8],[[],8],[[],8],[[21,12,[20,[22]]],4],[[17,11],[[9,[10,18]]]],[[]],[[]],[[]],[[]],[[]],[[]],[[[24,[23]]],[[24,[1,23]]]],[[[24,[23]]],[[24,[1,23]]]],[[[24,[23]]],[[24,[1,23]]]],[[[24,[23]]],[[24,[1,23]]]],[[[24,[23]]],[[24,[1,23]]]],[[[24,[23]]],[[24,[1,23]]]],[25,[[25,[1]]]],[25,[[25,[1]]]],[25,[[25,[1]]]],[25,[[25,[1]]]],[25,[[25,[1]]]],[25,[[25,[1]]]],[26,[[26,[1]]]],[26,[[26,[1]]]],[26,[[26,[1]]]],[26,[[26,[1]]]],[26,[[26,[1]]]],[26,[[26,[1]]]],0,[12,27],[17,8],[[28,[20,[8]]],4],[[],[[9,[29]]]],[[3,30],4],0,0,0,[[7,7],10],[[[33,[31,32]],34,12],4],0,0,0,0,0,[6,4],[[6,11],4],0,0,0,[[17,11],[[9,[18]]]],[[35,3],4],0,[5,9],[7,9],0,[[33,36],4],[7,37],0,0,0,0,[[]],[[]],[[]],[[]],[[],9],[[],9],[[],9],[[],9],[[],9],[[],9],[[],9],[[],9],[[],9],[[],9],[[],9],[[],9],[[],38],[[],38],[[],38],[[],38],[[],38],[[],38],[[12,15],[[9,[16]]]],[[12,15],[[9,[16]]]],[[]],[[]],[[]],[[]],[[]],[[]],[[8,3],4],0,[[],1],[[],1],[2,2],[2,2],[[]],[[]],[[],2],[[],2],[8],[8],[8],[[[40,[39]]],41],[[42,13],14],[[]],[15,[[9,[42,16]]]],[15,[[9,[42,16]]]],[[],[[20,[19]]]],[[],8],[[]],[[[24,[23]]],[[24,[1,23]]]],[25,[[25,[1]]]],[26,[[26,[1]]]],[[],[[9,[29]]]],0,[[],9],[[],9],[[],38],[[42,15],[[9,[16]]]],[[42,15],[[9,[16]]]],[[]]],"p":[[8,"Any"],[3,"Command"],[3,"FaucetState"],[8,"Future"],[4,"FaucetStatus"],[3,"FaucetQueue"],[3,"HealthCheck"],[15,"usize"],[4,"Result"],[15,"bool"],[3,"UserPubKey"],[3,"FaucetOptions"],[3,"Formatter"],[6,"Result"],[3,"ArgMatches"],[6,"Error"],[3,"FaucetQueueIndex"],[4,"FaucetError"],[3,"Id"],[4,"Option"],[6,"ChaChaRng"],[3,"UserKeyPair"],[3,"Global"],[3,"Box"],[3,"Arc"],[3,"Rc"],[3,"PathBuf"],[3,"Path"],[3,"Error"],[3,"Receiver"],[3,"NetworkBackend"],[3,"MnemonicPasswordLogin"],[6,"EspressoKeystore"],[3,"Sender"],[3,"RequestParams"],[3,"RecordAmount"],[4,"StatusCode"],[3,"TypeId"],[3,"BigUint"],[8,"Into"],[3,"String"],[3,"Options"]]},\
"faucet_types":{"doc":"","t":[13,4,13,13,13,13,13,13,11,11,11,11,11,11,11,11,11,11,11,11,11,0,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,12,12,12,12,12,12,3,3,3,3,3,3,3,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,12,12,12,12,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11],"n":["AlreadyInQueue","FaucetError","Internal","Persistence","QueueFull","Request","Transfer","Unavailable","as_any","as_any_mut","as_error_source","backtrace","borrow","borrow_mut","catch_all","cause","deref","deref_mut","description","deserialize","drop","error","fmt","fmt","from","from","from","init","into","into_any","into_any_arc","into_any_rc","render_to","serialize","source","status","to_string","try_from","try_into","type_id","vzip","key","max_len","msg","msg","msg","source","status","AlreadyInQueueSnafu","InternalSnafu","PersistenceSnafu","QueueFullSnafu","RequestSnafu","TransferSnafu","UnavailableSnafu","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","build","build","build","build","build","build","clone","clone","clone","clone","clone","clone","clone","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","deref","deref","deref","deref","deref","deref","deref","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","drop","drop","drop","drop","drop","drop","drop","fail","fail","fail","fail","fail","fail","fmt","fmt","fmt","fmt","fmt","fmt","fmt","from","from","from","from","from","from","from","init","init","init","init","init","init","init","into","into","into","into","into","into","into","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_error","into_error","into_error","into_error","into_error","into_error","into_error","key","max_len","msg","msg","msg","status","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","type_id","type_id","vzip","vzip","vzip","vzip","vzip","vzip","vzip"],"q":["faucet_types","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","faucet_types::FaucetError","","","","","","","faucet_types::errord":["","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","","","","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","SNAFU context selector for the <code>FaucetError::AlreadyInQueue</code> …","SNAFU context selector for the <code>FaucetError::Internal</code> …","SNAFU context selector for the <code>FaucetError::Persistence</code> …","SNAFU context selector for the <code>FaucetError::QueueFull</code> …","SNAFU context selector for the <code>FaucetError::Request</code> variant","SNAFU context selector for the <code>FaucetError::Transfer</code> …","SNAFU context selector for the <code>FaucetError::Unavailable</code> …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Consume the selector and return the associated error","Consume the selector and return the associated error","Consume the selector and return the associated error","Consume the selector and return the associated error","Consume the selector and return the associated error","Consume the selector and return the associated error","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Consume the selector and return a <code>Result</code> with the …","Consume the selector and return a <code>Result</code> with the …","Consume the selector and return a <code>Result</code> with the …","Consume the selector and return a <code>Result</code> with the …","Consume the selector and return a <code>Result</code> with the …","Consume the selector and return a <code>Result</code> with the …","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","","","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","",""],"i":[3,0,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,0,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,29,30,31,32,33,34,32,0,0,0,0,0,0,0,26,20,21,22,23,24,25,26,20,21,22,23,24,25,26,20,21,22,23,24,25,26,20,21,22,23,24,25,20,21,22,23,24,25,26,20,21,22,23,24,25,26,20,21,22,23,24,25,26,20,21,22,23,24,25,26,20,21,22,23,24,25,26,20,21,22,23,24,25,20,21,22,23,24,25,26,20,21,22,23,24,25,26,20,21,22,23,24,25,26,20,21,22,23,24,25,26,20,21,22,23,24,25,26,20,21,22,23,24,25,26,20,21,22,23,24,25,26,20,21,22,23,24,25,26,20,21,22,23,24,25,23,22,20,21,24,21,26,20,21,22,23,24,25,26,20,21,22,23,24,25,26,20,21,22,23,24,25,26,20,21,22,23,24,25,26,20,21,22,23,24,25],"f":[0,0,0,0,0,0,0,0,[[],1],[[],1],[[],2],[3,[[5,[4]]]],[[]],[[]],[[6,7],3],[3,[[5,[2]]]],[8],[8],[3,9],[[],[[10,[3]]]],[8],0,[[3,11],12],[[3,11],12],[[]],[13,3],[14,3],[[],8],[[]],[[[16,[15]]],[[16,[1,15]]]],[17,[[17,[1]]]],[18,[[18,[1]]]],[7],[3,10],[3,[[5,[2]]]],[3,6],[[],7],[[],10],[[],10],[[],19],[[]],0,0,0,0,0,0,0,0,0,0,0,0,0,0,[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[20,3],[21,3],[22,3],[23,3],[24,3],[25,3],[26,26],[[[20,[27]]],[[20,[27]]]],[[[21,[27,27]]],[[21,[27,27]]]],[[[22,[27]]],[[22,[27]]]],[[[23,[27]]],[[23,[27]]]],[[[24,[27]]],[[24,[27]]]],[25,25],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[8],[8],[8],[8],[8],[8],[8],[8],[8],[8],[8],[8],[8],[8],[8],[8],[8],[8],[8],[8],[8],[20,[[10,[3]]]],[21,[[10,[3]]]],[22,[[10,[3]]]],[23,[[10,[3]]]],[24,[[10,[3]]]],[25,[[10,[3]]]],[[26,11],12],[[[20,[28]],11],12],[[[21,[28,28]],11],12],[[[22,[28]],11],12],[[[23,[28]],11],12],[[[24,[28]],11],12],[[25,11],12],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],8],[[],8],[[],8],[[],8],[[],8],[[],8],[[],8],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[[16,[15]]],[[16,[1,15]]]],[[[16,[15]]],[[16,[1,15]]]],[[[16,[15]]],[[16,[1,15]]]],[[[16,[15]]],[[16,[1,15]]]],[[[16,[15]]],[[16,[1,15]]]],[[[16,[15]]],[[16,[1,15]]]],[[[16,[15]]],[[16,[1,15]]]],[17,[[17,[1]]]],[17,[[17,[1]]]],[17,[[17,[1]]]],[17,[[17,[1]]]],[17,[[17,[1]]]],[17,[[17,[1]]]],[17,[[17,[1]]]],[18,[[18,[1]]]],[18,[[18,[1]]]],[18,[[18,[1]]]],[18,[[18,[1]]]],[18,[[18,[1]]]],[18,[[18,[1]]]],[18,[[18,[1]]]],[26,3],[20,3],[21,3],[22,3],[23,3],[24,3],[25,3],0,0,0,0,0,0,[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],19],[[],19],[[],19],[[],19],[[],19],[[],19],[[],19],[[]],[[]],[[]],[[]],[[]],[[]],[[]]],"p":[[8,"Any"],[8,"Error"],[4,"FaucetError"],[3,"Backtrace"],[4,"Option"],[4,"StatusCode"],[3,"String"],[15,"usize"],[15,"str"],[4,"Result"],[3,"Formatter"],[6,"Result"],[4,"PersistenceError"],[4,"RequestError"],[3,"Global"],[3,"Box"],[3,"Arc"],[3,"Rc"],[3,"TypeId"],[3,"TransferSnafu"],[3,"InternalSnafu"],[3,"QueueFullSnafu"],[3,"AlreadyInQueueSnafu"],[3,"PersistenceSnafu"],[3,"UnavailableSnafu"],[3,"RequestSnafu"],[8,"Clone"],[8,"Debug"],[13,"AlreadyInQueue"],[13,"QueueFull"],[13,"Transfer"],[13,"Internal"],[13,"Persistence"],[13,"Request"]]},\
"measure_throughput":{"doc":"","t":[3,3,3,11,11,11,11,11,11,11,11,12,11,11,11,11,11,11,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,12,11,11,11,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,5,11,12,12,11,11,12,11,11,11,12,12,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11],"n":["Measurement","Options","Snapshot","as_any","as_any","as_any","as_any_mut","as_any_mut","as_any_mut","augment_args","augment_args_for_update","blocks","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","bytes","clone","clone","clone_into","clone_into","command","command_for_update","deref","deref","deref","deref_mut","deref_mut","deref_mut","drop","drop","drop","duration","esqs_url","fmt","fmt","fmt","frequency","from","from","from","from_arg_matches","from_arg_matches_mut","group_id","header","init","init","init","into","into","into","into_any","into_any","into_any","into_any_arc","into_any_arc","into_any_arc","into_any_rc","into_any_rc","into_any_rc","main","new","num_blocks","num_txns","render_to","sub","t","to_owned","to_owned","to_string","total","total_size","transactions","try_from","try_from","try_from","try_into","try_into","try_into","type_id","type_id","type_id","update_from_arg_matches","update_from_arg_matches_mut","vzip","vzip","vzip"],"q":["measure_throughput","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","",""],"d":["","Measure system throughput over time by polling a query …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","The query service to poll for ledger state.","","","","The frequency at which to poll current throughput.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","","","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","The total duration over which to measure throughput.","","","","","","","","","","","","","","","",""],"i":[0,0,0,9,3,4,9,3,4,9,9,3,9,3,4,9,3,4,3,3,4,3,4,9,9,9,3,4,9,3,4,9,3,4,3,9,3,3,4,9,9,3,4,9,9,9,3,9,3,4,9,3,4,9,3,4,9,3,4,9,3,4,0,4,4,4,3,4,4,3,4,3,9,4,3,9,3,4,9,3,4,9,3,4,9,9,9,3,4],"f":[0,0,0,[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[2,2],[2,2],0,[[]],[[]],[[]],[[]],[[]],[[]],0,[3,3],[4,4],[[]],[[]],[[],2],[[],2],[5],[5],[5],[5],[5],[5],[5],[5],[5],0,0,[[3,6],7],[[3,6],7],[[4,6],7],0,[[]],[[]],[[]],[8,[[11,[9,10]]]],[8,[[11,[9,10]]]],[[],[[13,[12]]]],[[],14],[[],5],[[],5],[[],5],[[]],[[]],[[]],[[[16,[15]]],[[16,[1,15]]]],[[[16,[15]]],[[16,[1,15]]]],[[[16,[15]]],[[16,[1,15]]]],[17,[[17,[1]]]],[17,[[17,[1]]]],[17,[[17,[1]]]],[18,[[18,[1]]]],[18,[[18,[1]]]],[18,[[18,[1]]]],[[],[[11,[19]]]],[20,21],0,0,[22],[[4,4],3],0,[[]],[[]],[[],22],0,0,0,[[],11],[[],11],[[],11],[[],11],[[],11],[[],11],[[],23],[[],23],[[],23],[[9,8],[[11,[10]]]],[[9,8],[[11,[10]]]],[[]],[[]],[[]]],"p":[[8,"Any"],[3,"Command"],[3,"Measurement"],[3,"Snapshot"],[15,"usize"],[3,"Formatter"],[6,"Result"],[3,"ArgMatches"],[3,"Options"],[6,"Error"],[4,"Result"],[3,"Id"],[4,"Option"],[3,"IndentedSection"],[3,"Global"],[3,"Box"],[3,"Arc"],[3,"Rc"],[4,"ApiError"],[3,"Url"],[8,"Future"],[3,"String"],[3,"TypeId"]]},\
"multi_machine_automation":{"doc":"","t":[3,11,11,11,11,11,11,5,11,11,11,11,11,12,12,12,11,11,11,11,11,11,11,11,11,5,12,12,12,11,11,11,11,11,12,11],"n":["Options","as_any","as_any_mut","augment_args","augment_args_for_update","borrow","borrow_mut","cargo_run","command","command_for_update","deref","deref_mut","drop","esqs","fail_after_txn","faucet_pub_key","from","from_arg_matches","from_arg_matches_mut","group_id","init","into","into_any","into_any_arc","into_any_rc","main","node_opt","num_fail_nodes","num_txns","try_from","try_into","type_id","update_from_arg_matches","update_from_arg_matches_mut","verbose","vzip"],"q":["multi_machine_automation","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","",""],"d":["","","","","","","","","","","","","","Options for the new EsQS.","Number of rounds that all nodes will be running, after …","Public key which should own a faucet record in the genesis …","Returns the argument unchanged.","","","","","Calls <code>U::from(self)</code>.","","","","","","Number of nodes to run only <code>fail_after_txn</code> rounds.","Number of transactions to generate.","","","","","","",""],"i":[0,8,8,8,8,8,8,0,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,0,8,8,8,8,8,8,8,8,8,8],"f":[0,[[],1],[[],1],[2,2],[2,2],[[]],[[]],[[[4,[3]]],5],[[],2],[[],2],[6],[6],[6],0,0,0,[[]],[7,[[10,[8,9]]]],[7,[[10,[8,9]]]],[[],[[12,[11]]]],[[],6],[[]],[[[14,[13]]],[[14,[1,13]]]],[15,[[15,[1]]]],[16,[[16,[1]]]],[[]],0,0,0,[[],10],[[],10],[[],17],[[8,7],[[10,[9]]]],[[8,7],[[10,[9]]]],0,[[]]],"p":[[8,"Any"],[3,"Command"],[15,"str"],[8,"AsRef"],[3,"Command"],[15,"usize"],[3,"ArgMatches"],[3,"Options"],[6,"Error"],[4,"Result"],[3,"Id"],[4,"Option"],[3,"Global"],[3,"Box"],[3,"Arc"],[3,"Rc"],[3,"TypeId"]]},\
"random_wallet":{"doc":"","t":[12,3,3,13,6,13,4,13,3,13,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,11,11,11,11,11,11,11,11,11,11,11,11,12,11,11,11,11,12,12,5,11,11,11,11,11,11,11,11,11,11,11,5,5,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,12,11,11,5,12,11,11,5,12,12,11,11,5,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,11,11,11,11],"n":["0","Args","Bytes","Freeze","Keystore","Mint","OperationType","Transfer","TrivialKeystoreLoader","Unfreeze","address_book_url","as_any","as_any","as_any","as_any","as_any_mut","as_any_mut","as_any_mut","as_any_mut","augment_args","augment_args_for_update","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","clone","clone_into","colored_logs","command","command_for_update","create","deref","deref","deref","deref","deref","deref_mut","deref_mut","deref_mut","deref_mut","dir","drop","drop","drop","drop","esqs_url","faucet_url","find_freezable_records","fmt","fmt","fmt","fmt","from","from","from","from","from_arg_matches","from_arg_matches_mut","from_str","get_native_from_faucet","get_peers","group_id","header","init","init","init","init","into","into","into","into","into_any","into_any","into_any","into_any","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","key_path","key_tree","load","location","main","padding","rand","render_to","retry_delay","seed","storage","to_owned","to_string","transfer","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","update_from_arg_matches","update_from_arg_matches_mut","validator_url","vzip","vzip","vzip","vzip"],"q":["random_wallet","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","",""],"d":["","","","","","","","","","","URL of a server for address book","","","","","","","","","","","","","","","","","","","","","Whether to color log output with ANSI color codes.","","","","","","","","","","","","","","","","","","URL of a server for querying with the ledger","","Return records the freezer has access to freeze or …","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","","","","","","","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","Path to a private key file to use for the keystore.","","","","","Size of additional padding to add to transfers.","","","","Seed for random number generation.","Path to a saved keystore, or a new directory where this …","","","","","","","","","","","","","","","","","","URL of a server for interacting with the ledger","","","",""],"i":[3,0,0,11,0,11,0,11,0,11,14,4,11,3,14,4,11,3,14,14,14,4,11,3,14,4,11,3,14,3,3,14,14,14,4,4,11,3,3,14,4,11,3,14,4,4,11,3,14,14,14,0,11,3,3,14,4,11,3,14,14,14,3,0,0,14,3,4,11,3,14,4,11,3,14,4,11,3,14,4,11,3,14,4,11,3,14,14,4,4,4,0,14,11,3,0,14,14,3,3,0,4,11,3,14,4,11,3,14,4,11,3,14,14,14,14,4,11,3,14],"f":[0,0,0,0,0,0,0,0,0,0,0,[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[2,2],[2,2],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[3,3],[[]],0,[[],2],[[],2],[4,[[7,[[6,[5]]]]]],[8],[8],[8],[3],[8],[8],[8],[8],[8],0,[8],[8],[8],[8],0,0,[[9,10],5],[[11,12],13],[[3,12],13],[[3,12],13],[[14,12],13],[[]],[[]],[[]],[[]],[15,[[17,[14,16]]]],[15,[[17,[14,16]]]],[18,[[17,[3]]]],[[9,19,20],5],[20,5],[[],[[22,[21]]]],[[],23],[[],8],[[],8],[[],8],[[],8],[[]],[[]],[[]],[[]],[[[6,[24]]],[[6,[1,24]]]],[[[6,[24]]],[[6,[1,24]]]],[[[6,[24]]],[[6,[1,24]]]],[[[6,[24]]],[[6,[1,24]]]],[25,[[25,[1]]]],[25,[[25,[1]]]],[25,[[25,[1]]]],[25,[[25,[1]]]],[26,[[26,[1]]]],[26,[[26,[1]]]],[26,[[26,[1]]]],[26,[[26,[1]]]],0,0,[4,[[7,[[6,[5]]]]]],[4,27],[[]],0,[[]],[28],[[],5],0,0,[[]],[[],28],[[9,29,19,[0,[[31,[30]],32]],8],5],[[],17],[[],17],[[],17],[[],17],[[],17],[[],17],[[],17],[[],17],[[],33],[[],33],[[],33],[[],33],[[14,15],[[17,[16]]]],[[14,15],[[17,[16]]]],0,[[]],[[]],[[]],[[]]],"p":[[8,"Any"],[3,"Command"],[3,"Bytes"],[3,"TrivialKeystoreLoader"],[8,"Future"],[3,"Box"],[3,"Pin"],[15,"usize"],[3,"Keystore"],[4,"FreezeFlag"],[4,"OperationType"],[3,"Formatter"],[6,"Result"],[3,"Args"],[3,"ArgMatches"],[6,"Error"],[4,"Result"],[15,"str"],[3,"UserPubKey"],[3,"Url"],[3,"Id"],[4,"Option"],[3,"IndentedSection"],[3,"Global"],[3,"Arc"],[3,"Rc"],[3,"PathBuf"],[3,"String"],[3,"AssetCode"],[3,"RecordAmount"],[8,"Into"],[8,"Clone"],[3,"TypeId"]]},\
"test_query_api":{"doc":"","t":[3,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,5,11,12,11,11,11,11,11,5,12,5,11,11,11,11,11,5,5,5,11],"n":["Args","all","as_any","as_any_mut","augment_args","augment_args_for_update","borrow","borrow_mut","command","command_for_update","deref","deref_mut","drop","from","from_arg_matches","from_arg_matches_mut","get","group_id","host","init","into","into_any","into_any_arc","into_any_rc","main","port","test","try_from","try_into","type_id","update_from_arg_matches","update_from_arg_matches_mut","url","url_with_scheme","validate_committed_block","vzip"],"q":["test_query_api","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","",""],"d":["","Test all blocks in the history.","","","","","","","","","","","","Returns the argument unchanged.","","","","","Hostname or IP address of the query server.","","Calls <code>U::from(self)</code>.","","","","","Port number of the query service.","","","","","","","","","",""],"i":[0,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,0,5,5,5,5,5,5,5,0,5,0,5,5,5,5,5,0,0,0,5],"f":[0,0,[[],1],[[],1],[2,2],[2,2],[[]],[[]],[[],2],[[],2],[3],[3],[3],[[]],[4,[[7,[5,6]]]],[4,[[7,[5,6]]]],[[5,8],9],[[],[[11,[10]]]],0,[[],3],[[]],[[[13,[12]]],[[13,[1,12]]]],[14,[[14,[1]]]],[15,[[15,[1]]]],[[]],0,[5,9],[[],7],[[],7],[[],16],[[5,4],[[7,[6]]]],[[5,4],[[7,[6]]]],[[5,8],17],[[5,8,8],17],[[5,18,19,20,20],9],[[]]],"p":[[8,"Any"],[3,"Command"],[15,"usize"],[3,"ArgMatches"],[3,"Args"],[6,"Error"],[4,"Result"],[8,"Display"],[8,"Future"],[3,"Id"],[4,"Option"],[3,"Global"],[3,"Box"],[3,"Arc"],[3,"Rc"],[3,"TypeId"],[3,"Url"],[3,"BlockQueryData"],[3,"BlockSummaryQueryData"],[15,"u64"]]},\
"wallet_cli":{"doc":"","t":[3,3,12,11,11,11,11,11,11,11,11,11,11,0,11,11,11,11,11,11,11,11,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,11,5,12,12,11,12,12,11,11,11,11,11,11,11,11,11,11,11,3,3,3,3,3,12,11,12,12,11,11,11,11,11,11,11,11,11,11,12,11,11,11,11,11,11,11,11,11,11,5,12,12,5,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,5,11,11,11,11,11,11,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,11,11,12,11,11,11,11,11,11,11,11,11,11,11,11,11,12,12,12,12,12,12,12,11,11,12,12,11,12,12,11,12,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,11,12,11,12,11,11,11,11,11,5],"n":["Args","EspressoCli","address_book_url","as_any","as_any","as_any_mut","as_any_mut","augment_args","augment_args_for_update","borrow","borrow","borrow_mut","borrow_mut","cli_client","command","command_for_update","deref","deref","deref_mut","deref_mut","drop","drop","esqs_url","from","from","from_arg_matches","from_arg_matches_mut","group_id","init","init","init_backend","init_loader","into","into","into_any","into_any","into_any_arc","into_any_arc","into_any_rc","into_any_rc","io","key_gen","key_gen_path","main","non_interactive","storage","storage_path","submit_url","tmp_storage","try_from","try_from","try_into","try_into","type_id","type_id","update_from_arg_matches","update_from_arg_matches_mut","use_tmp_storage","vzip","vzip","Cdn","CliClient","Keystore","OpenKeystore","Validator","_tmp_dir","address_book","address_book","address_book","as_any","as_any","as_any","as_any","as_any","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","bootstrap_ports","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","cargo_run","cdn","cdn_url","cli_test","close","close","close","close_validator","command","command","deref","deref","deref","deref","deref","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","drop","drop","drop","drop","drop","drop","drop","drop","err","from","from","from","from","from","hostname","id","init","init","init","init","init","init","into","into","into","into","into","into_any","into_any","into_any","into_any","into_any","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","key_gen","key_path","keystore_key_path","keystores","keystores","last_output","load","new","new","new","open","open","open","open_validator","open_with_args","output","pid","pid","port","prev_output","process","process","process","process","pub_key","read_until_prompt","server_port","server_port","server_port","start_validators","stdin","stdout","storage","storage","store_path","substitute","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","url","validator","validator","validator","validators","validators","var","variables","vzip","vzip","vzip","vzip","vzip","wait_for_connect"],"q":["wallet_cli","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","wallet_cli::cli_client","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","",""],"d":["","","URL for the Espresso address book.","","","","","","","","","","","","","","","","","","","","URL for the Espresso Query Service.","Returns the argument unchanged.","Returns the argument unchanged.","","","","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","Generate keys for a keystore, do not run the REPL.","","","Run in a mode which is friendlier to automated scripting.","Path to a saved keystore, or a new directory where this …","","URL for a validator to submit transactions to.","Create a new keystore and store it an a temporary location …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Set up and run a test of the keystore CLI.","","","","","Issue a command to the keystore identified by <code>keystore</code>.","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","","","","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Match the output of the previous command against a regex.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","",""],"i":[0,0,5,39,5,39,5,5,5,39,5,39,5,0,5,5,39,5,39,5,39,5,5,39,5,5,5,5,39,5,39,39,39,5,39,5,39,5,39,5,5,5,5,0,5,5,5,5,5,39,5,39,5,39,5,5,5,5,39,5,0,0,0,0,0,29,22,29,22,29,40,22,30,32,29,40,22,30,32,30,29,40,22,30,32,29,40,22,30,32,0,29,30,0,29,22,30,29,29,22,29,40,22,30,32,29,40,22,30,32,29,40,22,22,30,30,32,32,0,29,40,22,30,32,30,30,29,40,22,30,32,32,29,40,22,30,32,29,40,22,30,32,29,40,22,30,32,29,40,22,30,32,22,22,29,29,29,29,29,29,22,30,29,22,30,29,29,29,22,30,32,29,40,22,30,32,30,22,30,29,30,29,40,40,22,22,30,29,29,40,22,30,32,29,40,22,30,32,29,40,22,30,32,32,29,22,22,29,29,29,29,29,40,22,30,32,0],"f":[0,0,0,[[],1],[[],1],[[],1],[[],1],[2,2],[2,2],[[]],[[]],[[]],[[]],0,[[],2],[[],2],[3],[3],[3],[3],[3],[3],0,[[]],[[]],[4,[[7,[5,6]]]],[4,[[7,[5,6]]]],[[],[[9,[8]]]],[[],3],[[],3],[10,[[13,[[12,[11]]]]]],[[14,15],[[13,[[12,[11]]]]]],[[]],[[]],[[[12,[16]]],[[12,[1,16]]]],[[[12,[16]]],[[12,[1,16]]]],[17,[[17,[1]]]],[17,[[17,[1]]]],[18,[[18,[1]]]],[18,[[18,[1]]]],[5,[[9,[19]]]],0,[5,[[9,[14]]]],[[]],0,0,[5,[[9,[14]]]],0,0,[[],7],[[],7],[[],7],[[],7],[[],20],[[],20],[[5,4],[[7,[6]]]],[[5,4],[[7,[6]]]],[5,21],[[]],[[]],0,0,0,0,0,0,[22,23],0,0,[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],0,[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[[25,[24]],[25,[24]]],[[7,[26,27]]]],0,0,[28],[[29,3],[[7,[29,27]]]],[22],[30],[[29,3],[[7,[29,27]]]],[[29,3,[25,[24]]],[[7,[29,27]]]],[[22,24],[[7,[[31,[27]],27]]]],[3],[3],[3],[3],[3],[3],[3],[3],[3],[3],[3],[3],[22],[3],[30],[3],[32],[3],[33,27],[[]],[[]],[[]],[[]],[[]],[30,27],0,[[],3],[[],3],[[],3],[[],3],[[],[[7,[32,27]]]],[[],3],[[]],[[]],[[]],[[]],[[]],[[[12,[16]]],[[12,[1,16]]]],[[[12,[16]]],[[12,[1,16]]]],[[[12,[16]]],[[12,[1,16]]]],[[[12,[16]]],[[12,[1,16]]]],[[[12,[16]]],[[12,[1,16]]]],[17,[[17,[1]]]],[17,[[17,[1]]]],[17,[[17,[1]]]],[17,[[17,[1]]]],[17,[[17,[1]]]],[18,[[18,[1]]]],[18,[[18,[1]]]],[18,[[18,[1]]]],[18,[[18,[1]]]],[18,[[18,[1]]]],[34,[[7,[27]]]],0,[[29,3],[[7,[14,27]]]],[29,35],0,[29,35],[[29,[9,[14]]],[[7,[29,27]]]],[[],[[7,[29,27]]]],[[23,23,[9,[14]]],[[7,[22,27]]]],[[34,36,3,37,[31,[37]],23],30],[[29,3],[[7,[29,27]]]],[22,[[7,[[31,[27]],27]]]],[[30,3],11],[[29,3],[[7,[29,27]]]],[[29,3],[[7,[29,27]]]],[[29,[25,[24]]],[[7,[29,27]]]],[22,[[9,[38]]]],[30,[[9,[38]]]],0,0,0,0,0,0,0,[22,[[7,[[31,[27]],27]]]],[30,37],0,0,[[34,36,23],[[7,[[31,[30]],27]]]],0,0,[22,14],0,0,[[29,[25,[24]]],[[7,[27,27]]]],[[],7],[[],7],[[],7],[[],7],[[],7],[[],7],[[],7],[[],7],[[],7],[[],7],[[],20],[[],20],[[],20],[[],20],[[],20],[32,23],[[29,3],[[7,[30,27]]]],[22,23],0,[29,35],0,[[29,[25,[24]]],[[7,[27,27]]]],0,[[]],[[]],[[]],[[]],[[]],[37,11]],"p":[[8,"Any"],[3,"Command"],[15,"usize"],[3,"ArgMatches"],[3,"Args"],[6,"Error"],[4,"Result"],[3,"Id"],[4,"Option"],[6,"UniversalParam"],[8,"Future"],[3,"Box"],[3,"Pin"],[3,"PathBuf"],[4,"Reader"],[3,"Global"],[3,"Arc"],[3,"Rc"],[3,"SharedIO"],[3,"TypeId"],[15,"bool"],[3,"Keystore"],[3,"Url"],[15,"str"],[8,"AsRef"],[3,"Command"],[3,"String"],[8,"Fn"],[3,"CliClient"],[3,"Validator"],[3,"Vec"],[3,"Cdn"],[8,"Display"],[3,"Path"],[8,"Iterator"],[3,"UserPubKey"],[15,"u16"],[15,"u32"],[3,"EspressoCli"],[3,"OpenKeystore"]]}\
}');
if (typeof window !== 'undefined' && window.initSearch) {window.initSearch(searchIndex)};
if (typeof exports !== 'undefined') {exports.searchIndex = searchIndex};
