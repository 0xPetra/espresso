window.SIDEBAR_ITEMS = {"constant":[["DEFAULT_SECRET_KEY_SEED",""],["GENESIS_SEED",""],["MINIMUM_NODES",""]],"enum":[["ParseRatioError",""]],"fn":[["collect_reward_daemon",""],["default_store_path","Returns the default directory to store persistence files."],["gen_bootstrap_keys","Generate a list of private and public keys for `consensus_opt.bootstrap_nodes.len()` bootstrap keys, with a given `consensus_opt.seed` seed."],["gen_keys","Generate a list of private and public keys for the given number of nodes with a given `consensus_opt.seed` seed."],["genesis",""],["genesis_for_test",""],["get_secret_key_seed",""],["get_store_dir","Gets the directory to persistence files."],["init_hotshot","Creates the initial state and hotshot for simulation."],["init_validator",""],["new_libp2p_network","Create a new libp2p network."],["open_data_source",""],["parse_duration","Parse a [Duration] from a string using [ClDuration], converting to a [Snafu] error."],["parse_url","Parse a (url|ip):[0-9]+ into a multiaddr"],["project_path","Returns the project directory."],["run_consensus",""]],"mod":[["node_impl",""],["testing",""]],"struct":[["ConsensusOpt","Options for the validator connections during the consensus."],["InvalidDenominatorSnafu","SNAFU context selector for the `ParseRatioError::InvalidDenominator` variant"],["InvalidNumeratorSnafu","SNAFU context selector for the `ParseRatioError::InvalidNumerator` variant"],["KeyPair",""],["MissingDelimiterSnafu","SNAFU context selector for the `ParseRatioError::MissingDelimiter` variant"],["NodeOpt",""],["ParseDurationError",""],["ParseDurationSnafu","SNAFU context selector for the `ParseDurationError` error"],["Ratio",""],["SecretKeySeed",""]],"type":[["Consensus",""],["PLNetwork",""],["PLStorage",""]]};